{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RNText from \"react-native-web/dist/exports/Text\";\nimport Colors from \"../../style/colors\";\nimport Typography from \"../../style/typography\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport { WheelPicker } from \"../../nativeComponents\";\n\nvar WheelPickerDialog = function (_Component) {\n  _inherits(WheelPickerDialog, _Component);\n\n  var _super = _createSuper(WheelPickerDialog);\n\n  function WheelPickerDialog() {\n    var _this;\n\n    _classCallCheck(this, WheelPickerDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      initialSelectedValue: _this.props.selectedValue,\n      currentValue: false\n    };\n\n    _this.onValueChange = function (value, index) {\n      if (_this.props.onValueChange) {\n        _this.props.onValueChange(value, index);\n      }\n\n      _this.setState({\n        currentValue: value\n      });\n    };\n\n    _this.onSelect = function () {\n      if (_this.props.onSelect) {\n        _this.props.onSelect(_this.state.currentValue);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(WheelPickerDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          items = _this$props.items,\n          onCancel = _this$props.onCancel,\n          wheelPickerProps = _this$props.wheelPickerProps,\n          selectLabelStyle = _this$props.selectLabelStyle,\n          cancelLabelStyle = _this$props.cancelLabelStyle;\n      return React.createElement(View, {\n        style: styles.container,\n        \"bg-white\": true,\n        center: true\n      }, React.createElement(Text, {\n        style: styles.title\n      }, title), React.createElement(WheelPicker, _extends({\n        onValueChange: this.onValueChange,\n        selectedValue: this.state.currentValue || this.state.initialSelectedValue,\n        style: styles.picker\n      }, wheelPickerProps), items.map(function (item, idx) {\n        return React.createElement(WheelPicker.Item, {\n          key: String(idx) + String(item.value),\n          value: item.value,\n          label: item.label\n        });\n      })), React.createElement(View, {\n        style: styles.bottomButtonsContainer\n      }, React.createElement(TouchableOpacity, {\n        onPress: onCancel\n      }, React.createElement(Text, {\n        style: [styles.cancelButton, cancelLabelStyle],\n        \"text80-medium\": true\n      }, 'CANCEL')), React.createElement(TouchableOpacity, {\n        onPress: this.onSelect\n      }, React.createElement(Text, {\n        style: [styles.okButton, selectLabelStyle],\n        \"text80-medium\": true\n      }, 'OK'))));\n    }\n  }]);\n\n  return WheelPickerDialog;\n}(Component);\n\nWheelPickerDialog.displayName = 'IGNORE';\nWheelPickerDialog.propTypes = {\n  items: PropTypes.array,\n  selectedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  wheelPickerProps: PropTypes.shape(WheelPicker.propTypes),\n  selectLabelStyle: RNText.propTypes.style,\n  cancelLabelStyle: RNText.propTypes.style,\n  onCancel: PropTypes.func,\n  onSelect: PropTypes.func,\n  onValueChange: PropTypes.func\n};\nexport { WheelPickerDialog as default };\nvar styles = StyleSheet.create({\n  container: {\n    height: 295,\n    width: 280,\n    flex: 0,\n    alignSelf: 'center',\n    justifyContent: 'center'\n  },\n  title: _objectSpread(_objectSpread({\n    marginTop: 21,\n    marginLeft: 24\n  }, Typography.text60), {}, {\n    color: Colors.black,\n    alignSelf: 'flex-start'\n  }),\n  picker: {\n    marginTop: 24,\n    width: 56,\n    height: 148\n  },\n  bottomButtonsContainer: {\n    flexDirection: 'row',\n    flex: 0,\n    alignItems: 'center',\n    marginTop: 32,\n    marginBottom: 8,\n    marginLeft: 142\n  },\n  cancelButton: {\n    color: Colors.primary,\n    width: 75,\n    height: 36,\n    textAlign: 'center',\n    textAlignVertical: 'center'\n  },\n  okButton: {\n    color: Colors.primary,\n    width: 47,\n    height: 36,\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    marginHorizontal: 8\n  }\n});","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/wheelPickerDialog/index.js"],"names":["PropTypes","React","Component","Colors","Typography","View","Text","WheelPicker","WheelPickerDialog","state","initialSelectedValue","props","selectedValue","currentValue","onValueChange","value","index","setState","onSelect","title","items","onCancel","wheelPickerProps","selectLabelStyle","cancelLabelStyle","styles","container","picker","map","item","idx","String","label","bottomButtonsContainer","cancelButton","okButton","displayName","propTypes","array","oneOfType","string","number","shape","RNText","style","func","StyleSheet","create","height","width","flex","alignSelf","justifyContent","marginTop","marginLeft","text60","color","black","flexDirection","alignItems","marginBottom","primary","textAlign","textAlignVertical","marginHorizontal"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport {StyleSheet, TouchableOpacity, Text as RNText} from 'react-native';\nimport Colors from '../../style/colors';\nimport Typography from '../../style/typography';\nimport View from '../view';\nimport Text from '../text';\nimport {WheelPicker} from '../../nativeComponents';\n\n\nexport default class WheelPickerDialog extends Component {\n  static displayName = 'IGNORE';\n\n  static propTypes = {\n    /**\n     * Array of items as objects {value, label}\n     */\n    items: PropTypes.array,\n    /**\n     * The selected value\n     */\n    selectedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    /**\n     * The component's title\n     */\n    title: PropTypes.string,\n    /**\n     * Pass props for the WheelPicker (Android only)\n     */\n    wheelPickerProps: PropTypes.shape(WheelPicker.propTypes),\n    /**\n    * select label style\n    */\n    selectLabelStyle: RNText.propTypes.style,\n    /**\n    * cancel label style\n    */\n    cancelLabelStyle: RNText.propTypes.style,\n    /**\n     * onCancel callback invoked when 'Cancel' button is pressed\n     */\n    onCancel: PropTypes.func,\n    /**\n     * onSelect callback invoked when 'Ok' button is pressed\n     */\n    onSelect: PropTypes.func,\n    /**\n     * onValueChange callback invoked when the value in the wheel changes\n     */\n    onValueChange: PropTypes.func\n  }\n\n  state = {\n    initialSelectedValue: this.props.selectedValue,\n    currentValue: false\n  };\n\n  onValueChange = (value, index) => {\n    if (this.props.onValueChange) {\n      this.props.onValueChange(value, index);\n    }\n    this.setState({currentValue: value});\n  }\n\n  onSelect = () => {\n    if (this.props.onSelect) {\n      this.props.onSelect(this.state.currentValue);\n    }\n  }\n\n  render() {\n    const {title, items, onCancel, wheelPickerProps, selectLabelStyle, cancelLabelStyle} = this.props;\n    return (\n      <View style={styles.container} bg-white center>\n        <Text style={styles.title}>{title}</Text>\n\n        <WheelPicker\n          onValueChange={this.onValueChange}\n          selectedValue={this.state.currentValue || this.state.initialSelectedValue}\n          style={styles.picker}\n          {...wheelPickerProps}\n        >\n          {items.map((item, idx) => {\n            return <WheelPicker.Item key={String(idx) + String(item.value)} value={item.value} label={item.label}/>;\n          })}\n        </WheelPicker>\n\n        <View style={styles.bottomButtonsContainer}>\n          <TouchableOpacity onPress={onCancel}>\n            <Text style={[styles.cancelButton, cancelLabelStyle]} text80-medium>\n              {'CANCEL'}\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={this.onSelect}>\n            <Text style={[styles.okButton, selectLabelStyle]} text80-medium>\n              {'OK'}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 295,\n    width: 280,\n    flex: 0,\n    alignSelf: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    marginTop: 21,\n    marginLeft: 24,\n    ...Typography.text60,\n    color: Colors.black,\n    alignSelf: 'flex-start'\n  },\n  picker: {\n    marginTop: 24,\n    width: 56,\n    height: 148\n  },\n  bottomButtonsContainer: {\n    flexDirection: 'row',\n    flex: 0,\n    alignItems: 'center',\n    marginTop: 32,\n    marginBottom: 8,\n    marginLeft: 142\n  },\n  cancelButton: {\n    color: Colors.primary,\n    width: 75,\n    height: 36,\n    textAlign: 'center',\n    textAlignVertical: 'center'\n  },\n  okButton: {\n    color: Colors.primary,\n    width: 47,\n    height: 36,\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    marginHorizontal: 8\n  }\n});\n"]},"metadata":{},"sourceType":"module"}