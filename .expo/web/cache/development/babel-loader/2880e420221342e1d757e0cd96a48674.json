{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"onPress\", \"onLongPress\", \"style\", \"selected\", \"containerStyle\", \"enableBlur\", \"forwardedRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport _ from 'lodash';\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Constants } from \"../../helpers\";\nimport { Colors, BorderRadiuses } from \"../../style\";\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Image from \"../image\";\nimport CardImage from \"./CardImage\";\nimport CardSection, { CardSectionProps } from \"./CardSection\";\nimport { BlurViewPackage } from \"../../optionalDependencies\";\nimport Assets from \"../../assets\";\nimport CardContext from \"./CardContext\";\nimport * as CardPresenter from \"./CardPresenter\";\nvar BlurView = BlurViewPackage == null ? void 0 : BlurViewPackage.BlurView;\nvar DEFAULT_BORDER_RADIUS = BorderRadiuses.br40;\nvar DEFAULT_SELECTION_PROPS = {\n  borderWidth: 2,\n  color: Colors.primary,\n  indicatorSize: 20,\n  icon: Assets.icons.checkSmall,\n  iconColor: Colors.white,\n  hideIndicator: false\n};\nexport { CardSectionProps };\n\nvar Card = function (_PureComponent) {\n  _inherits(Card, _PureComponent);\n\n  var _super = _createSuper(Card);\n\n  function Card(props) {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    _this = _super.call(this, props);\n\n    _this.renderChildren = function () {\n      return React.Children.map(_this.children, function (child, index) {\n        var position = _this.calcChildPosition(index);\n\n        var borderStyle = CardPresenter.generateBorderRadiusStyle({\n          position: position,\n          borderRadius: _this.borderRadius\n        });\n        return React.createElement(CardContext.Provider, {\n          key: index,\n          value: {\n            position: position,\n            borderStyle: borderStyle\n          }\n        }, child);\n      });\n    };\n\n    _this.state = {\n      animatedSelected: new Animated.Value(Number(_this.props.selected))\n    };\n    _this.styles = createStyles(_this.props);\n\n    if (props.enableBlur && !BlurView) {\n      console.error(\"RNUILib Card's \\\"enableBlur\\\" prop requires installing \\\"@react-native-community/blur\\\" dependency\");\n    }\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.selected !== this.props.selected) {\n        this.animateSelection();\n      }\n    }\n  }, {\n    key: \"animateSelection\",\n    value: function animateSelection() {\n      var animatedSelected = this.state.animatedSelected;\n      var selected = this.props.selected;\n      Animated.timing(animatedSelected, {\n        toValue: Number(selected),\n        duration: 120,\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"getBlurOptions\",\n    value: function getBlurOptions() {\n      var blurOptions = this.props.blurOptions;\n      return _objectSpread({\n        blurType: 'light',\n        blurAmount: 5\n      }, blurOptions);\n    }\n  }, {\n    key: \"calcChildPosition\",\n    value: function calcChildPosition(childIndex) {\n      var row = this.props.row;\n      var childrenCount = React.Children.count(this.children);\n      var position = [];\n      var childLocation = childIndex;\n\n      if (childLocation === 0) {\n        position.push(row ? 'left' : 'top');\n      }\n\n      if (childLocation === childrenCount - 1) {\n        position.push(row ? 'right' : 'bottom');\n      }\n\n      return position;\n    }\n  }, {\n    key: \"elevationStyle\",\n    get: function get() {\n      var _this$props = this.props,\n          elevation = _this$props.elevation,\n          enableShadow = _this$props.enableShadow;\n\n      if (enableShadow) {\n        return {\n          elevation: elevation || 2\n        };\n      }\n    }\n  }, {\n    key: \"shadowStyle\",\n    get: function get() {\n      var enableShadow = this.props.enableShadow;\n\n      if (enableShadow) {\n        return this.styles.containerShadow;\n      }\n    }\n  }, {\n    key: \"backgroundStyle\",\n    get: function get() {\n      var _this$props2 = this.props,\n          enableBlur = _this$props2.enableBlur,\n          _this$props2$backgrou = _this$props2.backgroundColor,\n          backgroundColor = _this$props2$backgrou === void 0 ? Colors.white : _this$props2$backgrou;\n\n      if (Constants.isIOS && enableBlur) {\n        return {\n          backgroundColor: Colors.rgba(backgroundColor, 0.85)\n        };\n      } else {\n        return {\n          backgroundColor: backgroundColor\n        };\n      }\n    }\n  }, {\n    key: \"borderRadius\",\n    get: function get() {\n      var borderRadius = this.props.borderRadius;\n      return borderRadius === undefined ? DEFAULT_BORDER_RADIUS : borderRadius;\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      var children = this.props.children;\n      return React.Children.toArray(children).filter(function (child) {\n        return !_.isNull(child);\n      });\n    }\n  }, {\n    key: \"renderSelection\",\n    value: function renderSelection() {\n      var _this$props3 = this.props,\n          _this$props3$selectio = _this$props3.selectionOptions,\n          selectionOptions = _this$props3$selectio === void 0 ? {} : _this$props3$selectio,\n          selected = _this$props3.selected;\n      var animatedSelected = this.state.animatedSelected;\n\n      var selectionColor = _.get(selectionOptions, 'color', DEFAULT_SELECTION_PROPS.color);\n\n      if (_.isUndefined(selected)) {\n        return null;\n      }\n\n      return React.createElement(Animated.View, {\n        style: [this.styles.selectedBorder, {\n          borderColor: selectionColor\n        }, {\n          borderRadius: this.borderRadius\n        }, {\n          opacity: animatedSelected\n        }],\n        pointerEvents: \"none\"\n      }, !selectionOptions.hideIndicator && React.createElement(View, {\n        style: [this.styles.selectedIndicator, {\n          backgroundColor: selectionColor\n        }]\n      }, React.createElement(Image, {\n        style: this.styles.selectedIcon,\n        source: _.get(selectionOptions, 'icon', DEFAULT_SELECTION_PROPS.icon)\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          onPress = _this$props4.onPress,\n          onLongPress = _this$props4.onLongPress,\n          style = _this$props4.style,\n          selected = _this$props4.selected,\n          containerStyle = _this$props4.containerStyle,\n          enableBlur = _this$props4.enableBlur,\n          forwardedRef = _this$props4.forwardedRef,\n          others = _objectWithoutProperties(_this$props4, _excluded);\n\n      var blurOptions = this.getBlurOptions();\n      var Container = onPress || onLongPress ? TouchableOpacity : View;\n      var brRadius = this.borderRadius;\n      return React.createElement(Container, _extends({\n        style: [this.styles.container, {\n          borderRadius: brRadius\n        }, this.elevationStyle, this.shadowStyle, this.backgroundStyle, containerStyle, style],\n        onPress: onPress,\n        onLongPress: onLongPress,\n        delayPressIn: 10,\n        activeOpacity: 0.6,\n        accessibilityState: {\n          selected: selected\n        }\n      }, others, {\n        ref: forwardedRef\n      }), Constants.isIOS && enableBlur && BlurView && React.createElement(BlurView, _extends({\n        style: [this.styles.blurView, {\n          borderRadius: brRadius\n        }]\n      }, blurOptions)), this.renderChildren(), this.renderSelection());\n    }\n  }]);\n\n  return Card;\n}(PureComponent);\n\nCard.propTypes = {\n  width: _pt.oneOfType([_pt.number, _pt.string]),\n  height: _pt.oneOfType([_pt.number, _pt.string]),\n  row: _pt.bool,\n  borderRadius: _pt.number,\n  enableShadow: _pt.bool,\n  elevation: _pt.number,\n  enableBlur: _pt.bool,\n  blurOptions: _pt.object,\n  selected: _pt.bool,\n  selectionOptions: _pt.shape({\n    icon: _pt.number,\n    iconColor: _pt.string,\n    color: _pt.string,\n    borderWidth: _pt.number,\n    indicatorSize: _pt.number,\n    hideIndicator: _pt.bool\n  })\n};\nCard.displayName = 'Card';\nCard.defaultProps = {\n  enableShadow: true\n};\n\nfunction createStyles(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      borderRadius = _ref.borderRadius,\n      selectionOptions = _ref.selectionOptions;\n\n  var selectionOptionsWithDefaults = _objectSpread(_objectSpread({}, DEFAULT_SELECTION_PROPS), selectionOptions);\n\n  var brRadius = borderRadius === undefined ? DEFAULT_BORDER_RADIUS : borderRadius;\n  return StyleSheet.create({\n    container: {\n      width: width,\n      height: height,\n      overflow: 'visible',\n      borderRadius: brRadius\n    },\n    containerShadow: {\n      shadowColor: Colors.grey40,\n      shadowOpacity: 0.25,\n      shadowRadius: 12,\n      shadowOffset: {\n        height: 5,\n        width: 0\n      }\n    },\n    blurView: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      borderRadius: brRadius\n    }),\n    selectedBorder: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      borderRadius: DEFAULT_BORDER_RADIUS,\n      borderWidth: selectionOptionsWithDefaults.borderWidth,\n      borderColor: selectionOptionsWithDefaults.color\n    }),\n    selectedIndicator: {\n      borderRadius: BorderRadiuses.br100,\n      position: 'absolute',\n      top: -selectionOptionsWithDefaults.indicatorSize / 2 + 2,\n      right: -selectionOptionsWithDefaults.indicatorSize / 2 + 1,\n      width: selectionOptionsWithDefaults.indicatorSize,\n      height: selectionOptionsWithDefaults.indicatorSize,\n      backgroundColor: selectionOptionsWithDefaults.color,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    selectedIcon: {\n      tintColor: selectionOptionsWithDefaults.iconColor\n    }\n  });\n}\n\nCard.Image = CardImage;\nCard.Section = CardSection;\nexport default asBaseComponent(forwardRef(Card));","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/card/index.js"],"names":["_pt","_","React","PureComponent","Constants","Colors","BorderRadiuses","asBaseComponent","forwardRef","View","TouchableOpacity","Image","CardImage","CardSection","CardSectionProps","BlurViewPackage","Assets","CardContext","CardPresenter","BlurView","DEFAULT_BORDER_RADIUS","br40","DEFAULT_SELECTION_PROPS","borderWidth","color","primary","indicatorSize","icon","icons","checkSmall","iconColor","white","hideIndicator","Card","props","renderChildren","Children","map","children","child","index","position","calcChildPosition","borderStyle","generateBorderRadiusStyle","borderRadius","state","animatedSelected","Animated","Value","Number","selected","styles","createStyles","enableBlur","console","error","prevProps","animateSelection","timing","toValue","duration","useNativeDriver","start","blurOptions","blurType","blurAmount","childIndex","row","childrenCount","count","childLocation","push","elevation","enableShadow","containerShadow","backgroundColor","isIOS","rgba","undefined","toArray","filter","isNull","selectionOptions","selectionColor","get","isUndefined","selectedBorder","borderColor","opacity","selectedIndicator","selectedIcon","onPress","onLongPress","style","containerStyle","forwardedRef","others","getBlurOptions","Container","brRadius","container","elevationStyle","shadowStyle","backgroundStyle","blurView","renderSelection","propTypes","width","oneOfType","number","string","height","bool","object","shape","displayName","defaultProps","selectionOptionsWithDefaults","StyleSheet","create","overflow","shadowColor","grey40","shadowOpacity","shadowRadius","shadowOffset","absoluteFillObject","br100","top","right","alignItems","justifyContent","tintColor","Section"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;;AAEA,SAASC,SAAT;AACA,SAASC,MAAT,EAAiBC,cAAjB;AAEA,SAASC,eAAT,EAA0BC,UAA1B;AACA,OAAOC,IAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,KAAP;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP,IAAsBC,gBAAtB;AACA,SAASC,eAAT;AAEA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,OAAO,KAAKC,aAAZ;AACA,IAAMC,QAAQ,GAAGJ,eAAH,oBAAGA,eAAe,CAAEI,QAAlC;AACA,IAAMC,qBAAqB,GAAGd,cAAc,CAACe,IAA7C;AACA,IAAMC,uBAAuB,GAAG;AAC9BC,EAAAA,WAAW,EAAE,CADiB;AAE9BC,EAAAA,KAAK,EAAEnB,MAAM,CAACoB,OAFgB;AAG9BC,EAAAA,aAAa,EAAE,EAHe;AAI9BC,EAAAA,IAAI,EAAEX,MAAM,CAACY,KAAP,CAAaC,UAJW;AAK9BC,EAAAA,SAAS,EAAEzB,MAAM,CAAC0B,KALY;AAM9BC,EAAAA,aAAa,EAAE;AANe,CAAhC;AAQA,SAASlB,gBAAT;;IAWMmB,I;;;;;AAgEJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAqJnBC,cArJmB,GAqJF,YAAM;AACrB,aAAOjC,KAAK,CAACkC,QAAN,CAAeC,GAAf,CAAmB,MAAKC,QAAxB,EAAkC,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACzD,YAAMC,QAAQ,GAAG,MAAKC,iBAAL,CAAuBF,KAAvB,CAAjB;;AACA,YAAMG,WAAW,GAAGzB,aAAa,CAAC0B,yBAAd,CAAwC;AAC1DH,UAAAA,QAAQ,EAARA,QAD0D;AAE1DI,UAAAA,YAAY,EAAE,MAAKA;AAFuC,SAAxC,CAApB;AAIA,eAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,UAAA,GAAG,EAAEL,KAA3B;AAAkC,UAAA,KAAK,EAAE;AAC9CC,YAAAA,QAAQ,EAARA,QAD8C;AAE9CE,YAAAA,WAAW,EAAXA;AAF8C;AAAzC,WAIFJ,KAJE,CAAP;AAMD,OAZM,CAAP;AAaD,KAnKkB;;AAEjB,UAAKO,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE,IAAIC,QAAQ,CAACC,KAAb,CAAmBC,MAAM,CAAC,MAAKhB,KAAL,CAAWiB,QAAZ,CAAzB;AADP,KAAb;AAGA,UAAKC,MAAL,GAAcC,YAAY,CAAC,MAAKnB,KAAN,CAA1B;;AAEA,QAAIA,KAAK,CAACoB,UAAN,IAAoB,CAACnC,QAAzB,EAAmC;AACjCoC,MAAAA,OAAO,CAACC,KAAR;AACD;;AATgB;AAUlB;;;;WAED,4BAAmBC,SAAnB,EAA8B;AAC5B,UAAIA,SAAS,CAACN,QAAV,KAAuB,KAAKjB,KAAL,CAAWiB,QAAtC,EAAgD;AAC9C,aAAKO,gBAAL;AACD;AACF;;;WAED,4BAAmB;AACjB,UACEX,gBADF,GAEI,KAAKD,KAFT,CACEC,gBADF;AAGA,UACEI,QADF,GAEI,KAAKjB,KAFT,CACEiB,QADF;AAGAH,MAAAA,QAAQ,CAACW,MAAT,CAAgBZ,gBAAhB,EAAkC;AAChCa,QAAAA,OAAO,EAAEV,MAAM,CAACC,QAAD,CADiB;AAEhCU,QAAAA,QAAQ,EAAE,GAFsB;AAGhCC,QAAAA,eAAe,EAAE;AAHe,OAAlC,EAIGC,KAJH;AAKD;;;WAED,0BAAiB;AACf,UACEC,WADF,GAEI,KAAK9B,KAFT,CACE8B,WADF;AAGA;AACEC,QAAAA,QAAQ,EAAE,OADZ;AAEEC,QAAAA,UAAU,EAAE;AAFd,SAGKF,WAHL;AAKD;;;WAGD,2BAAkBG,UAAlB,EAA8B;AAC5B,UACEC,GADF,GAEI,KAAKlC,KAFT,CACEkC,GADF;AAGA,UAAMC,aAAa,GAAGnE,KAAK,CAACkC,QAAN,CAAekC,KAAf,CAAqB,KAAKhC,QAA1B,CAAtB;AACA,UAAMG,QAAQ,GAAG,EAAjB;AACA,UAAM8B,aAAa,GAAGJ,UAAtB;;AAEA,UAAII,aAAa,KAAK,CAAtB,EAAyB;AACvB9B,QAAAA,QAAQ,CAAC+B,IAAT,CAAcJ,GAAG,GAAG,MAAH,GAAY,KAA7B;AACD;;AAED,UAAIG,aAAa,KAAKF,aAAa,GAAG,CAAtC,EAAyC;AACvC5B,QAAAA,QAAQ,CAAC+B,IAAT,CAAcJ,GAAG,GAAG,OAAH,GAAa,QAA9B;AACD;;AAED,aAAO3B,QAAP;AACD;;;SAED,eAAqB;AACnB,wBAGI,KAAKP,KAHT;AAAA,UACEuC,SADF,eACEA,SADF;AAAA,UAEEC,YAFF,eAEEA,YAFF;;AAKA,UAAIA,YAAJ,EAAkB;AAChB,eAAO;AACLD,UAAAA,SAAS,EAAEA,SAAS,IAAI;AADnB,SAAP;AAGD;AACF;;;SAED,eAAkB;AAChB,UACEC,YADF,GAEI,KAAKxC,KAFT,CACEwC,YADF;;AAIA,UAAIA,YAAJ,EAAkB;AAChB,eAAO,KAAKtB,MAAL,CAAYuB,eAAnB;AACD;AACF;;;SAED,eAAsB;AACpB,yBAGI,KAAKzC,KAHT;AAAA,UACEoB,UADF,gBACEA,UADF;AAAA,+CAEEsB,eAFF;AAAA,UAEEA,eAFF,sCAEoBvE,MAAM,CAAC0B,KAF3B;;AAKA,UAAI3B,SAAS,CAACyE,KAAV,IAAmBvB,UAAvB,EAAmC;AACjC,eAAO;AACLsB,UAAAA,eAAe,EAAEvE,MAAM,CAACyE,IAAP,CAAYF,eAAZ,EAA6B,IAA7B;AADZ,SAAP;AAGD,OAJD,MAIO;AACL,eAAO;AACLA,UAAAA,eAAe,EAAfA;AADK,SAAP;AAGD;AACF;;;SAED,eAAmB;AACjB,UACE/B,YADF,GAEI,KAAKX,KAFT,CACEW,YADF;AAGA,aAAOA,YAAY,KAAKkC,SAAjB,GAA6B3D,qBAA7B,GAAqDyB,YAA5D;AACD;;;SAED,eAAe;AACb,UACEP,QADF,GAEI,KAAKJ,KAFT,CACEI,QADF;AAGA,aAAOpC,KAAK,CAACkC,QAAN,CAAe4C,OAAf,CAAuB1C,QAAvB,EAAiC2C,MAAjC,CAAwC,UAAA1C,KAAK,EAAI;AACtD,eAAO,CAACtC,CAAC,CAACiF,MAAF,CAAS3C,KAAT,CAAR;AACD,OAFM,CAAP;AAGD;;;WAED,2BAAkB;AAChB,yBAGI,KAAKL,KAHT;AAAA,+CACEiD,gBADF;AAAA,UACEA,gBADF,sCACqB,EADrB;AAAA,UAEEhC,QAFF,gBAEEA,QAFF;AAIA,UACEJ,gBADF,GAEI,KAAKD,KAFT,CACEC,gBADF;;AAIA,UAAMqC,cAAc,GAAGnF,CAAC,CAACoF,GAAF,CAAMF,gBAAN,EAAwB,OAAxB,EAAiC7D,uBAAuB,CAACE,KAAzD,CAAvB;;AAEA,UAAIvB,CAAC,CAACqF,WAAF,CAAcnC,QAAd,CAAJ,EAA6B;AAC3B,eAAO,IAAP;AACD;;AAED,aAAO,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE,CAAC,KAAKC,MAAL,CAAYmC,cAAb,EAA6B;AACxDC,UAAAA,WAAW,EAAEJ;AAD2C,SAA7B,EAE1B;AACDvC,UAAAA,YAAY,EAAE,KAAKA;AADlB,SAF0B,EAI1B;AACD4C,UAAAA,OAAO,EAAE1C;AADR,SAJ0B,CAAtB;AAMH,QAAA,aAAa,EAAC;AANX,SAOF,CAACoC,gBAAgB,CAACnD,aAAlB,IAAmC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC,KAAKoB,MAAL,CAAYsC,iBAAb,EAAgC;AACjFd,UAAAA,eAAe,EAAEQ;AADgE,SAAhC;AAAb,SAGhC,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKhC,MAAL,CAAYuC,YAA1B;AAAwC,QAAA,MAAM,EAAE1F,CAAC,CAACoF,GAAF,CAAMF,gBAAN,EAAwB,MAAxB,EAAgC7D,uBAAuB,CAACK,IAAxD;AAAhD,QAHgC,CAPjC,CAAP;AAaD;;;WAkBD,kBAAS;AACP,yBASI,KAAKO,KATT;AAAA,UACE0D,OADF,gBACEA,OADF;AAAA,UAEEC,WAFF,gBAEEA,WAFF;AAAA,UAGEC,KAHF,gBAGEA,KAHF;AAAA,UAIE3C,QAJF,gBAIEA,QAJF;AAAA,UAKE4C,cALF,gBAKEA,cALF;AAAA,UAMEzC,UANF,gBAMEA,UANF;AAAA,UAOE0C,YAPF,gBAOEA,YAPF;AAAA,UAQKC,MARL;;AAUA,UAAMjC,WAAW,GAAG,KAAKkC,cAAL,EAApB;AACA,UAAMC,SAAS,GAAGP,OAAO,IAAIC,WAAX,GAAyBnF,gBAAzB,GAA4CD,IAA9D;AACA,UAAM2F,QAAQ,GAAG,KAAKvD,YAAtB;AACA,aAAO,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,CAAC,KAAKO,MAAL,CAAYiD,SAAb,EAAwB;AAC/CxD,UAAAA,YAAY,EAAEuD;AADiC,SAAxB,EAEtB,KAAKE,cAFiB,EAED,KAAKC,WAFJ,EAEiB,KAAKC,eAFtB,EAEuCT,cAFvC,EAEuDD,KAFvD,CAAlB;AAEiF,QAAA,OAAO,EAAEF,OAF1F;AAEmG,QAAA,WAAW,EAAEC,WAFhH;AAE6H,QAAA,YAAY,EAAE,EAF3I;AAE+I,QAAA,aAAa,EAAE,GAF9J;AAEmK,QAAA,kBAAkB,EAAE;AAC5L1C,UAAAA,QAAQ,EAARA;AAD4L;AAFvL,SAIA8C,MAJA;AAIQ,QAAA,GAAG,EAAED;AAJb,UAKF5F,SAAS,CAACyE,KAAV,IAAmBvB,UAAnB,IAAiCnC,QAAjC,IACH,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAC,KAAKiC,MAAL,CAAYqD,QAAb,EAAuB;AACtC5D,UAAAA,YAAY,EAAEuD;AADwB,SAAvB;AAAjB,SAEQpC,WAFR,EANK,EAUF,KAAK7B,cAAL,EAVE,EAWF,KAAKuE,eAAL,EAXE,CAAP;AAaD;;;;EAhQgBvG,a;;AAAb8B,I,CACG0E,S,GAAY;AAIjBC,EAAAA,KAAK,EAAE5G,GAAG,CAAC6G,SAAJ,CAAc,CAAC7G,GAAG,CAAC8G,MAAL,EAAa9G,GAAG,CAAC+G,MAAjB,CAAd,CAJU;AASjBC,EAAAA,MAAM,EAAEhH,GAAG,CAAC6G,SAAJ,CAAc,CAAC7G,GAAG,CAAC8G,MAAL,EAAa9G,GAAG,CAAC+G,MAAjB,CAAd,CATS;AAcjB3C,EAAAA,GAAG,EAAEpE,GAAG,CAACiH,IAdQ;AAmBjBpE,EAAAA,YAAY,EAAE7C,GAAG,CAAC8G,MAnBD;AAwBjBpC,EAAAA,YAAY,EAAE1E,GAAG,CAACiH,IAxBD;AA6BjBxC,EAAAA,SAAS,EAAEzE,GAAG,CAAC8G,MA7BE;AAkCjBxD,EAAAA,UAAU,EAAEtD,GAAG,CAACiH,IAlCC;AAuCjBjD,EAAAA,WAAW,EAAEhE,GAAG,CAACkH,MAvCA;AA4CjB/D,EAAAA,QAAQ,EAAEnD,GAAG,CAACiH,IA5CG;AAiDjB9B,EAAAA,gBAAgB,EAAEnF,GAAG,CAACmH,KAAJ,CAAU;AAC1BxF,IAAAA,IAAI,EAAE3B,GAAG,CAAC8G,MADgB;AAE1BhF,IAAAA,SAAS,EAAE9B,GAAG,CAAC+G,MAFW;AAG1BvF,IAAAA,KAAK,EAAExB,GAAG,CAAC+G,MAHe;AAI1BxF,IAAAA,WAAW,EAAEvB,GAAG,CAAC8G,MAJS;AAK1BpF,IAAAA,aAAa,EAAE1B,GAAG,CAAC8G,MALO;AAM1B9E,IAAAA,aAAa,EAAEhC,GAAG,CAACiH;AANO,GAAV;AAjDD,C;AADfhF,I,CA2DGmF,W,GAAc,M;AA3DjBnF,I,CA4DGoF,Y,GAAe;AACpB3C,EAAAA,YAAY,EAAE;AADM,C;;AAwMxB,SAASrB,YAAT,OAKG;AAAA,MAJDuD,KAIC,QAJDA,KAIC;AAAA,MAHDI,MAGC,QAHDA,MAGC;AAAA,MAFDnE,YAEC,QAFDA,YAEC;AAAA,MADDsC,gBACC,QADDA,gBACC;;AACD,MAAMmC,4BAA4B,mCAAQhG,uBAAR,GAC7B6D,gBAD6B,CAAlC;;AAGA,MAAMiB,QAAQ,GAAGvD,YAAY,KAAKkC,SAAjB,GAA6B3D,qBAA7B,GAAqDyB,YAAtE;AACA,SAAO0E,UAAU,CAACC,MAAX,CAAkB;AACvBnB,IAAAA,SAAS,EAAE;AACTO,MAAAA,KAAK,EAALA,KADS;AAETI,MAAAA,MAAM,EAANA,MAFS;AAGTS,MAAAA,QAAQ,EAAE,SAHD;AAIT5E,MAAAA,YAAY,EAAEuD;AAJL,KADY;AAOvBzB,IAAAA,eAAe,EAAE;AAEf+C,MAAAA,WAAW,EAAErH,MAAM,CAACsH,MAFL;AAGfC,MAAAA,aAAa,EAAE,IAHA;AAIfC,MAAAA,YAAY,EAAE,EAJC;AAKfC,MAAAA,YAAY,EAAE;AACZd,QAAAA,MAAM,EAAE,CADI;AAEZJ,QAAAA,KAAK,EAAE;AAFK;AALC,KAPM;AAiBvBH,IAAAA,QAAQ,kCAAOc,UAAU,CAACQ,kBAAlB;AACNlF,MAAAA,YAAY,EAAEuD;AADR,MAjBe;AAoBvBb,IAAAA,cAAc,kCAAOgC,UAAU,CAACQ,kBAAlB;AACZlF,MAAAA,YAAY,EAAEzB,qBADF;AAEZG,MAAAA,WAAW,EAAE+F,4BAA4B,CAAC/F,WAF9B;AAGZiE,MAAAA,WAAW,EAAE8B,4BAA4B,CAAC9F;AAH9B,MApBS;AAyBvBkE,IAAAA,iBAAiB,EAAE;AACjB7C,MAAAA,YAAY,EAAEvC,cAAc,CAAC0H,KADZ;AAEjBvF,MAAAA,QAAQ,EAAE,UAFO;AAGjBwF,MAAAA,GAAG,EAAE,CAACX,4BAA4B,CAAC5F,aAA9B,GAA8C,CAA9C,GAAkD,CAHtC;AAIjBwG,MAAAA,KAAK,EAAE,CAACZ,4BAA4B,CAAC5F,aAA9B,GAA8C,CAA9C,GAAkD,CAJxC;AAKjBkF,MAAAA,KAAK,EAAEU,4BAA4B,CAAC5F,aALnB;AAMjBsF,MAAAA,MAAM,EAAEM,4BAA4B,CAAC5F,aANpB;AAOjBkD,MAAAA,eAAe,EAAE0C,4BAA4B,CAAC9F,KAP7B;AAQjB2G,MAAAA,UAAU,EAAE,QARK;AASjBC,MAAAA,cAAc,EAAE;AATC,KAzBI;AAoCvBzC,IAAAA,YAAY,EAAE;AACZ0C,MAAAA,SAAS,EAAEf,4BAA4B,CAACxF;AAD5B;AApCS,GAAlB,CAAP;AAwCD;;AAEDG,IAAI,CAACtB,KAAL,GAAaC,SAAb;AACAqB,IAAI,CAACqG,OAAL,GAAezH,WAAf;AACA,eAAeN,eAAe,CAACC,UAAU,CAACyB,IAAD,CAAX,CAA9B","sourcesContent":["import _pt from \"prop-types\";\nimport _ from 'lodash';\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, Animated } from 'react-native';\nimport { Constants } from \"../../helpers\";\nimport { Colors, BorderRadiuses } from \"../../style\"; // import {PureBaseComponent} from '../../commons';\n\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Image from \"../image\";\nimport CardImage from \"./CardImage\";\nimport CardSection, { CardSectionProps } from \"./CardSection\";\nimport { BlurViewPackage } from \"../../optionalDependencies\"; // @ts-ignore\n\nimport Assets from \"../../assets\";\nimport CardContext from \"./CardContext\";\nimport * as CardPresenter from \"./CardPresenter\";\nconst BlurView = BlurViewPackage?.BlurView;\nconst DEFAULT_BORDER_RADIUS = BorderRadiuses.br40;\nconst DEFAULT_SELECTION_PROPS = {\n  borderWidth: 2,\n  color: Colors.primary,\n  indicatorSize: 20,\n  icon: Assets.icons.checkSmall,\n  iconColor: Colors.white,\n  hideIndicator: false\n};\nexport { CardSectionProps };\n\n/**\n * @description: Card component\n * @extends: TouchableOpacity\n * @modifiers: margin, padding\n * @image: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Card/Cards_01.png?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Card/Cards_02.png?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Card/Cards_03.png?raw=true\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Card/Card_Selecteable.gif, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Card/Cards_activeScale.gif?raw=true\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.tsx\n * @notes: 'enableBlur' prop requires installing the '@react-native-community/blur' native library\n */\nclass Card extends PureComponent {\n  static propTypes = {\n    /**\n         * card custom width\n         */\n    width: _pt.oneOfType([_pt.number, _pt.string]),\n\n    /**\n         * card custom height\n         */\n    height: _pt.oneOfType([_pt.number, _pt.string]),\n\n    /**\n         * should inner card flow direction be horizontal\n         */\n    row: _pt.bool,\n\n    /**\n         * card border radius (will be passed to inner Card.Image component)\n         */\n    borderRadius: _pt.number,\n\n    /**\n         * whether the card should have shadow or not\n         */\n    enableShadow: _pt.bool,\n\n    /**\n         * elevation value (Android only)\n         */\n    elevation: _pt.number,\n\n    /**\n         * enable blur effect (iOS only)\n         */\n    enableBlur: _pt.bool,\n\n    /**\n         * blur option for blur effect according to @react-native-community/blur lib (make sure enableBlur is on)\n         */\n    blurOptions: _pt.object,\n\n    /**\n         * Adds visual indication that the card is selected\n         */\n    selected: _pt.bool,\n\n    /**\n         * Custom options for styling the selection indication\n         */\n    selectionOptions: _pt.shape({\n      icon: _pt.number,\n      iconColor: _pt.string,\n      color: _pt.string,\n      borderWidth: _pt.number,\n      indicatorSize: _pt.number,\n      hideIndicator: _pt.bool\n    })\n  };\n  static displayName = 'Card';\n  static defaultProps = {\n    enableShadow: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      animatedSelected: new Animated.Value(Number(this.props.selected))\n    };\n    this.styles = createStyles(this.props);\n\n    if (props.enableBlur && !BlurView) {\n      console.error(`RNUILib Card's \"enableBlur\" prop requires installing \"@react-native-community/blur\" dependency`);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selected !== this.props.selected) {\n      this.animateSelection();\n    }\n  }\n\n  animateSelection() {\n    const {\n      animatedSelected\n    } = this.state;\n    const {\n      selected\n    } = this.props;\n    Animated.timing(animatedSelected, {\n      toValue: Number(selected),\n      duration: 120,\n      useNativeDriver: true\n    }).start();\n  }\n\n  getBlurOptions() {\n    const {\n      blurOptions\n    } = this.props;\n    return {\n      blurType: 'light',\n      blurAmount: 5,\n      ...blurOptions\n    };\n  } // todo: add unit test\n\n\n  calcChildPosition(childIndex) {\n    const {\n      row\n    } = this.props;\n    const childrenCount = React.Children.count(this.children);\n    const position = [];\n    const childLocation = childIndex;\n\n    if (childLocation === 0) {\n      position.push(row ? 'left' : 'top');\n    }\n\n    if (childLocation === childrenCount - 1) {\n      position.push(row ? 'right' : 'bottom');\n    }\n\n    return position;\n  }\n\n  get elevationStyle() {\n    const {\n      elevation,\n      enableShadow\n    } = this.props;\n\n    if (enableShadow) {\n      return {\n        elevation: elevation || 2\n      };\n    }\n  }\n\n  get shadowStyle() {\n    const {\n      enableShadow\n    } = this.props;\n\n    if (enableShadow) {\n      return this.styles.containerShadow;\n    }\n  }\n\n  get backgroundStyle() {\n    const {\n      enableBlur,\n      backgroundColor = Colors.white\n    } = this.props;\n\n    if (Constants.isIOS && enableBlur) {\n      return {\n        backgroundColor: Colors.rgba(backgroundColor, 0.85)\n      };\n    } else {\n      return {\n        backgroundColor\n      };\n    }\n  }\n\n  get borderRadius() {\n    const {\n      borderRadius\n    } = this.props;\n    return borderRadius === undefined ? DEFAULT_BORDER_RADIUS : borderRadius;\n  }\n\n  get children() {\n    const {\n      children\n    } = this.props;\n    return React.Children.toArray(children).filter(child => {\n      return !_.isNull(child);\n    });\n  }\n\n  renderSelection() {\n    const {\n      selectionOptions = {},\n      selected\n    } = this.props;\n    const {\n      animatedSelected\n    } = this.state;\n\n    const selectionColor = _.get(selectionOptions, 'color', DEFAULT_SELECTION_PROPS.color);\n\n    if (_.isUndefined(selected)) {\n      return null;\n    }\n\n    return <Animated.View style={[this.styles.selectedBorder, {\n      borderColor: selectionColor\n    }, {\n      borderRadius: this.borderRadius\n    }, {\n      opacity: animatedSelected\n    }]} pointerEvents=\"none\">\n        {!selectionOptions.hideIndicator && <View style={[this.styles.selectedIndicator, {\n        backgroundColor: selectionColor\n      }]}>\n            <Image style={this.styles.selectedIcon} source={_.get(selectionOptions, 'icon', DEFAULT_SELECTION_PROPS.icon)} />\n          </View>}\n      </Animated.View>;\n  }\n\n  renderChildren = () => {\n    return React.Children.map(this.children, (child, index) => {\n      const position = this.calcChildPosition(index);\n      const borderStyle = CardPresenter.generateBorderRadiusStyle({\n        position,\n        borderRadius: this.borderRadius\n      });\n      return <CardContext.Provider key={index} value={{\n        position,\n        borderStyle\n      }}>\n          {child}\n        </CardContext.Provider>;\n    });\n  };\n\n  render() {\n    const {\n      onPress,\n      onLongPress,\n      style,\n      selected,\n      containerStyle,\n      enableBlur,\n      forwardedRef,\n      ...others\n    } = this.props;\n    const blurOptions = this.getBlurOptions();\n    const Container = onPress || onLongPress ? TouchableOpacity : View;\n    const brRadius = this.borderRadius;\n    return <Container style={[this.styles.container, {\n      borderRadius: brRadius\n    }, this.elevationStyle, this.shadowStyle, this.backgroundStyle, containerStyle, style]} onPress={onPress} onLongPress={onLongPress} delayPressIn={10} activeOpacity={0.6} accessibilityState={{\n      selected\n    }} {...others} ref={forwardedRef}>\n        {Constants.isIOS && enableBlur && BlurView && // @ts-ignore\n      <BlurView style={[this.styles.blurView, {\n        borderRadius: brRadius\n      }]} {...blurOptions} />}\n\n        {this.renderChildren()}\n        {this.renderSelection()}\n      </Container>;\n  }\n\n}\n\nfunction createStyles({\n  width,\n  height,\n  borderRadius,\n  selectionOptions\n}) {\n  const selectionOptionsWithDefaults = { ...DEFAULT_SELECTION_PROPS,\n    ...selectionOptions\n  };\n  const brRadius = borderRadius === undefined ? DEFAULT_BORDER_RADIUS : borderRadius;\n  return StyleSheet.create({\n    container: {\n      width,\n      height,\n      overflow: 'visible',\n      borderRadius: brRadius\n    },\n    containerShadow: {\n      // sh30 bottom\n      shadowColor: Colors.grey40,\n      shadowOpacity: 0.25,\n      shadowRadius: 12,\n      shadowOffset: {\n        height: 5,\n        width: 0\n      }\n    },\n    blurView: { ...StyleSheet.absoluteFillObject,\n      borderRadius: brRadius\n    },\n    selectedBorder: { ...StyleSheet.absoluteFillObject,\n      borderRadius: DEFAULT_BORDER_RADIUS,\n      borderWidth: selectionOptionsWithDefaults.borderWidth,\n      borderColor: selectionOptionsWithDefaults.color\n    },\n    selectedIndicator: {\n      borderRadius: BorderRadiuses.br100,\n      position: 'absolute',\n      top: -selectionOptionsWithDefaults.indicatorSize / 2 + 2,\n      right: -selectionOptionsWithDefaults.indicatorSize / 2 + 1,\n      width: selectionOptionsWithDefaults.indicatorSize,\n      height: selectionOptionsWithDefaults.indicatorSize,\n      backgroundColor: selectionOptionsWithDefaults.color,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    selectedIcon: {\n      tintColor: selectionOptionsWithDefaults.iconColor\n    }\n  });\n}\n\nCard.Image = CardImage;\nCard.Section = CardSection;\nexport default asBaseComponent(forwardRef(Card));"]},"metadata":{},"sourceType":"module"}