{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\n\nvar FakeStateScreenForDocs = function (_PureComponent) {\n  _inherits(FakeStateScreenForDocs, _PureComponent);\n\n  var _super = _createSuper(FakeStateScreenForDocs);\n\n  function FakeStateScreenForDocs() {\n    _classCallCheck(this, FakeStateScreenForDocs);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FakeStateScreenForDocs, [{\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return FakeStateScreenForDocs;\n}(PureComponent);\n\nFakeStateScreenForDocs.propTypes = {\n  title: _pt.string.isRequired,\n  subtitle: _pt.oneOfType([_pt.string, _pt.node]),\n  ctaLabel: _pt.string,\n  onCtaPress: _pt.func,\n  testId: _pt.string,\n  testID: _pt.string\n};\nFakeStateScreenForDocs.displayName = 'StateScreen';","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/√Årea de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/stateScreen/types.js"],"names":["_pt","React","PureComponent","FakeStateScreenForDocs","propTypes","title","string","isRequired","subtitle","oneOfType","node","ctaLabel","onCtaPress","func","testId","testID","displayName"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;IAQMC,sB;;;;;;;;;;;;;WAiCJ,kBAAS;AACP,aAAO,IAAP;AACD;;;;EAnCkCD,a;;AAA/BC,sB,CACGC,S,GAAY;AAMjBC,EAAAA,KAAK,EAAEL,GAAG,CAACM,MAAJ,CAAWC,UAND;AAWjBC,EAAAA,QAAQ,EAAER,GAAG,CAACS,SAAJ,CAAc,CAACT,GAAG,CAACM,MAAL,EAAaN,GAAG,CAACU,IAAjB,CAAd,CAXO;AAgBjBC,EAAAA,QAAQ,EAAEX,GAAG,CAACM,MAhBG;AAqBjBM,EAAAA,UAAU,EAAEZ,GAAG,CAACa,IArBC;AA0BjBC,EAAAA,MAAM,EAAEd,GAAG,CAACM,MA1BK;AA2BjBS,EAAAA,MAAM,EAAEf,GAAG,CAACM;AA3BK,C;AADfH,sB,CA+BGa,W,GAAc,a","sourcesContent":["import _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\n\n/**\n * @description: Component that shows a full screen for a certain state, like an empty state\n * @image: https://user-images.githubusercontent.com/33805983/34672894-f262ab84-f488-11e7-83f0-4ee0f0ac34ba.png\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/EmptyStateScreen.tsx\n */\n// @ts-ignore\nclass FakeStateScreenForDocs extends PureComponent {\n  static propTypes = {\n    /**\n       * To to show as the title\n       */\n\n    /* TODO: remove after deprecation*/\n    title: _pt.string.isRequired,\n\n    /**\n       * Text to to show as the subtitle\n       */\n    subtitle: _pt.oneOfType([_pt.string, _pt.node]),\n\n    /**\n       * Text to to show in the \"call to action\" button\n       */\n    ctaLabel: _pt.string,\n\n    /**\n       * Action handler for \"call to action\" button\n       */\n    onCtaPress: _pt.func,\n\n    /**\n       * Use to identify the container in tests\n       */\n    testId: _pt.string,\n    testID: _pt.string\n  };\n  // eslint-disable-line\n  static displayName = 'StateScreen';\n\n  render() {\n    return null;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}