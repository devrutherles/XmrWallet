{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\n\nvar FakeLoaderScreenForDocs = function (_PureComponent) {\n  _inherits(FakeLoaderScreenForDocs, _PureComponent);\n\n  var _super = _createSuper(FakeLoaderScreenForDocs);\n\n  function FakeLoaderScreenForDocs() {\n    _classCallCheck(this, FakeLoaderScreenForDocs);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FakeLoaderScreenForDocs, [{\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return FakeLoaderScreenForDocs;\n}(PureComponent);\n\nFakeLoaderScreenForDocs.propTypes = {\n  loaderColor: _pt.string,\n  backgroundColor: _pt.string,\n  message: _pt.string,\n  overlay: _pt.bool\n};\nFakeLoaderScreenForDocs.displayName = 'LoaderScreen';","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/√Årea de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/loaderScreen/types.js"],"names":["_pt","React","PureComponent","FakeLoaderScreenForDocs","propTypes","loaderColor","string","backgroundColor","message","overlay","bool","displayName"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;IAOMC,uB;;;;;;;;;;;;;WAyBJ,kBAAS;AACP,aAAO,IAAP;AACD;;;;EA3BmCD,a;;AAAhCC,uB,CACGC,S,GAAY;AAIjBC,EAAAA,WAAW,EAAEL,GAAG,CAACM,MAJA;AASjBC,EAAAA,eAAe,EAAEP,GAAG,CAACM,MATJ;AAcjBE,EAAAA,OAAO,EAAER,GAAG,CAACM,MAdI;AAmBjBG,EAAAA,OAAO,EAAET,GAAG,CAACU;AAnBI,C;AADfP,uB,CAuBGQ,W,GAAc,c","sourcesContent":["import _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\n\n/**\n * @description: Component that shows a full screen with an activity indicator\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/LoadingScreen.tsx\n */\n// @ts-ignore\nclass FakeLoaderScreenForDocs extends PureComponent {\n  static propTypes = {\n    /**\n         * Color of the loading indicator\n         */\n    loaderColor: _pt.string,\n\n    /**\n         * Color of the loader background (only when passing 'overlay')\n         */\n    backgroundColor: _pt.string,\n\n    /**\n         * loader message\n         */\n    message: _pt.string,\n\n    /**\n         * Show the screen as an absolute overlay\n         */\n    overlay: _pt.bool\n  };\n  // eslint-disable-line\n  static displayName = 'LoaderScreen';\n\n  render() {\n    return null;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}