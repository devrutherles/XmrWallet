{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Start from \"./screen/Start\";\nimport Welcome from \"./screen/Welcome\";\nimport Wallet from \"./screen/Wallet\";\nimport ImportXmr from \"./screen/ImportXmr\";\nimport Marketplace from \"./screen/Marketplace\";\nimport ConnectPhantom from \"./screen/ConnectPhantom\";\nimport Calculate from \"./screen/Calculate\";\nimport { initializeApp } from 'firebase/app';\nimport { addDoc, collection, doc, getDoc, getDocs, getFirestore, setDoc } from \"firebase/firestore\";\nimport ConnectWallet from \"./screen/ConnectWallet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Home from \"./screen/Home\";\nimport TopBar from \"./screen/component/Header\";\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nvar Stack = createNativeStackNavigator();\n\nvar MyTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    background: '#fff'\n  })\n});\n\nfunction App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      importa = _useState2[0],\n      setImporta = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      playstore = _useState4[0],\n      setPlaystore = _useState4[1];\n\n  var readImport = function readImport() {\n    var userAge;\n    return _regeneratorRuntime.async(function readImport$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@IMPORT'));\n\n          case 3:\n            userAge = _context.sent;\n\n            if (userAge !== null) {\n              setImporta(userAge);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert('Failed to fetch the data from storage');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyD7FMdQk7MmcrtifUT97z1XtQNA7BZ0hok\",\n    authDomain: \"xmr2021.firebaseapp.com\",\n    projectId: \"xmr2021\",\n    storageBucket: \"xmr2021.appspot.com\",\n    messagingSenderId: \"138804317863\",\n    appId: \"1:138804317863:web:773de3543950b7a7c71582\",\n    measurementId: \"G-8RDCCT8D8L\"\n  };\n  initializeApp(firebaseConfig);\n  var firestore = getFirestore();\n\n  var get = function get() {\n    var querySnapshot;\n    return _regeneratorRuntime.async(function get$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getDocs(collection(firestore, \"playstore\")));\n\n          case 2:\n            querySnapshot = _context2.sent;\n            querySnapshot.forEach(function (doc) {\n              setPlaystore(JSON.stringify([doc.data().status]));\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    readImport();\n    get();\n  }, []);\n\n  if (playstore == '[true]') {\n    return React.createElement(NavigationContainer, {\n      theme: MyTheme\n    }, React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n      name: \"Calculate\",\n      component: Calculate,\n      options: {\n        title: \"Home\",\n        headerStyle: {\n          backgroundColor: \"#fff\"\n        }\n      }\n    })));\n  }\n\n  if (importa.length > 0 && playstore == '[false]') {\n    return React.createElement(NavigationContainer, {\n      theme: MyTheme\n    }, React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n      name: \"Home\",\n      component: Home\n    }), React.createElement(Stack.Screen, {\n      name: \"Wallet\",\n      component: Wallet\n    })));\n  } else {\n    return React.createElement(NavigationContainer, {\n      theme: MyTheme\n    }, React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n      name: \"Start\",\n      component: Start\n    }), React.createElement(Stack.Screen, {\n      name: \"Wallet\",\n      component: Wallet\n    }), React.createElement(Stack.Screen, {\n      name: \"ConnectPhantom\",\n      component: ConnectPhantom\n    }), React.createElement(Stack.Screen, {\n      name: \"Marketplace\",\n      component: Marketplace\n    }), React.createElement(Stack.Screen, {\n      name: \"Welcome\",\n      component: Welcome\n    }), React.createElement(Stack.Screen, {\n      name: \"ConnectWallet\",\n      component: ConnectWallet\n    }), React.createElement(Stack.Screen, {\n      name: \"ImportXmr\",\n      component: ImportXmr\n    }), React.createElement(Stack.Screen, {\n      name: \"Home\",\n      component: Home\n    })));\n  }\n}\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/√Årea de Trabalho/projetos/xmrwallet/App.js"],"names":["React","useState","useEffect","Start","Welcome","Wallet","ImportXmr","Marketplace","ConnectPhantom","Calculate","initializeApp","addDoc","collection","doc","getDoc","getDocs","getFirestore","setDoc","ConnectWallet","AsyncStorage","Home","TopBar","NavigationContainer","DefaultTheme","createNativeStackNavigator","Stack","MyTheme","colors","background","App","importa","setImporta","playstore","setPlaystore","readImport","getItem","userAge","alert","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","get","querySnapshot","forEach","JSON","stringify","data","status","title","headerStyle","backgroundColor","length","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport Start from './screen/Start'\nimport Welcome from './screen/Welcome'\nimport Wallet from './screen/Wallet'\nimport ImportXmr from './screen/ImportXmr'\nimport Marketplace from './screen/Marketplace'\nimport ConnectPhantom from './screen/ConnectPhantom'\nimport Calculate from './screen/Calculate'\nimport { initializeApp } from 'firebase/app';\nimport {\n  addDoc,\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  getFirestore,\n  setDoc,\n} from \"firebase/firestore\";\n\n\n\nimport ConnectWallet from './screen/ConnectWallet'\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Home from './screen/Home'\nimport TopBar from './screen/component/Header'\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nconst Stack = createNativeStackNavigator();\n\nconst MyTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    background: '#fff'\n  },\n};\n\nfunction App() {\nconst [importa, setImporta] = useState('')\nconst [playstore, setPlaystore] = useState()\n\n \n\n\n  const readImport = async () => {\n    try {\n      const userAge = await AsyncStorage.getItem('@IMPORT')\n      if (userAge!== null){ setImporta(userAge)}\n\n    } catch (e) {\n      alert('Failed to fetch the data from storage')\n    }\n  }\n\n  \n  const firebaseConfig = {\n    apiKey: \"AIzaSyD7FMdQk7MmcrtifUT97z1XtQNA7BZ0hok\",\n    authDomain: \"xmr2021.firebaseapp.com\",\n    projectId: \"xmr2021\",\n    storageBucket: \"xmr2021.appspot.com\",\n    messagingSenderId: \"138804317863\",\n    appId: \"1:138804317863:web:773de3543950b7a7c71582\",\n    measurementId: \"G-8RDCCT8D8L\"\n  };\n\n  initializeApp(firebaseConfig);\n  const firestore = getFirestore();\n\n\n  const get = async () => {\n    const querySnapshot = await getDocs(collection(firestore, \"playstore\"))\n    querySnapshot.forEach((doc) => {\n      setPlaystore(JSON.stringify([doc.data().status]))\n    });\n  }\n\n  useEffect(() => {\n\n    readImport();\n    get();\n\n\n\n\n  }, [])\n\n \n \n \n  if (playstore == '[true]') {\n    return (\n\n      <NavigationContainer theme={MyTheme} >\n        <Stack.Navigator>\n          <Stack.Screen name=\"Calculate\" component={Calculate}\n            options={{ title: \"Home\", headerStyle: { backgroundColor: \"#fff\", } }} /></Stack.Navigator></NavigationContainer>);\n  }\n\n\n\n\n  if (importa.length > 0 && playstore == '[false]') {\n\n\n    return (\n\n      <NavigationContainer theme={MyTheme} >\n        <Stack.Navigator>\n\n          <Stack.Screen name=\"Home\" component={Home} />\n          <Stack.Screen name=\"Wallet\" component={Wallet} />\n\n\n\n        </Stack.Navigator>\n      </NavigationContainer>\n\n\n\n    );\n  } else {\n\n    return (\n\n      <NavigationContainer theme={MyTheme} >\n        <Stack.Navigator>\n        \n\n          <Stack.Screen name=\"Start\" component={Start} />\n          <Stack.Screen name=\"Wallet\" component={Wallet} />\n          <Stack.Screen name=\"ConnectPhantom\" component={ConnectPhantom} />\n          <Stack.Screen name=\"Marketplace\" component={Marketplace} />\n          <Stack.Screen name=\"Welcome\" component={Welcome} />\n          <Stack.Screen name=\"ConnectWallet\" component={ConnectWallet} />\n          <Stack.Screen name=\"ImportXmr\" component={ImportXmr} />\n          <Stack.Screen name=\"Home\" component={Home}/>\n          </Stack.Navigator>\n          </NavigationContainer>\n\n\n\n    );\n\n\n  }\n\n\n}\n\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}