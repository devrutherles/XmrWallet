{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useMemo, useEffect, useState, useCallback } from 'react';\nimport _ from 'lodash';\nimport { useAnimatedReaction, useSharedValue, withTiming, runOnJS } from 'react-native-reanimated';\nimport { Constants } from \"../../helpers\";\nimport { useOrientation } from \"../../hooks\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport { LogService } from \"../../services\";\nimport TabBarContext from \"./TabBarContext\";\nimport TabBar from \"./TabBar\";\nimport TabBarItem, { TabControllerItemProps } from \"./TabBarItem\";\nimport TabPage from \"./TabPage\";\nimport PageCarousel from \"./PageCarousel\";\nexport { TabControllerItemProps };\n\nfunction TabController(_ref) {\n  var _ref$initialIndex = _ref.initialIndex,\n      initialIndex = _ref$initialIndex === void 0 ? 0 : _ref$initialIndex,\n      selectedIndex = _ref.selectedIndex,\n      _ref$asCarousel = _ref.asCarousel,\n      asCarousel = _ref$asCarousel === void 0 ? false : _ref$asCarousel,\n      items = _ref.items,\n      _ref$onChangeIndex = _ref.onChangeIndex,\n      onChangeIndex = _ref$onChangeIndex === void 0 ? _.noop : _ref$onChangeIndex,\n      carouselPageWidth = _ref.carouselPageWidth,\n      children = _ref.children;\n\n  var _useState = useState(Constants.windowWidth),\n      _useState2 = _slicedToArray(_useState, 2),\n      screenWidth = _useState2[0],\n      setScreenWidth = _useState2[1];\n\n  if ((items == null ? void 0 : items.length) < 2) {\n    console.error('TabController component expect a minimum of 2 items');\n  }\n\n  useOrientation({\n    onOrientationChange: function onOrientationChange() {\n      setScreenWidth(Constants.windowWidth);\n    }\n  });\n  var pageWidth = useMemo(function () {\n    return carouselPageWidth || screenWidth;\n  }, [carouselPageWidth, screenWidth]);\n  var ignoredItems = useMemo(function () {\n    return _.filter(items, function (item) {\n      return item.ignore;\n    });\n  }, [items]);\n  initialIndex = selectedIndex || initialIndex;\n  var currentPage = useSharedValue(initialIndex);\n  var targetPage = useSharedValue(initialIndex);\n  var setCurrentIndex = useCallback(function () {\n    var _f = function _f(index) {\n      currentPage.value = index;\n    };\n\n    _f._closure = {\n      currentPage: currentPage\n    };\n    _f.asString = \"function _f(index){const{currentPage}=jsThis._closure;{currentPage.value=index;}}\";\n    _f.__workletHash = 8705844232772;\n    _f.__location = \"C:\\\\Users\\\\ruthe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projetos\\\\xmrwallet\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\index.js (59:38)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), []);\n  useEffect(function () {\n    if (!_.isUndefined(selectedIndex)) {\n      LogService.deprecationWarn({\n        component: 'TabController2',\n        oldProp: 'selectedIndex',\n        newProp: 'initialIndex'\n      });\n    }\n  }, [selectedIndex]);\n  useEffect(function () {\n    setCurrentIndex(initialIndex);\n  }, [initialIndex]);\n  useAnimatedReaction(function () {\n    const _f = function () {\n      return currentPage.value;\n    };\n\n    _f._closure = {\n      currentPage\n    };\n    _f.asString = \"function _f(){const{currentPage}=jsThis._closure;{return currentPage.value;}}\";\n    _f.__workletHash = 16845019634419;\n    _f.__location = \"C:\\\\Users\\\\ruthe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projetos\\\\xmrwallet\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\index.js (76:22)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), function () {\n    const _f = function (value, prevValue) {\n      if (value !== prevValue) {\n        targetPage.value = withTiming(value);\n        prevValue !== null && runOnJS(onChangeIndex)(value, prevValue);\n      }\n    };\n\n    _f._closure = {\n      targetPage,\n      withTiming,\n      runOnJS,\n      onChangeIndex\n    };\n    _f.asString = \"function _f(value,prevValue){const{targetPage,withTiming,runOnJS,onChangeIndex}=jsThis._closure;{if(value!==prevValue){targetPage.value=withTiming(value);prevValue!==null&&runOnJS(onChangeIndex)(value,prevValue);}}}\";\n    _f.__workletHash = 17508509670657;\n    _f.__location = \"C:\\\\Users\\\\ruthe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projetos\\\\xmrwallet\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\index.js (78:5)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var context = useMemo(function () {\n    return {\n      initialIndex: initialIndex,\n      asCarousel: asCarousel,\n      pageWidth: pageWidth,\n      items: items,\n      ignoredItems: ignoredItems,\n      itemsCount: items.length - ignoredItems.length,\n      targetPage: targetPage,\n      currentPage: currentPage,\n      containerWidth: screenWidth,\n      onChangeIndex: onChangeIndex,\n      setCurrentIndex: setCurrentIndex\n    };\n  }, [initialIndex, asCarousel, items, onChangeIndex, screenWidth]);\n  return React.createElement(TabBarContext.Provider, {\n    value: context\n  }, children);\n}\n\nTabController.TabBar = TabBar;\nTabController.TabBarItem = TabBarItem;\nTabController.TabPage = TabPage;\nTabController.PageCarousel = PageCarousel;\nexport default asBaseComponent(TabController);","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/tabController/index.js"],"names":["React","useMemo","useEffect","useState","useCallback","_","useAnimatedReaction","useSharedValue","withTiming","runOnJS","Constants","useOrientation","asBaseComponent","LogService","TabBarContext","TabBar","TabBarItem","TabControllerItemProps","TabPage","PageCarousel","TabController","initialIndex","selectedIndex","asCarousel","items","onChangeIndex","noop","carouselPageWidth","children","windowWidth","screenWidth","setScreenWidth","length","console","error","onOrientationChange","pageWidth","ignoredItems","filter","item","ignore","currentPage","targetPage","setCurrentIndex","index","value","isUndefined","deprecationWarn","component","oldProp","newProp","prevValue","context","itemsCount","containerWidth"],"mappings":"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","sourcesContent":["// TODO: support commented props\nimport React, { useMemo, useEffect, useState, useCallback } from 'react';\nimport _ from 'lodash';\nimport { useAnimatedReaction, useSharedValue, withTiming, runOnJS } from 'react-native-reanimated';\nimport { Constants } from \"../../helpers\";\nimport { useOrientation } from \"../../hooks\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport { LogService } from \"../../services\";\nimport TabBarContext from \"./TabBarContext\";\nimport TabBar from \"./TabBar\";\nimport TabBarItem, { TabControllerItemProps } from \"./TabBarItem\";\nimport TabPage from \"./TabPage\";\nimport PageCarousel from \"./PageCarousel\";\nexport { TabControllerItemProps }; // TODO: should migrate selectedIndex to initialIndex (and make this prop uncontrolled)\n\n/**\n * @description: A performant solution for a tab controller with lazy load mechanism\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx\n * @notes: This component is based on react-native-gesture-handler\n * @important: On Android, if using react-native-navigation, make sure to wrap your screen with gestureHandlerRootHOC\n * @importantLink: https://kmagiera.github.io/react-native-gesture-handler/docs/getting-started.html#with-wix-react-native-navigation-https-githubcom-wix-react-native-navigation\n */\nfunction TabController({\n  initialIndex = 0,\n  selectedIndex,\n  asCarousel = false,\n  items,\n  onChangeIndex = _.noop,\n  carouselPageWidth,\n  children\n}) {\n  const [screenWidth, setScreenWidth] = useState(Constants.windowWidth);\n\n  if (items?.length < 2) {\n    console.error('TabController component expect a minimum of 2 items');\n  }\n\n  useOrientation({\n    onOrientationChange: () => {\n      setScreenWidth(Constants.windowWidth);\n    }\n  });\n  const pageWidth = useMemo(() => {\n    return carouselPageWidth || screenWidth;\n  }, [carouselPageWidth, screenWidth]);\n  const ignoredItems = useMemo(() => {\n    return _.filter(items, item => item.ignore);\n  }, [items]);\n  /* backwards compatibility for `selectedIndex` prop. this line eventually should be removed */\n\n  initialIndex = selectedIndex || initialIndex;\n  /* currentPage - static page index */\n\n  const currentPage = useSharedValue(initialIndex);\n  /* targetPage - transitioned page index (can be a fraction when transitioning between pages) */\n\n  const targetPage = useSharedValue(initialIndex); // const carouselOffset = useSharedValue(initialIndex * Math.round(pageWidth));\n\n  const setCurrentIndex = useCallback(index => {\n    'worklet';\n\n    currentPage.value = index;\n  }, []);\n  useEffect(() => {\n    if (!_.isUndefined(selectedIndex)) {\n      LogService.deprecationWarn({\n        component: 'TabController2',\n        oldProp: 'selectedIndex',\n        newProp: 'initialIndex'\n      });\n    }\n  }, [selectedIndex]);\n  useEffect(() => {\n    setCurrentIndex(initialIndex);\n  }, [initialIndex]);\n  useAnimatedReaction(() => {\n    return currentPage.value;\n  }, (value, prevValue) => {\n    if (value !== prevValue) {\n      targetPage.value = withTiming(value);\n      prevValue !== null && runOnJS(onChangeIndex)(value, prevValue);\n    }\n  });\n  const context = useMemo(() => {\n    return {\n      /* Pass Props */\n      initialIndex,\n      asCarousel,\n      pageWidth,\n\n      /* Items */\n      items,\n      ignoredItems,\n      itemsCount: items.length - ignoredItems.length,\n\n      /* Animated Values */\n      targetPage,\n      currentPage,\n      // carouselOffset,\n      containerWidth: screenWidth,\n\n      /* Callbacks */\n      onChangeIndex,\n      setCurrentIndex\n    };\n  }, [initialIndex, asCarousel, items, onChangeIndex, screenWidth]);\n  return <TabBarContext.Provider value={context}>{children}</TabBarContext.Provider>;\n}\n\nTabController.TabBar = TabBar;\nTabController.TabBarItem = TabBarItem;\nTabController.TabPage = TabPage;\nTabController.PageCarousel = PageCarousel;\nexport default asBaseComponent(TabController);"]},"metadata":{},"sourceType":"module"}