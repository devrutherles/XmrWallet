{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _pt from \"prop-types\";\nimport _ from 'lodash';\nimport React from 'react';\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport { WheelPicker } from \"../../incubator\";\n\nvar SectionsWheelPicker = function SectionsWheelPicker(props) {\n  var sections = props.sections,\n      itemHeight = props.itemHeight,\n      numberOfVisibleRows = props.numberOfVisibleRows,\n      activeTextColor = props.activeTextColor,\n      inactiveTextColor = props.inactiveTextColor,\n      textStyle = props.textStyle,\n      testID = props.testID;\n  var wheelPickerProps = {\n    itemHeight: itemHeight,\n    numberOfVisibleRows: numberOfVisibleRows,\n    activeTextColor: activeTextColor,\n    inactiveTextColor: inactiveTextColor,\n    textStyle: textStyle\n  };\n\n  var renderSections = function renderSections() {\n    return _.map(sections, function (section, index) {\n      return React.createElement(WheelPicker, _extends({\n        key: index,\n        testID: testID + \".\" + index\n      }, wheelPickerProps, section));\n    });\n  };\n\n  return React.createElement(View, {\n    row: true,\n    centerH: true,\n    testID: testID\n  }, renderSections());\n};\n\nSectionsWheelPicker.propTypes = {\n  sections: _pt.array,\n  itemHeight: _pt.number,\n  numberOfVisibleRows: _pt.number,\n  activeTextColor: _pt.string,\n  inactiveTextColor: _pt.string,\n  testID: _pt.string\n};\nSectionsWheelPicker.displayName = 'SectionsWheelPicker';\nexport default asBaseComponent(SectionsWheelPicker);","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/sectionsWheelPicker/index.js"],"names":["_pt","_","React","asBaseComponent","View","WheelPicker","SectionsWheelPicker","props","sections","itemHeight","numberOfVisibleRows","activeTextColor","inactiveTextColor","textStyle","testID","wheelPickerProps","renderSections","map","section","index","propTypes","array","number","string","displayName"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT;AACA,OAAOC,IAAP;AACA,SAASC,WAAT;;AAOA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,KAAK,EAAI;AACnC,MACEC,QADF,GAQID,KARJ,CACEC,QADF;AAAA,MAEEC,UAFF,GAQIF,KARJ,CAEEE,UAFF;AAAA,MAGEC,mBAHF,GAQIH,KARJ,CAGEG,mBAHF;AAAA,MAIEC,eAJF,GAQIJ,KARJ,CAIEI,eAJF;AAAA,MAKEC,iBALF,GAQIL,KARJ,CAKEK,iBALF;AAAA,MAMEC,SANF,GAQIN,KARJ,CAMEM,SANF;AAAA,MAOEC,MAPF,GAQIP,KARJ,CAOEO,MAPF;AASA,MAAMC,gBAAgB,GAAG;AACvBN,IAAAA,UAAU,EAAVA,UADuB;AAEvBC,IAAAA,mBAAmB,EAAnBA,mBAFuB;AAGvBC,IAAAA,eAAe,EAAfA,eAHuB;AAIvBC,IAAAA,iBAAiB,EAAjBA,iBAJuB;AAKvBC,IAAAA,SAAS,EAATA;AALuB,GAAzB;;AAQA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WAAMf,CAAC,CAACgB,GAAF,CAAMT,QAAN,EAAgB,UAACU,OAAD,EAAUC,KAAV,EAAoB;AAC/D,aAAO,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAEA,KAAlB;AAAyB,QAAA,MAAM,EAAKL,MAAL,SAAeK;AAA9C,SAA2DJ,gBAA3D,EAAiFG,OAAjF,EAAP;AACD,KAF4B,CAAN;AAAA,GAAvB;;AAIA,SAAO,oBAAC,IAAD;AAAM,IAAA,GAAG,MAAT;AAAU,IAAA,OAAO,MAAjB;AAAkB,IAAA,MAAM,EAAEJ;AAA1B,KACFE,cAAc,EADZ,CAAP;AAGD,CAzBD;;AA2BAV,mBAAmB,CAACc,SAApB,GAAgC;AAI9BZ,EAAAA,QAAQ,EAAER,GAAG,CAACqB,KAJgB;AAU9BZ,EAAAA,UAAU,EAAET,GAAG,CAACsB,MAVc;AAgB9BZ,EAAAA,mBAAmB,EAAEV,GAAG,CAACsB,MAhBK;AAqB9BX,EAAAA,eAAe,EAAEX,GAAG,CAACuB,MArBS;AA0B9BX,EAAAA,iBAAiB,EAAEZ,GAAG,CAACuB,MA1BO;AA2B9BT,EAAAA,MAAM,EAAEd,GAAG,CAACuB;AA3BkB,CAAhC;AA6BAjB,mBAAmB,CAACkB,WAApB,GAAkC,qBAAlC;AACA,eAAerB,eAAe,CAACG,mBAAD,CAA9B","sourcesContent":["import _pt from \"prop-types\";\nimport _ from 'lodash';\nimport React from 'react';\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport { WheelPicker } from \"../../incubator\";\n\n/**\n * @description: SectionsWheelPicker component for presenting set of wheelPickers\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SectionsWheelPickerScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/SectionsWheelPicker/SectionsWheelPicker.gif?raw=true\n */\nconst SectionsWheelPicker = props => {\n  const {\n    sections,\n    itemHeight,\n    numberOfVisibleRows,\n    activeTextColor,\n    inactiveTextColor,\n    textStyle,\n    testID\n  } = props;\n  const wheelPickerProps = {\n    itemHeight,\n    numberOfVisibleRows,\n    activeTextColor,\n    inactiveTextColor,\n    textStyle\n  };\n\n  const renderSections = () => _.map(sections, (section, index) => {\n    return <WheelPicker key={index} testID={`${testID}.${index}`} {...wheelPickerProps} {...section} />;\n  });\n\n  return <View row centerH testID={testID}>\n      {renderSections()}\n    </View>;\n};\n\nSectionsWheelPicker.propTypes = {\n  /**\n     * Array of sections.\n     */\n  sections: _pt.array,\n\n  /**\n     * Describe the height of each item in the WheelPicker\n     * default value: 44\n     */\n  itemHeight: _pt.number,\n\n  /**\n     * Describe the number of rows visible\n     * default value: 5\n     */\n  numberOfVisibleRows: _pt.number,\n\n  /**\n     * Text color for the focused row\n     */\n  activeTextColor: _pt.string,\n\n  /**\n     * Text color for other, non-focused rows\n     */\n  inactiveTextColor: _pt.string,\n  testID: _pt.string\n};\nSectionsWheelPicker.displayName = 'SectionsWheelPicker';\nexport default asBaseComponent(SectionsWheelPicker);"]},"metadata":{},"sourceType":"module"}