{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAwareBase from \"./KeyboardAwareBase\";\nimport { LogService } from \"../../services\";\n\nvar KeyboardAwareListView = function (_KeyboardAwareBase) {\n  _inherits(KeyboardAwareListView, _KeyboardAwareBase);\n\n  var _super = _createSuper(KeyboardAwareListView);\n\n  function KeyboardAwareListView(props) {\n    var _this;\n\n    _classCallCheck(this, KeyboardAwareListView);\n\n    _this = _super.call(this, props);\n    LogService.warn('uilib: Please stop Using KeyboardAwareListView, use either KeyboardAwareScrollView or KeyboardAwareFlatList');\n    return _this;\n  }\n\n  _createClass(KeyboardAwareListView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var initialOpacity = this.props.startScrolledToBottom ? 0 : 1;\n      return React.createElement(ScrollView, _extends({\n        scrollEventThrottle: 200\n      }, this.props, this.style, {\n        opacity: initialOpacity,\n        contentInset: {\n          bottom: this.state.keyboardHeight\n        },\n        ref: function ref(r) {\n          _this2._keyboardAwareView = r;\n        },\n        onLayout: this._onKeyboardAwareViewLayout,\n        onScroll: this._onKeyboardAwareViewScroll,\n        onContentSizeChange: this._updateKeyboardAwareViewContentSize\n      }));\n    }\n  }]);\n\n  return KeyboardAwareListView;\n}(KeyboardAwareBase);\n\nKeyboardAwareListView.displayName = 'IGNORE';\nKeyboardAwareListView.propTypes = {\n  onScroll: PropTypes.func\n};\nKeyboardAwareListView.defaultProps = _objectSpread({}, KeyboardAwareBase.defaultProps);\nexport { KeyboardAwareListView as default };","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/KeyboardAwareScrollView/KeyboardAwareListView.js"],"names":["React","PropTypes","KeyboardAwareBase","LogService","KeyboardAwareListView","props","warn","initialOpacity","startScrolledToBottom","style","bottom","state","keyboardHeight","r","_keyboardAwareView","_onKeyboardAwareViewLayout","_onKeyboardAwareViewScroll","_updateKeyboardAwareViewContentSize","displayName","propTypes","onScroll","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAOC,iBAAP;AACA,SAAQC,UAAR;;IAEqBC,qB;;;;;AAWnB,iCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACAF,IAAAA,UAAU,CAACG,IAAX,CACE,6GADF;AAFiB;AAKlB;;;;WAED,kBAAS;AAAA;;AACP,UAAMC,cAAc,GAAG,KAAKF,KAAL,CAAWG,qBAAX,GAAmC,CAAnC,GAAuC,CAA9D;AACA,aACE,oBAAC,UAAD;AACE,QAAA,mBAAmB,EAAE;AADvB,SAEM,KAAKH,KAFX,EAGM,KAAKI,KAHX;AAIE,QAAA,OAAO,EAAEF,cAJX;AAKE,QAAA,YAAY,EAAE;AAACG,UAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC;AAApB,SALhB;AAME,QAAA,GAAG,EAAE,aAAAC,CAAC,EAAI;AACR,UAAA,MAAI,CAACC,kBAAL,GAA0BD,CAA1B;AACD,SARH;AASE,QAAA,QAAQ,EAAE,KAAKE,0BATjB;AAUE,QAAA,QAAQ,EAAE,KAAKC,0BAVjB;AAWE,QAAA,mBAAmB,EAAE,KAAKC;AAX5B,SADF;AAeD;;;;EAnCgDf,iB;;AAA9BE,qB,CACZc,W,GAAc,Q;AADFd,qB,CAGZe,S,GAAY;AACjBC,EAAAA,QAAQ,EAAEnB,SAAS,CAACoB;AADH,C;AAHAjB,qB,CAOZkB,Y,qBACFpB,iBAAiB,CAACoB,Y;SARJlB,qB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {ScrollView} from 'react-native';\nimport KeyboardAwareBase from './KeyboardAwareBase';\nimport {LogService} from '../../services';\n\nexport default class KeyboardAwareListView extends KeyboardAwareBase {\n  static displayName = 'IGNORE';\n\n  static propTypes = {\n    onScroll: PropTypes.func\n  };\n\n  static defaultProps = {\n    ...KeyboardAwareBase.defaultProps\n  };\n\n  constructor(props) {\n    super(props);\n    LogService.warn(\n      'uilib: Please stop Using KeyboardAwareListView, use either KeyboardAwareScrollView or KeyboardAwareFlatList'\n    );\n  }\n\n  render() {\n    const initialOpacity = this.props.startScrolledToBottom ? 0 : 1;\n    return (\n      <ScrollView\n        scrollEventThrottle={200}\n        {...this.props}\n        {...this.style}\n        opacity={initialOpacity}\n        contentInset={{bottom: this.state.keyboardHeight}}\n        ref={r => {\n          this._keyboardAwareView = r;\n        }}\n        onLayout={this._onKeyboardAwareViewLayout}\n        onScroll={this._onKeyboardAwareViewScroll}\n        onContentSizeChange={this._updateKeyboardAwareViewContentSize}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}