{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Constants } from \"../../helpers\";\nimport useDidUpdate from \"../useDidUpdate\";\n\nvar useOrientation = function useOrientation() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      onOrientationChange = _ref.onOrientationChange;\n\n  var _useState = useState(Constants.orientation),\n      _useState2 = _slicedToArray(_useState, 2),\n      orientation = _useState2[0],\n      setOrientation = _useState2[1];\n\n  var orientationChangeListener = useCallback(function () {\n    setOrientation(Constants.orientation);\n  }, []);\n  useEffect(function () {\n    Constants.addDimensionsEventListener(orientationChangeListener);\n    return function () {\n      return Constants.removeDimensionsEventListener(orientationChangeListener);\n    };\n  }, []);\n  useDidUpdate(function () {\n    onOrientationChange == null ? void 0 : onOrientationChange(orientation);\n  }, [orientation]);\n  return {\n    orientation: orientation\n  };\n};\n\nexport default useOrientation;","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/hooks/useOrientation/index.js"],"names":["React","useEffect","useCallback","useState","Constants","useDidUpdate","useOrientation","onOrientationChange","orientation","setOrientation","orientationChangeListener","addDimensionsEventListener","removeDimensionsEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,SAAT;AACA,OAAOC,YAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAEZ;AAAA,iFAAP,EAAO;AAAA,MADTC,mBACS,QADTA,mBACS;;AACT,kBAAsCJ,QAAQ,CAACC,SAAS,CAACI,WAAX,CAA9C;AAAA;AAAA,MAAOA,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAMC,yBAAyB,GAAGR,WAAW,CAAC,YAAM;AAClDO,IAAAA,cAAc,CAACL,SAAS,CAACI,WAAX,CAAd;AACD,GAF4C,EAE1C,EAF0C,CAA7C;AAGAP,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,SAAS,CAACO,0BAAV,CAAqCD,yBAArC;AACA,WAAO;AAAA,aAAMN,SAAS,CAACQ,6BAAV,CAAwCF,yBAAxC,CAAN;AAAA,KAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAIAL,EAAAA,YAAY,CAAC,YAAM;AACjBE,IAAAA,mBAAmB,QAAnB,YAAAA,mBAAmB,CAAGC,WAAH,CAAnB;AACD,GAFW,EAET,CAACA,WAAD,CAFS,CAAZ;AAGA,SAAO;AACLA,IAAAA,WAAW,EAAXA;AADK,GAAP;AAGD,CAjBD;;AAmBA,eAAeF,cAAf","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\nimport { Constants } from \"../../helpers\";\nimport useDidUpdate from \"../useDidUpdate\";\n\nconst useOrientation = ({\n  onOrientationChange\n} = {}) => {\n  const [orientation, setOrientation] = useState(Constants.orientation);\n  const orientationChangeListener = useCallback(() => {\n    setOrientation(Constants.orientation);\n  }, []);\n  useEffect(() => {\n    Constants.addDimensionsEventListener(orientationChangeListener);\n    return () => Constants.removeDimensionsEventListener(orientationChangeListener);\n  }, []);\n  useDidUpdate(() => {\n    onOrientationChange?.(orientation); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orientation]);\n  return {\n    orientation\n  };\n};\n\nexport default useOrientation;"]},"metadata":{},"sourceType":"module"}