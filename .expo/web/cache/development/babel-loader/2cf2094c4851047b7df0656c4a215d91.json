{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"modifiers\", \"style\", \"left\", \"top\", \"right\", \"bottom\", \"flex\", \"forwardedRef\", \"inaccessible\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport RNView from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Reanimated from 'react-native-reanimated';\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport { Constants } from \"../../helpers\";\n\nvar View = function (_PureComponent) {\n  _inherits(View, _PureComponent);\n\n  var _super = _createSuper(View);\n\n  function View(props) {\n    var _this;\n\n    _classCallCheck(this, View);\n\n    _this = _super.call(this, props);\n    _this.Container = props.useSafeArea && Constants.isIOS ? SafeAreaView : RNView;\n\n    if (props.reanimated) {\n      _this.Container = Reanimated.createAnimatedComponent(_this.Container);\n    } else if (props.animated) {\n      _this.Container = Animated.createAnimatedComponent(_this.Container);\n    }\n\n    _this.state = {\n      ready: !props.renderDelay\n    };\n    return _this;\n  }\n\n  _createClass(View, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var renderDelay = this.props.renderDelay;\n\n      if (renderDelay) {\n        setTimeout(function () {\n          _this2.setState({\n            ready: true\n          });\n        }, renderDelay);\n      }\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.ready) {\n        return null;\n      }\n\n      var _this$props = this.props,\n          modifiers = _this$props.modifiers,\n          style = _this$props.style,\n          left = _this$props.left,\n          top = _this$props.top,\n          right = _this$props.right,\n          bottom = _this$props.bottom,\n          propsFlex = _this$props.flex,\n          forwardedRef = _this$props.forwardedRef,\n          inaccessible = _this$props.inaccessible,\n          others = _objectWithoutProperties(_this$props, _excluded);\n\n      var backgroundColor = modifiers.backgroundColor,\n          borderRadius = modifiers.borderRadius,\n          paddings = modifiers.paddings,\n          margins = modifiers.margins,\n          alignments = modifiers.alignments,\n          flexStyle = modifiers.flexStyle,\n          positionStyle = modifiers.positionStyle;\n      var Element = this.Container;\n      return React.createElement(Element, _extends({\n        accessibilityElementsHidden: inaccessible,\n        importantForAccessibility: inaccessible ? 'no-hide-descendants' : undefined\n      }, others, {\n        style: [backgroundColor && {\n          backgroundColor: backgroundColor\n        }, borderRadius && {\n          borderRadius: borderRadius\n        }, flexStyle, positionStyle, paddings, margins, alignments, style],\n        ref: forwardedRef\n      }), this.props.children);\n    }\n  }]);\n\n  return View;\n}(PureComponent);\n\nView.propTypes = {\n  useSafeArea: _pt.bool,\n  animated: _pt.bool,\n  reanimated: _pt.bool,\n  inaccessible: _pt.bool,\n  width: _pt.oneOfType([_pt.string, _pt.number]),\n  height: _pt.oneOfType([_pt.string, _pt.number]),\n  renderDelay: _pt.number,\n  backgroundColor: _pt.string\n};\nView.displayName = 'View';\nexport default asBaseComponent(forwardRef(View));","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/√Årea de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/view/index.js"],"names":["_pt","React","PureComponent","Reanimated","asBaseComponent","forwardRef","Constants","View","props","Container","useSafeArea","isIOS","SafeAreaView","RNView","reanimated","createAnimatedComponent","animated","Animated","state","ready","renderDelay","setTimeout","setState","nativeProps","_root","setNativeProps","modifiers","style","left","top","right","bottom","propsFlex","flex","forwardedRef","inaccessible","others","backgroundColor","borderRadius","paddings","margins","alignments","flexStyle","positionStyle","Element","undefined","children","propTypes","bool","width","oneOfType","string","number","height","displayName"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport { View as RNView, SafeAreaView, Animated } from 'react-native';\nimport Reanimated from 'react-native-reanimated';\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport { Constants } from \"../../helpers\";\n\n/**\n * @description: An enhanced View component\n * @extends: View\n * @extendsLink: https://reactnative.dev/docs/view\n * @modifiers: margins, paddings, alignments, background, borderRadius\n */\nclass View extends PureComponent {\n  static propTypes = {\n    /**\n       * If true, will render as SafeAreaView\n       */\n    useSafeArea: _pt.bool,\n\n    /**\n       * Use Animate.View as a container\n       */\n    animated: _pt.bool,\n\n    /**\n        * Use Animate.View (from react-native-reanimated) as a container\n       */\n    reanimated: _pt.bool,\n\n    /**\n       * Turn off accessibility for this view and its nested children\n       */\n    inaccessible: _pt.bool,\n\n    /**\n       * TODO: probobly isn't needed\n       */\n    width: _pt.oneOfType([_pt.string, _pt.number]),\n\n    /**\n       * TODO: probobly isn't needed\n       */\n    height: _pt.oneOfType([_pt.string, _pt.number]),\n\n    /**\n       * Experimental: Pass time in ms to delay render\n       */\n    renderDelay: _pt.number,\n\n    /**\n       * Set background color\n       */\n    backgroundColor: _pt.string\n  };\n  static displayName = 'View';\n\n  constructor(props) {\n    super(props);\n    this.Container = props.useSafeArea && Constants.isIOS ? SafeAreaView : RNView;\n\n    if (props.reanimated) {\n      this.Container = Reanimated.createAnimatedComponent(this.Container);\n    } else if (props.animated) {\n      this.Container = Animated.createAnimatedComponent(this.Container);\n    }\n\n    this.state = {\n      ready: !props.renderDelay\n    };\n  }\n\n  componentDidMount() {\n    const {\n      renderDelay\n    } = this.props;\n\n    if (renderDelay) {\n      setTimeout(() => {\n        this.setState({\n          ready: true\n        });\n      }, renderDelay);\n    }\n  } // TODO: do we need this?\n\n\n  setNativeProps(nativeProps) {\n    //@ts-ignore\n    this._root.setNativeProps(nativeProps); // eslint-disable-line\n\n  }\n\n  render() {\n    if (!this.state.ready) {\n      return null;\n    } // (!) extract left, top, bottom... props to avoid passing them on Android\n    // eslint-disable-next-line\n\n\n    const {\n      modifiers,\n      style,\n\n      /* eslint-disable */\n      left,\n      top,\n      right,\n      bottom,\n      flex: propsFlex,\n\n      /* eslint-enable */\n      forwardedRef,\n      inaccessible,\n      ...others\n    } = this.props;\n    const {\n      backgroundColor,\n      borderRadius,\n      paddings,\n      margins,\n      alignments,\n      flexStyle,\n      positionStyle\n    } = modifiers;\n    const Element = this.Container;\n    return <Element accessibilityElementsHidden={inaccessible} importantForAccessibility={inaccessible ? 'no-hide-descendants' : undefined} {...others} style={[backgroundColor && {\n      backgroundColor\n    }, borderRadius && {\n      borderRadius\n    }, flexStyle, positionStyle, paddings, margins, alignments, style]} ref={forwardedRef}>\n        {this.props.children}\n      </Element>;\n  }\n\n}\n\nexport default asBaseComponent(forwardRef(View));"]},"metadata":{},"sourceType":"module"}