{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactNative from \"react-native-web/dist/index\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\n\nvar KeyboardAwareBase = function (_Component) {\n  _inherits(KeyboardAwareBase, _Component);\n\n  var _super = _createSuper(KeyboardAwareBase);\n\n  function KeyboardAwareBase(props) {\n    var _this;\n\n    _classCallCheck(this, KeyboardAwareBase);\n\n    _this = _super.call(this, props);\n\n    _this._bind('_onKeyboardWillShow', '_onKeyboardWillHide', '_addKeyboardEventListeners', '_removeKeyboardListeners', '_scrollToFocusedTextInput', '_onKeyboardAwareViewLayout', '_updateKeyboardAwareViewContentSize', 'scrollToBottom', 'scrollBottomOnNextSizeChange', '_onKeyboardAwareViewScroll');\n\n    _this.contentSize = undefined;\n    _this.layoutSize = undefined;\n    _this.state = {\n      keyboardHeight: 0\n    };\n\n    _this._addKeyboardEventListeners();\n\n    return _this;\n  }\n\n  _createClass(KeyboardAwareBase, [{\n    key: \"_bind\",\n    value: function _bind() {\n      var _this2 = this;\n\n      for (var _len = arguments.length, methods = new Array(_len), _key = 0; _key < _len; _key++) {\n        methods[_key] = arguments[_key];\n      }\n\n      methods.forEach(function (method) {\n        _this2[method] = _this2[method].bind(_this2);\n      });\n    }\n  }, {\n    key: \"_addKeyboardEventListeners\",\n    value: function _addKeyboardEventListeners() {\n      var KeyboardEventsObj = Keyboard || DeviceEventEmitter;\n      this.keyboardEventListeners = [KeyboardEventsObj.addListener('keyboardWillShow', this._onKeyboardWillShow), KeyboardEventsObj.addListener('keyboardWillHide', this._onKeyboardWillHide)];\n    }\n  }, {\n    key: \"_removeKeyboardListeners\",\n    value: function _removeKeyboardListeners() {\n      this.keyboardEventListeners.forEach(function (eventListener) {\n        return eventListener.remove();\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (this._keyboardAwareView && this.props.startScrolledToBottom) {\n        this.scrollToBottom(false);\n        setTimeout(function () {\n          return _this3._keyboardAwareView.setNativeProps({\n            opacity: 1\n          });\n        }, 100);\n      }\n    }\n  }, {\n    key: \"_onKeyboardAwareViewLayout\",\n    value: function _onKeyboardAwareViewLayout(layoutEvent) {\n      var layout = layoutEvent.nativeEvent.layout;\n      this.layoutSize = layout;\n      this._keyboardAwareView.contentOffset = {\n        x: 0,\n        y: 0\n      };\n\n      this._updateKeyboardAwareViewContentSize();\n    }\n  }, {\n    key: \"_onKeyboardAwareViewScroll\",\n    value: function _onKeyboardAwareViewScroll(event) {\n      this._keyboardAwareView.contentOffset = event.nativeEvent.contentOffset;\n\n      this._updateKeyboardAwareViewContentSize();\n\n      if (this.props.onScroll) {\n        this.props.onScroll(event);\n      }\n    }\n  }, {\n    key: \"_updateKeyboardAwareViewContentSize\",\n    value: function _updateKeyboardAwareViewContentSize(width, height) {\n      var heightHasChanged = false;\n\n      if (width && height) {\n        if (this.contentSize && this.contentSize.height !== height) {\n          heightHasChanged = true;\n        }\n\n        this.contentSize = {\n          width: width,\n          height: height\n        };\n      }\n\n      if (this._keyboardAwareView) {\n        if (this.state.scrollBottomOnNextSizeChange || this.props.startScrolledToBottom && heightHasChanged) {\n          this.scrollToBottom();\n          this.setState({\n            scrollBottomOnNextSizeChange: false\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._removeKeyboardListeners();\n    }\n  }, {\n    key: \"_scrollToFocusedTextInput\",\n    value: function _scrollToFocusedTextInput() {\n      var _this4 = this;\n\n      if (this.props.getTextInputRefs) {\n        var textInputRefs = this.props.getTextInputRefs();\n        textInputRefs.some(function (textInputRef) {\n          var isFocusedFunc = textInputRef.isFocused();\n          var isFocused = isFocusedFunc && typeof isFocusedFunc === 'function' ? isFocusedFunc() : isFocusedFunc;\n\n          if (isFocused) {\n            setTimeout(function () {\n              _this4._keyboardAwareView.getScrollResponder().scrollResponderScrollNativeHandleToKeyboard(ReactNative.findNodeHandle(textInputRef), _this4.props.scrollToInputAdditionalOffset, true);\n            }, 0);\n          }\n\n          return isFocused;\n        });\n      }\n    }\n  }, {\n    key: \"_onKeyboardWillShow\",\n    value: function _onKeyboardWillShow(event) {\n      this._scrollToFocusedTextInput();\n\n      var newKeyboardHeight = event.endCoordinates.height;\n\n      if (this.state.keyboardHeight === newKeyboardHeight) {\n        return;\n      }\n\n      this.setState({\n        keyboardHeight: newKeyboardHeight\n      });\n\n      if (this.props.scrollToBottomOnKBShow) {\n        this.scrollToBottom();\n      }\n    }\n  }, {\n    key: \"_onKeyboardWillHide\",\n    value: function _onKeyboardWillHide() {\n      var _this$_keyboardAwareV, _this$_keyboardAwareV2;\n\n      var keyboardHeight = this.state.keyboardHeight;\n      this.setState({\n        keyboardHeight: 0\n      });\n      var hasYOffset = ((_this$_keyboardAwareV = this._keyboardAwareView) == null ? void 0 : (_this$_keyboardAwareV2 = _this$_keyboardAwareV.contentOffset) == null ? void 0 : _this$_keyboardAwareV2.y) !== undefined;\n      var yOffset = hasYOffset ? Math.max(this._keyboardAwareView.contentOffset.y - keyboardHeight, 0) : 0;\n      this.scrollTo({\n        x: 0,\n        y: yOffset,\n        animated: true\n      });\n    }\n  }, {\n    key: \"scrollBottomOnNextSizeChange\",\n    value: function scrollBottomOnNextSizeChange() {\n      this.setState({\n        scrollBottomOnNextSizeChange: true\n      });\n    }\n  }, {\n    key: \"scrollToBottom\",\n    value: function scrollToBottom() {\n      var _this5 = this;\n\n      var scrollAnimated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (this._keyboardAwareView) {\n        if (!this.contentSize || !this.layoutSize) {\n          setTimeout(function () {\n            return _this5.scrollToBottom(scrollAnimated);\n          }, 50);\n          return;\n        }\n\n        this._keyboardAwareView.scrollToEnd({\n          animated: scrollAnimated\n        });\n      }\n    }\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(options) {\n      if (this._keyboardAwareView) {\n        if (this._keyboardAwareView.scrollTo) {\n          this._keyboardAwareView.scrollTo(options);\n        } else if (this._keyboardAwareView.scrollToOffset) {\n          this._keyboardAwareView.scrollToOffset(_objectSpread(_objectSpread({}, options), {}, {\n            offset: _.get(options, 'y', 0)\n          }));\n        }\n      }\n    }\n  }]);\n\n  return KeyboardAwareBase;\n}(Component);\n\nKeyboardAwareBase.propTypes = {\n  startScrolledToBottom: PropTypes.bool,\n  scrollToBottomOnKBShow: PropTypes.bool,\n  scrollToInputAdditionalOffset: PropTypes.number\n};\nKeyboardAwareBase.defaultProps = {\n  startScrolledToBottom: false,\n  scrollToBottomOnKBShow: false,\n  scrollToInputAdditionalOffset: 75\n};\nexport { KeyboardAwareBase as default };","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/√Årea de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/KeyboardAwareScrollView/KeyboardAwareBase.js"],"names":["_","Component","PropTypes","ReactNative","KeyboardAwareBase","props","_bind","contentSize","undefined","layoutSize","state","keyboardHeight","_addKeyboardEventListeners","methods","forEach","method","bind","KeyboardEventsObj","Keyboard","DeviceEventEmitter","keyboardEventListeners","addListener","_onKeyboardWillShow","_onKeyboardWillHide","eventListener","remove","_keyboardAwareView","startScrolledToBottom","scrollToBottom","setTimeout","setNativeProps","opacity","layoutEvent","layout","nativeEvent","contentOffset","x","y","_updateKeyboardAwareViewContentSize","event","onScroll","width","height","heightHasChanged","scrollBottomOnNextSizeChange","setState","_removeKeyboardListeners","getTextInputRefs","textInputRefs","some","textInputRef","isFocusedFunc","isFocused","getScrollResponder","scrollResponderScrollNativeHandleToKeyboard","findNodeHandle","scrollToInputAdditionalOffset","_scrollToFocusedTextInput","newKeyboardHeight","endCoordinates","scrollToBottomOnKBShow","hasYOffset","yOffset","Math","max","scrollTo","animated","scrollAnimated","scrollToEnd","options","scrollToOffset","offset","get","propTypes","bool","number","defaultProps"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ReactNative, {DeviceEventEmitter, Keyboard} from 'react-native';\n\nexport default class KeyboardAwareBase extends Component {\n  constructor(props) {\n    super(props);\n    this._bind('_onKeyboardWillShow',\n      '_onKeyboardWillHide',\n      '_addKeyboardEventListeners',\n      '_removeKeyboardListeners',\n      '_scrollToFocusedTextInput',\n      '_onKeyboardAwareViewLayout',\n      '_updateKeyboardAwareViewContentSize',\n      'scrollToBottom',\n      'scrollBottomOnNextSizeChange',\n      '_onKeyboardAwareViewScroll');\n    this.contentSize = undefined;\n    this.layoutSize = undefined;\n    this.state = {keyboardHeight: 0};\n    this._addKeyboardEventListeners();\n  }\n\n  static propTypes = {\n    startScrolledToBottom: PropTypes.bool,\n    scrollToBottomOnKBShow: PropTypes.bool,\n    scrollToInputAdditionalOffset: PropTypes.number\n  };\n\n  static defaultProps = {\n    startScrolledToBottom: false,\n    scrollToBottomOnKBShow: false,\n    scrollToInputAdditionalOffset: 75\n  };\n\n  _bind(...methods) {\n    methods.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n  }\n\n  _addKeyboardEventListeners() {\n    const KeyboardEventsObj = Keyboard || DeviceEventEmitter;\n    this.keyboardEventListeners = [\n      KeyboardEventsObj.addListener('keyboardWillShow', this._onKeyboardWillShow),\n      KeyboardEventsObj.addListener('keyboardWillHide', this._onKeyboardWillHide)\n    ];\n  }\n\n  _removeKeyboardListeners() {\n    this.keyboardEventListeners.forEach(eventListener => eventListener.remove());\n  }\n\n  componentDidMount() {\n    if (this._keyboardAwareView && this.props.startScrolledToBottom) {\n      this.scrollToBottom(false);\n      setTimeout(() => this._keyboardAwareView.setNativeProps({opacity: 1}), 100);\n    }\n  }\n\n  _onKeyboardAwareViewLayout(layoutEvent) {\n    const layout = layoutEvent.nativeEvent.layout;\n    this.layoutSize = layout;\n    this._keyboardAwareView.contentOffset = {x: 0, y: 0};\n    this._updateKeyboardAwareViewContentSize();\n  }\n\n  _onKeyboardAwareViewScroll(event) {\n    this._keyboardAwareView.contentOffset = event.nativeEvent.contentOffset;\n    this._updateKeyboardAwareViewContentSize();\n    if (this.props.onScroll) {\n      this.props.onScroll(event);\n    }\n  }\n\n  _updateKeyboardAwareViewContentSize(width, height) {\n    let heightHasChanged = false;\n    if (width && height) {\n      if (this.contentSize && this.contentSize.height !== height) { // for FlatList\n        heightHasChanged = true;\n      }\n\n      this.contentSize = {width, height};\n    }\n\n    if (this._keyboardAwareView) {\n      if (this.state.scrollBottomOnNextSizeChange ||\n          (this.props.startScrolledToBottom && heightHasChanged)) {\n        this.scrollToBottom();\n        this.setState({scrollBottomOnNextSizeChange: false});\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this._removeKeyboardListeners();\n  }\n\n  _scrollToFocusedTextInput() {\n    if (this.props.getTextInputRefs) {\n      const textInputRefs = this.props.getTextInputRefs();\n      textInputRefs.some((textInputRef) => {\n        const isFocusedFunc = textInputRef.isFocused();\n        const isFocused = isFocusedFunc && typeof isFocusedFunc === 'function' ? isFocusedFunc() : isFocusedFunc;\n        if (isFocused) {\n          setTimeout(() => {\n            this._keyboardAwareView\n              .getScrollResponder()\n              .scrollResponderScrollNativeHandleToKeyboard(ReactNative.findNodeHandle(textInputRef),\n                this.props.scrollToInputAdditionalOffset,\n                true);\n          }, 0);\n        }\n        return isFocused;\n      });\n    }\n  }\n\n  _onKeyboardWillShow(event) {\n    this._scrollToFocusedTextInput();\n\n    const newKeyboardHeight = event.endCoordinates.height;\n    if (this.state.keyboardHeight === newKeyboardHeight) {\n      return;\n    }\n\n    this.setState({keyboardHeight: newKeyboardHeight});\n\n    if (this.props.scrollToBottomOnKBShow) {\n      this.scrollToBottom();\n    }\n  }\n\n  _onKeyboardWillHide() {\n    const keyboardHeight = this.state.keyboardHeight;\n    this.setState({keyboardHeight: 0});\n\n    const hasYOffset = this._keyboardAwareView?.contentOffset?.y !== undefined;\n    const yOffset = hasYOffset ? Math.max(this._keyboardAwareView.contentOffset.y - keyboardHeight, 0) : 0;\n    this.scrollTo({x: 0, y: yOffset, animated: true});\n  }\n\n  scrollBottomOnNextSizeChange() {\n    this.setState({scrollBottomOnNextSizeChange: true});\n  }\n\n  scrollToBottom(scrollAnimated = true) {\n    if (this._keyboardAwareView) {\n      if (!this.contentSize || !this.layoutSize) {\n        setTimeout(() => this.scrollToBottom(scrollAnimated), 50);\n        return;\n      }\n\n      this._keyboardAwareView.scrollToEnd({animated: scrollAnimated});\n    }\n  }\n\n  scrollTo(options) {\n    if (this._keyboardAwareView) {\n      if (this._keyboardAwareView.scrollTo) {\n        this._keyboardAwareView.scrollTo(options);\n      } else if (this._keyboardAwareView.scrollToOffset) {\n        this._keyboardAwareView.scrollToOffset({...options, offset: _.get(options, 'y', 0)});\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}