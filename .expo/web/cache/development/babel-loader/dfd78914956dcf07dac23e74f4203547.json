{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Constants } from \"../../helpers\";\nimport { Typography, Colors } from \"../../style\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../../components/view\";\nimport Image from \"../../components/image\";\nimport Button from \"../../components/button\";\nimport Text from \"../../components/text\";\nimport { StateScreenProps } from \"./types\";\n\nvar StateScreen = function (_Component) {\n  _inherits(StateScreen, _Component);\n\n  var _super = _createSuper(StateScreen);\n\n  function StateScreen(props) {\n    var _this;\n\n    _classCallCheck(this, StateScreen);\n\n    _this = _super.call(this, props);\n\n    _this.generateStyles();\n\n    return _this;\n  }\n\n  _createClass(StateScreen, [{\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      var imageSource = this.props.imageSource;\n      var isRemoteImage = _.isObject(imageSource) && Boolean(imageSource.uri);\n      this.styles = createStyles(isRemoteImage);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          subtitle = _this$props.subtitle,\n          imageSource = _this$props.imageSource,\n          ctaLabel = _this$props.ctaLabel,\n          onCtaPress = _this$props.onCtaPress,\n          testID = _this$props.testID;\n      return React.createElement(View, {\n        style: this.styles.container,\n        testID: testID\n      }, React.createElement(Image, {\n        style: this.styles.image,\n        resizeMode: 'contain',\n        source: imageSource\n      }), React.createElement(Text, {\n        style: [this.styles.title]\n      }, title), React.createElement(Text, {\n        style: [this.styles.subtitle]\n      }, subtitle), React.createElement(Button, {\n        link: true,\n        \"marginT-30\": true,\n        onPress: onCtaPress,\n        labelStyle: this.styles.ctaLabel,\n        label: Constants.isAndroid ? _.toUpper(ctaLabel) : ctaLabel\n      }));\n    }\n  }]);\n\n  return StateScreen;\n}(Component);\n\nStateScreen.displayName = 'StateScreen';\nexport { StateScreenProps };\nexport default asBaseComponent(StateScreen);\n\nfunction createStyles(isRemoteImage) {\n  var imageStyle = _.merge({\n    height: 200\n  }, isRemoteImage && {\n    width: Constants.screenWidth * 0.9\n  });\n\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 80,\n      justifyContent: 'flex-start',\n      alignItems: 'center'\n    },\n    image: imageStyle,\n    title: _objectSpread(_objectSpread({\n      textAlign: 'center'\n    }, Typography.text50), {}, {\n      color: Colors.grey10,\n      fontWeight: '300'\n    }),\n    subtitle: _objectSpread(_objectSpread({\n      textAlign: 'center'\n    }, Typography.text70), {}, {\n      color: Colors.grey40,\n      fontWeight: '300',\n      marginTop: 12\n    }),\n    ctaLabel: _objectSpread({\n      color: Colors.primary\n    }, Typography.text70)\n  });\n}","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/stateScreen/index.js"],"names":["_","React","Component","Constants","Typography","Colors","asBaseComponent","View","Image","Button","Text","StateScreenProps","StateScreen","props","generateStyles","imageSource","isRemoteImage","isObject","Boolean","uri","styles","createStyles","title","subtitle","ctaLabel","onCtaPress","testID","container","image","isAndroid","toUpper","displayName","imageStyle","merge","height","width","screenWidth","StyleSheet","create","flex","paddingTop","justifyContent","alignItems","textAlign","text50","color","grey10","fontWeight","text70","grey40","marginTop","primary"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Constants } from \"../../helpers\";\nimport { Typography, Colors } from \"../../style\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../../components/view\";\nimport Image from \"../../components/image\";\nimport Button from \"../../components/button\";\nimport Text from \"../../components/text\";\nimport { StateScreenProps } from \"./types\";\n\nclass StateScreen extends Component {\n  static displayName = 'StateScreen';\n\n  constructor(props) {\n    super(props);\n    this.generateStyles();\n  }\n\n  generateStyles() {\n    const {\n      imageSource\n    } = this.props;\n    const isRemoteImage = _.isObject(imageSource) && Boolean(imageSource.uri);\n    this.styles = createStyles(isRemoteImage);\n  }\n\n  render() {\n    const {\n      title,\n      subtitle,\n      imageSource,\n      ctaLabel,\n      onCtaPress,\n      testID\n    } = this.props;\n    return <View style={this.styles.container} testID={testID}>\n        <Image style={this.styles.image} resizeMode={'contain'} source={imageSource} />\n        <Text style={[this.styles.title]}>{title}</Text>\n        <Text style={[this.styles.subtitle]}>{subtitle}</Text>\n        <Button link marginT-30 onPress={onCtaPress} labelStyle={this.styles.ctaLabel} label={Constants.isAndroid ? _.toUpper(ctaLabel) : ctaLabel} />\n      </View>;\n  }\n\n}\n\nexport { StateScreenProps };\nexport default asBaseComponent(StateScreen);\n\nfunction createStyles(isRemoteImage) {\n  const imageStyle = _.merge({\n    height: 200\n  }, isRemoteImage && {\n    width: Constants.screenWidth * 0.9\n  });\n\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 80,\n      justifyContent: 'flex-start',\n      alignItems: 'center'\n    },\n    image: imageStyle,\n    title: {\n      textAlign: 'center',\n      ...Typography.text50,\n      color: Colors.grey10,\n      fontWeight: '300'\n    },\n    subtitle: {\n      textAlign: 'center',\n      ...Typography.text70,\n      color: Colors.grey40,\n      fontWeight: '300',\n      marginTop: 12\n    },\n    ctaLabel: {\n      color: Colors.primary,\n      ...Typography.text70\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}