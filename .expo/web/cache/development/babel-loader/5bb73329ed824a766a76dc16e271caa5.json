{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport _ from 'lodash';\nimport React, { Component, useCallback } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Constants } from \"../../helpers\";\nimport { Colors } from \"../../style\";\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport View from \"../view\";\nimport Image from \"../image\";\nvar GRADIENT_WIDTH = 76;\n\nvar defaultImage = function defaultImage() {\n  return require(\"./assets/gradientOverlay.png\");\n};\n\nvar ScrollBar = function (_Component) {\n  _inherits(ScrollBar, _Component);\n\n  var _super = _createSuper(ScrollBar);\n\n  function ScrollBar(props) {\n    var _this;\n\n    _classCallCheck(this, ScrollBar);\n\n    _this = _super.call(this, props);\n    _this.scrollbar = undefined;\n    _this.itemsLayouts = {};\n    _this.contentOffset = 0;\n    _this.scrollContentWidth = 0;\n    _this.containerWidth = 0;\n\n    _this.focusIndex = function () {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var focusedItemLayout = _this.itemsLayouts[index];\n\n      if (focusedItemLayout) {\n        var x = focusedItemLayout.x,\n            width = focusedItemLayout.width;\n\n        if (x < _this.contentOffset) {\n          _this.scrollbar.scrollTo({\n            x: x - width\n          });\n        } else if (x + width > _this.contentOffset + _this.containerWidth) {\n          var offsetChange = Math.max(0, x - (_this.contentOffset + _this.containerWidth));\n\n          _this.scrollbar.scrollTo({\n            x: _this.contentOffset + offsetChange + width\n          });\n        }\n      }\n    };\n\n    _this.animateGradientOpacity = function (offsetX, contentWidth, containerWidth) {\n      var overflow = contentWidth - containerWidth;\n      var newValue = offsetX > 0 && offsetX >= overflow - 1 ? 0 : 1;\n      var newValueLeft = offsetX > 0 ? 1 : 0;\n      Animated.parallel([Animated.spring(_this.state.gradientOpacity, {\n        toValue: newValue,\n        speed: 20,\n        useNativeDriver: true\n      }), Animated.spring(_this.state.gradientOpacityLeft, {\n        toValue: newValueLeft,\n        speed: 20,\n        useNativeDriver: true\n      })]).start();\n    };\n\n    _this.onScroll = function (event) {\n      var _event$nativeEvent = event.nativeEvent,\n          layoutMeasurement = _event$nativeEvent.layoutMeasurement,\n          contentOffset = _event$nativeEvent.contentOffset,\n          contentSize = _event$nativeEvent.contentSize;\n      _this.contentOffset = contentOffset.x;\n      var offsetX = contentOffset.x;\n      var contentWidth = contentSize.width;\n      var containerWidth = layoutMeasurement.width;\n\n      _this.animateGradientOpacity(offsetX, contentWidth, containerWidth);\n\n      _this.props.onScroll == null ? void 0 : _this.props.onScroll(event);\n    };\n\n    _this.onContentSizeChange = function (contentWidth, contentHeight) {\n      if (_this.scrollContentWidth !== contentWidth) {\n        _this.scrollContentWidth = contentWidth;\n\n        if (contentWidth > _this.containerWidth) {\n          _this.setState({\n            gradientOpacity: new Animated.Value(1)\n          });\n        }\n\n        _this.props.onContentSizeChange == null ? void 0 : _this.props.onContentSizeChange(contentWidth, contentHeight);\n      }\n    };\n\n    _this.onLayout = function (event) {\n      _this.containerWidth = event.nativeEvent.layout.width;\n      _this.props.onLayout == null ? void 0 : _this.props.onLayout(event);\n\n      _this.setState({\n        gradientOpacity: new Animated.Value(_this.scrollContentWidth > _this.containerWidth ? 1 : 0)\n      });\n    };\n\n    _this.onItemLayout = function (_ref) {\n      var layout = _ref.layout,\n          index = _ref.index;\n      _this.itemsLayouts[index] = layout;\n      var _this$props = _this.props,\n          children = _this$props.children,\n          focusIndex = _this$props.focusIndex;\n\n      if (children && _.keys(_this.itemsLayouts).length === _.keys(children).length) {\n        _this.focusIndex(focusIndex);\n      }\n    };\n\n    _this.state = {\n      gradientOpacity: new Animated.Value(0),\n      gradientOpacityLeft: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(ScrollBar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var focusIndex = this.props.focusIndex;\n\n      if (prevProps.focusIndex !== focusIndex) {\n        this.focusIndex(focusIndex);\n      }\n    }\n  }, {\n    key: \"renderScrollable\",\n    value: function renderScrollable() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          useList = _this$props2.useList,\n          forwardedRef = _this$props2.forwardedRef,\n          children = _this$props2.children;\n      var Component = useList ? FlatList : ScrollView;\n      return React.createElement(Component, _extends({\n        scrollEventThrottle: 100\n      }, this.props, {\n        ref: function ref(r) {\n          _this2.scrollbar = r;\n\n          if (_.isFunction(forwardedRef)) {\n            forwardedRef(r);\n          } else if (_.isObject(forwardedRef)) {\n            forwardedRef.current = r;\n          }\n        },\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        onScroll: this.onScroll,\n        onContentSizeChange: this.onContentSizeChange\n      }), children && React.Children.map(children, function (child, index) {\n        return React.createElement(Item, {\n          onLayout: _this2.onItemLayout,\n          index: index\n        }, child);\n      }));\n    }\n  }, {\n    key: \"renderGradient\",\n    value: function renderGradient(left) {\n      var _this$state = this.state,\n          gradientOpacity = _this$state.gradientOpacity,\n          gradientOpacityLeft = _this$state.gradientOpacityLeft;\n      var _this$props3 = this.props,\n          gradientWidth = _this$props3.gradientWidth,\n          gradientHeight = _this$props3.gradientHeight,\n          gradientMargins = _this$props3.gradientMargins,\n          height = _this$props3.height,\n          gradientColor = _this$props3.gradientColor,\n          gradientImage = _this$props3.gradientImage;\n      var imageTransform = Constants.isRTL ? left ? undefined : [{\n        scaleX: -1\n      }] : left ? [{\n        scaleX: -1\n      }] : undefined;\n      var heightToUse = gradientHeight || height || '100%';\n      return React.createElement(Animated.View, {\n        pointerEvents: \"none\",\n        style: {\n          opacity: left ? gradientOpacityLeft : gradientOpacity,\n          width: gradientWidth,\n          height: heightToUse,\n          position: 'absolute',\n          right: !left ? gradientMargins : undefined,\n          left: left ? gradientMargins : undefined\n        }\n      }, React.createElement(Image, {\n        source: gradientImage || defaultImage(),\n        style: {\n          width: gradientWidth,\n          height: heightToUse,\n          tintColor: gradientColor,\n          transform: imageTransform\n        },\n        resizeMode: 'stretch'\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          containerView = _this$props4.containerView,\n          containerProps = _this$props4.containerProps;\n      var Container = containerView || View;\n      return React.createElement(Container, _extends({\n        row: true\n      }, containerProps, {\n        onLayout: this.onLayout\n      }), this.renderScrollable(), this.renderGradient(false), this.renderGradient(true));\n    }\n  }]);\n\n  return ScrollBar;\n}(Component);\n\nScrollBar.propTypes = {\n  useList: _pt.bool,\n  containerView: _pt.elementType,\n  containerProps: _pt.object,\n  height: _pt.number,\n  gradientHeight: _pt.number,\n  gradientWidth: _pt.number,\n  gradientMargins: _pt.number,\n  gradientColor: _pt.string,\n  focusIndex: _pt.number\n};\nScrollBar.displayName = 'ScrollBar';\nScrollBar.defaultProps = {\n  gradientWidth: GRADIENT_WIDTH,\n  gradientMargins: 0,\n  gradientColor: Colors.white,\n  focusIndex: 0\n};\n\nvar Item = function Item(_ref2) {\n  var children = _ref2.children,\n      index = _ref2.index,\n      onLayout = _ref2.onLayout;\n  var onItemLayout = useCallback(function (_ref3) {\n    var layout = _ref3.nativeEvent.layout;\n    onLayout({\n      layout: layout,\n      index: index\n    });\n  }, [children]);\n  return React.createElement(View, {\n    flexG: true,\n    onLayout: onItemLayout\n  }, children);\n};\n\nItem.displayName = 'IGNORE';\nScrollBar.Item = Item;\nexport default asBaseComponent(forwardRef(ScrollBar));","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/scrollBar/index.js"],"names":["_pt","_","React","Component","useCallback","Constants","Colors","asBaseComponent","forwardRef","View","Image","GRADIENT_WIDTH","defaultImage","require","ScrollBar","props","scrollbar","undefined","itemsLayouts","contentOffset","scrollContentWidth","containerWidth","focusIndex","index","focusedItemLayout","x","width","scrollTo","offsetChange","Math","max","animateGradientOpacity","offsetX","contentWidth","overflow","newValue","newValueLeft","Animated","parallel","spring","state","gradientOpacity","toValue","speed","useNativeDriver","gradientOpacityLeft","start","onScroll","event","nativeEvent","layoutMeasurement","contentSize","onContentSizeChange","contentHeight","setState","Value","onLayout","layout","onItemLayout","children","keys","length","prevProps","useList","forwardedRef","FlatList","ScrollView","r","isFunction","isObject","current","Children","map","child","left","gradientWidth","gradientHeight","gradientMargins","height","gradientColor","gradientImage","imageTransform","isRTL","scaleX","heightToUse","opacity","position","right","tintColor","transform","containerView","containerProps","Container","renderScrollable","renderGradient","propTypes","bool","elementType","object","number","string","displayName","defaultProps","white","Item"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport _ from 'lodash';\nimport React, { Component, useCallback } from 'react';\nimport { Animated, ScrollView, FlatList } from 'react-native';\nimport { Constants } from \"../../helpers\";\nimport { Colors } from \"../../style\";\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport View from \"../view\";\nimport Image from \"../image\";\nconst GRADIENT_WIDTH = 76;\n\nconst defaultImage = () => require(\"./assets/gradientOverlay.png\");\n/**\n * @description: Scrollable container with animated gradient overlay for horizontal scroll\n * @extends: ScrollView / FlatList\n */\n\n\nclass ScrollBar extends Component {\n  static propTypes = {\n    /**\n         * Whether to use a FlatList. NOTE: you must pass 'data' and 'renderItem' props as well\n         */\n    useList: _pt.bool,\n\n    /**\n         * The element to use as a container, instead of a View\n         */\n    containerView: _pt.elementType,\n\n    /**\n         * The props to pass the container\n         */\n    containerProps: _pt.object,\n\n    /**\n         * The component's height\n         */\n    height: _pt.number,\n\n    /**\n         * The gradient's height, defaults to the component's height\n         */\n    gradientHeight: _pt.number,\n\n    /**\n         * The gradient's width\n         */\n    gradientWidth: _pt.number,\n\n    /**\n         * The gradient's margins for the edge\n         */\n    gradientMargins: _pt.number,\n\n    /**\n         * The gradient's tint color\n         */\n    gradientColor: _pt.string,\n\n    /**\n         * The index to currently focus on\n         */\n    focusIndex: _pt.number\n  };\n  static displayName = 'ScrollBar';\n  static defaultProps = {\n    gradientWidth: GRADIENT_WIDTH,\n    gradientMargins: 0,\n    gradientColor: Colors.white,\n    focusIndex: 0\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      gradientOpacity: new Animated.Value(0),\n      gradientOpacityLeft: new Animated.Value(0)\n    };\n  }\n\n  scrollbar = undefined;\n  itemsLayouts = {};\n  contentOffset = 0;\n  scrollContentWidth = 0;\n  containerWidth = 0;\n\n  componentDidUpdate(prevProps) {\n    const {\n      focusIndex\n    } = this.props;\n\n    if (prevProps.focusIndex !== focusIndex) {\n      this.focusIndex(focusIndex);\n    }\n  }\n\n  focusIndex = (index = 0) => {\n    const focusedItemLayout = this.itemsLayouts[index];\n\n    if (focusedItemLayout) {\n      const {\n        x,\n        width\n      } = focusedItemLayout;\n\n      if (x < this.contentOffset) {\n        this.scrollbar.scrollTo({\n          x: x - width\n        });\n      } else if (x + width > this.contentOffset + this.containerWidth) {\n        const offsetChange = Math.max(0, x - (this.contentOffset + this.containerWidth));\n        this.scrollbar.scrollTo({\n          x: this.contentOffset + offsetChange + width\n        });\n      }\n    }\n  };\n  animateGradientOpacity = (offsetX, contentWidth, containerWidth) => {\n    const overflow = contentWidth - containerWidth;\n    const newValue = offsetX > 0 && offsetX >= overflow - 1 ? 0 : 1;\n    const newValueLeft = offsetX > 0 ? 1 : 0;\n    Animated.parallel([Animated.spring(this.state.gradientOpacity, {\n      toValue: newValue,\n      speed: 20,\n      useNativeDriver: true\n    }), Animated.spring(this.state.gradientOpacityLeft, {\n      toValue: newValueLeft,\n      speed: 20,\n      useNativeDriver: true\n    })]).start();\n  };\n  onScroll = event => {\n    const {\n      layoutMeasurement,\n      contentOffset,\n      contentSize\n    } = event.nativeEvent;\n    this.contentOffset = contentOffset.x;\n    const offsetX = contentOffset.x;\n    const contentWidth = contentSize.width;\n    const containerWidth = layoutMeasurement.width;\n    this.animateGradientOpacity(offsetX, contentWidth, containerWidth);\n    this.props.onScroll?.(event);\n  };\n  onContentSizeChange = (contentWidth, contentHeight) => {\n    if (this.scrollContentWidth !== contentWidth) {\n      this.scrollContentWidth = contentWidth; // race condition - won't pass if onLayout() was not called before\n\n      if (contentWidth > this.containerWidth) {\n        this.setState({\n          gradientOpacity: new Animated.Value(1)\n        });\n      }\n\n      this.props.onContentSizeChange?.(contentWidth, contentHeight);\n    }\n  };\n  onLayout = event => {\n    this.containerWidth = event.nativeEvent.layout.width;\n    this.props.onLayout?.(event); // 1 - for race condition, in case onContentSizeChange() is called before\n    // 0 - for containerWidth change, when onContentSizeChange() is called first\n\n    this.setState({\n      gradientOpacity: new Animated.Value(this.scrollContentWidth > this.containerWidth ? 1 : 0)\n    });\n  };\n  onItemLayout = ({\n    layout,\n    index\n  }) => {\n    this.itemsLayouts[index] = layout;\n    const {\n      children,\n      focusIndex\n    } = this.props;\n\n    if (children && _.keys(this.itemsLayouts).length === _.keys(children).length) {\n      this.focusIndex(focusIndex);\n    }\n  };\n\n  renderScrollable() {\n    const {\n      useList,\n      forwardedRef,\n      children\n    } = this.props;\n    const Component = useList ? FlatList : ScrollView;\n    return <Component scrollEventThrottle={100} {...this.props} ref={r => {\n      this.scrollbar = r;\n\n      if (_.isFunction(forwardedRef)) {\n        forwardedRef(r);\n      } else if (_.isObject(forwardedRef)) {\n        //@ts-ignore\n        forwardedRef.current = r;\n      }\n    }} horizontal showsHorizontalScrollIndicator={false} onScroll={this.onScroll} onContentSizeChange={this.onContentSizeChange}>\n        {children && React.Children.map(children, (child, index) => {\n        return <Item onLayout={this.onItemLayout} index={index}>\n                {child}\n              </Item>;\n      })}\n      </Component>;\n  }\n\n  renderGradient(left) {\n    const {\n      gradientOpacity,\n      gradientOpacityLeft\n    } = this.state;\n    const {\n      gradientWidth,\n      gradientHeight,\n      gradientMargins,\n      height,\n      gradientColor,\n      gradientImage\n    } = this.props;\n    const imageTransform = Constants.isRTL ? left ? undefined : [{\n      scaleX: -1\n    }] : left ? [{\n      scaleX: -1\n    }] : undefined;\n    const heightToUse = gradientHeight || height || '100%';\n    return <Animated.View pointerEvents=\"none\" style={{\n      opacity: left ? gradientOpacityLeft : gradientOpacity,\n      width: gradientWidth,\n      height: heightToUse,\n      position: 'absolute',\n      right: !left ? gradientMargins : undefined,\n      left: left ? gradientMargins : undefined\n    }}>\n        <Image source={gradientImage || defaultImage()} style={{\n        width: gradientWidth,\n        height: heightToUse,\n        tintColor: gradientColor,\n        transform: imageTransform\n      }} resizeMode={'stretch'} />\n      </Animated.View>;\n  }\n\n  render() {\n    const {\n      containerView,\n      containerProps\n    } = this.props;\n    const Container = containerView || View;\n    return <Container row {...containerProps} onLayout={this.onLayout}>\n        {this.renderScrollable()}\n        {this.renderGradient(false)}\n        {this.renderGradient(true)}\n      </Container>;\n  }\n\n}\n\nconst Item = ({\n  children,\n  index,\n  onLayout\n}) => {\n  const onItemLayout = useCallback(({\n    nativeEvent: {\n      layout\n    }\n  }) => {\n    onLayout({\n      layout,\n      index\n    });\n  }, [children]);\n  return <View flexG onLayout={onItemLayout}>\n      {children}\n    </View>;\n};\n\nItem.displayName = 'IGNORE';\nScrollBar.Item = Item;\nexport default asBaseComponent(forwardRef(ScrollBar));"]},"metadata":{},"sourceType":"module"}