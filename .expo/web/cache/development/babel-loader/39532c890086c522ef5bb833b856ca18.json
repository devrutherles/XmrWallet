{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _Typography$text;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport { Colors, Typography } from \"../../style\";\nimport { Constants } from \"../../helpers\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Button, { ButtonSize } from \"../button\";\nimport PageControl from \"../pageControl\";\nimport { HighlighterOverlayView } from \"../../nativeComponents\";\nvar defaultOverlayColor = Colors.rgba(Colors.black, 0.82);\nvar defaultTextColor = Colors.white;\nvar defaultStrokeColor = Colors.rgba(Colors.white, 0.12);\nvar defaultStrokeWidth = 12;\nvar contentViewPadding = 32;\nvar contentViewRightMargin = Constants.isIOS ? 45 : 46;\nvar titleBottomMargin = 12;\nvar messageBottomMargin = 24;\nvar messageLineHeight = 24;\nvar defaultButtonLabel = 'Got it';\nvar contentViewHeight = Constants.isAndroid ? 268 : 282;\n\nvar FeatureHighlight = function (_Component) {\n  _inherits(FeatureHighlight, _Component);\n\n  var _super = _createSuper(FeatureHighlight);\n\n  function FeatureHighlight(props) {\n    var _this;\n\n    _classCallCheck(this, FeatureHighlight);\n\n    _this = _super.call(this, props);\n    _this.contentHeight = contentViewHeight;\n\n    _this.shouldSetTargetPosition = function (nextProps) {\n      return (nextProps.getTarget == null ? void 0 : nextProps.getTarget()) !== (_this.props.getTarget == null ? void 0 : _this.props.getTarget()) || nextProps.title !== _this.props.title || nextProps.visible !== _this.props.visible;\n    };\n\n    _this.onPress = function () {\n      _this.animate(0);\n\n      _this.contentHeight = contentViewHeight;\n      _this.targetPosition = undefined;\n      var confirmButtonProps = _this.props.confirmButtonProps;\n      confirmButtonProps == null ? void 0 : confirmButtonProps.onPress == null ? void 0 : confirmButtonProps.onPress();\n    };\n\n    _this.getComponentDimensions = _this.getComponentDimensions.bind(_assertThisInitialized(_this));\n    _this.setTargetPosition = _this.setTargetPosition.bind(_assertThisInitialized(_this));\n    _this.state = {\n      fadeAnim: new Animated.Value(0),\n      contentTopPosition: undefined\n    };\n    return _this;\n  }\n\n  _createClass(FeatureHighlight, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setTargetPosition();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(nextProps) {\n      if (this.shouldSetTargetPosition(nextProps)) {\n        this.setTargetPosition();\n      }\n\n      if (this.viewRef) {\n        this.setAccessibilityFocus(this.viewRef);\n      }\n    }\n  }, {\n    key: \"setAccessibilityFocus\",\n    value: function setAccessibilityFocus(ref) {\n      var reactTag = findNodeHandle(ref);\n      reactTag && AccessibilityInfo.setAccessibilityFocus(reactTag);\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(toValue) {\n      Animated.timing(this.state.fadeAnim, {\n        toValue: toValue,\n        duration: toValue ? 100 : 0,\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"setTargetPosition\",\n    value: function setTargetPosition() {\n      var _this2 = this;\n\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n\n      if (props.getTarget !== undefined) {\n        var target = props.getTarget();\n\n        if (target) {\n          setTimeout(function () {\n            target.measureInWindow(function (x, y, width, height) {\n              _this2.targetPosition = {\n                left: x,\n                top: y,\n                width: width,\n                height: height\n              };\n\n              _this2.setContentPosition();\n            });\n          }, 0);\n        }\n      } else {\n        var frame = props.highlightFrame;\n\n        if (frame) {\n          this.targetPosition = {\n            left: frame.x,\n            top: frame.y,\n            width: frame.width,\n            height: frame.height\n          };\n          this.setContentPosition();\n        }\n      }\n    }\n  }, {\n    key: \"getContentPosition\",\n    value: function getContentPosition() {\n      var _this$props = this.props,\n          highlightFrame = _this$props.highlightFrame,\n          _this$props$minimumRe = _this$props.minimumRectSize,\n          minimumRectSize = _this$props$minimumRe === void 0 ? {\n        height: 0\n      } : _this$props$minimumRe,\n          _this$props$innerPadd = _this$props.innerPadding,\n          innerPadding = _this$props$innerPadd === void 0 ? 0 : _this$props$innerPadd;\n\n      var _ref = this.targetPosition || {\n        top: 0,\n        height: 0\n      },\n          top = _ref.top,\n          height = _ref.height;\n\n      var screenVerticalCenter = Constants.screenHeight / 2;\n      var targetCenter = top + height / 2;\n      var isAlignedTop = targetCenter > screenVerticalCenter;\n      var topPosition = isAlignedTop ? top - this.contentHeight : top + height;\n\n      if (!highlightFrame && !isAlignedTop) {\n        var minRectHeight = minimumRectSize.height;\n        var isUnderMin = height >= minRectHeight;\n        topPosition = isUnderMin ? topPosition + innerPadding : targetCenter + minRectHeight / 2 + innerPadding / 2;\n      }\n\n      if (topPosition < 0 || topPosition + this.contentHeight > Constants.screenHeight) {\n        console.warn(\"Content is too long and might appear off screen. Please adjust the message length for better results.\");\n      }\n\n      return topPosition;\n    }\n  }, {\n    key: \"setContentPosition\",\n    value: function setContentPosition() {\n      var top = this.getContentPosition();\n      this.setState({\n        contentTopPosition: top\n      });\n      this.animate(1);\n    }\n  }, {\n    key: \"getComponentDimensions\",\n    value: function getComponentDimensions(event) {\n      this.contentHeight = event.nativeEvent.layout.height;\n\n      if (this.targetPosition !== undefined) {\n        this.setContentPosition();\n      }\n    }\n  }, {\n    key: \"renderHighlightMessage\",\n    value: function renderHighlightMessage() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          message = _this$props2.message,\n          titleStyle = _this$props2.titleStyle,\n          messageStyle = _this$props2.messageStyle,\n          confirmButtonProps = _this$props2.confirmButtonProps,\n          textColor = _this$props2.textColor,\n          titleNumberOfLines = _this$props2.titleNumberOfLines,\n          messageNumberOfLines = _this$props2.messageNumberOfLines,\n          pageControlProps = _this$props2.pageControlProps;\n      var color = textColor || defaultTextColor;\n      return React.createElement(Animated.View, {\n        style: [styles.highlightContent, {\n          opacity: this.state.fadeAnim,\n          top: this.state.contentTopPosition\n        }],\n        onLayout: this.getComponentDimensions,\n        pointerEvents: \"box-none\",\n        ref: !pageControlProps ? function (r) {\n          _this3.viewRef = r;\n        } : undefined\n      }, title && React.createElement(Text, {\n        text60: true,\n        style: [styles.title, {\n          color: color,\n          marginBottom: message ? titleBottomMargin : messageBottomMargin\n        }, titleStyle],\n        numberOfLines: titleNumberOfLines,\n        pointerEvents: 'none'\n      }, title), message && React.createElement(Text, {\n        text70: true,\n        style: [styles.message, {\n          color: color\n        }, messageStyle],\n        numberOfLines: messageNumberOfLines,\n        pointerEvents: 'none'\n      }, message), React.createElement(Button, _extends({\n        label: defaultButtonLabel,\n        size: ButtonSize.medium,\n        labelStyle: _objectSpread(_objectSpread({}, Typography.text80), {}, {\n          fontWeight: '700'\n        }),\n        outline: true,\n        outlineColor: color,\n        activeBackgroundColor: Colors.rgba(color, 0.3)\n      }, confirmButtonProps, {\n        onPress: this.onPress\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          node = _this$state.node,\n          contentTopPosition = _this$state.contentTopPosition;\n\n      if (contentTopPosition === undefined) {\n        return null;\n      }\n\n      var _this$props3 = this.props,\n          testID = _this$props3.testID,\n          visible = _this$props3.visible,\n          highlightFrame = _this$props3.highlightFrame,\n          overlayColor = _this$props3.overlayColor,\n          borderColor = _this$props3.borderColor,\n          borderWidth = _this$props3.borderWidth,\n          minimumRectSize = _this$props3.minimumRectSize,\n          innerPadding = _this$props3.innerPadding,\n          onBackgroundPress = _this$props3.onBackgroundPress,\n          borderRadius = _this$props3.borderRadius,\n          pageControlProps = _this$props3.pageControlProps;\n      return React.createElement(HighlighterOverlayView, {\n        testID: testID,\n        highlightViewTag: node,\n        highlightFrame: highlightFrame,\n        visible: visible,\n        overlayColor: overlayColor || defaultOverlayColor,\n        strokeColor: borderColor || defaultStrokeColor,\n        strokeWidth: borderWidth || defaultStrokeWidth,\n        minimumRectSize: minimumRectSize,\n        innerPadding: innerPadding,\n        borderRadius: borderRadius,\n        accessible: false\n      }, React.createElement(TouchableWithoutFeedback, {\n        style: styles.touchableOverlay,\n        onPress: onBackgroundPress\n      }, pageControlProps ? React.createElement(View, {\n        flex: true,\n        bottom: true\n      }, React.createElement(PageControl, _extends({}, pageControlProps, {\n        containerStyle: {\n          marginBottom: 24\n        },\n        ref: function ref(r) {\n          return _this4.viewRef = r;\n        }\n      })), React.createElement(View, {\n        accessible: true,\n        accessibilityLabel: 'dismiss button'\n      })) : React.createElement(View, {\n        flex: true,\n        accessible: true,\n        accessibilityLabel: 'dismiss',\n        accessibilityRole: 'button'\n      })), this.renderHighlightMessage());\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if ((prevState == null ? void 0 : prevState.getTarget) === (nextProps == null ? void 0 : nextProps.getTarget)) {\n        return null;\n      }\n\n      var target = nextProps == null ? void 0 : nextProps.getTarget == null ? void 0 : nextProps.getTarget();\n      var node = FeatureHighlight.findTargetNode(target);\n\n      if (node && node !== (prevState == null ? void 0 : prevState.node)) {\n        return {\n          getTarget: nextProps == null ? void 0 : nextProps.getTarget,\n          node: node\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: \"findTargetNode\",\n    value: function findTargetNode(target) {\n      return findNodeHandle(target);\n    }\n  }]);\n\n  return FeatureHighlight;\n}(Component);\n\nFeatureHighlight.propTypes = {\n  visible: _pt.bool.isRequired,\n  highlightFrame: _pt.shape({\n    x: _pt.number.isRequired,\n    y: _pt.number.isRequired,\n    width: _pt.number.isRequired,\n    height: _pt.number.isRequired\n  }),\n  getTarget: _pt.func,\n  title: _pt.string,\n  message: _pt.string,\n  titleNumberOfLines: _pt.number,\n  messageNumberOfLines: _pt.number,\n  overlayColor: _pt.string,\n  textColor: _pt.string,\n  borderColor: _pt.string,\n  borderWidth: _pt.number,\n  borderRadius: _pt.number,\n  minimumRectSize: _pt.shape({\n    width: _pt.number.isRequired,\n    height: _pt.number.isRequired\n  }),\n  innerPadding: _pt.number,\n  testID: _pt.string\n};\nFeatureHighlight.displayName = 'FeatureHighlight';\nFeatureHighlight.defaultProps = {\n  minimumRectSize: {\n    width: 56,\n    height: 56\n  },\n  innerPadding: 10\n};\nvar styles = StyleSheet.create({\n  highlightContent: {\n    position: 'absolute',\n    padding: contentViewPadding,\n    marginRight: contentViewRightMargin,\n    alignItems: 'flex-start'\n  },\n  title: {\n    lineHeight: (_Typography$text = Typography.text60) == null ? void 0 : _Typography$text.lineHeight,\n    fontWeight: '900'\n  },\n  message: _objectSpread(_objectSpread({\n    marginBottom: messageBottomMargin\n  }, Typography.text70), {}, {\n    lineHeight: messageLineHeight\n  }),\n  touchableOverlay: _objectSpread({}, StyleSheet.absoluteFillObject)\n});\nexport { FeatureHighlight as testable };\nexport default asBaseComponent(FeatureHighlight);","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/featureHighlight/index.js"],"names":["_pt","React","Component","Colors","Typography","Constants","asBaseComponent","View","Text","Button","ButtonSize","PageControl","HighlighterOverlayView","defaultOverlayColor","rgba","black","defaultTextColor","white","defaultStrokeColor","defaultStrokeWidth","contentViewPadding","contentViewRightMargin","isIOS","titleBottomMargin","messageBottomMargin","messageLineHeight","defaultButtonLabel","contentViewHeight","isAndroid","FeatureHighlight","props","contentHeight","shouldSetTargetPosition","nextProps","getTarget","title","visible","onPress","animate","targetPosition","undefined","confirmButtonProps","getComponentDimensions","bind","setTargetPosition","state","fadeAnim","Animated","Value","contentTopPosition","viewRef","setAccessibilityFocus","ref","reactTag","findNodeHandle","AccessibilityInfo","toValue","timing","duration","useNativeDriver","start","target","setTimeout","measureInWindow","x","y","width","height","left","top","setContentPosition","frame","highlightFrame","minimumRectSize","innerPadding","screenVerticalCenter","screenHeight","targetCenter","isAlignedTop","topPosition","minRectHeight","isUnderMin","console","warn","getContentPosition","setState","event","nativeEvent","layout","message","titleStyle","messageStyle","textColor","titleNumberOfLines","messageNumberOfLines","pageControlProps","color","styles","highlightContent","opacity","r","marginBottom","medium","text80","fontWeight","node","testID","overlayColor","borderColor","borderWidth","onBackgroundPress","borderRadius","touchableOverlay","renderHighlightMessage","prevState","findTargetNode","propTypes","bool","isRequired","shape","number","func","string","displayName","defaultProps","StyleSheet","create","position","padding","marginRight","alignItems","lineHeight","text60","text70","absoluteFillObject","testable"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React, { Component } from 'react';\nimport { StyleSheet, findNodeHandle, TouchableWithoutFeedback, Animated, AccessibilityInfo } from 'react-native';\nimport { Colors, Typography } from \"../../style\";\nimport { Constants } from \"../../helpers\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Button, { ButtonSize } from \"../button\";\nimport PageControl from \"../pageControl\"; //@ts-expect-error\n\nimport { HighlighterOverlayView } from \"../../nativeComponents\";\nconst defaultOverlayColor = Colors.rgba(Colors.black, 0.82);\nconst defaultTextColor = Colors.white;\nconst defaultStrokeColor = Colors.rgba(Colors.white, 0.12);\nconst defaultStrokeWidth = 12;\nconst contentViewPadding = 32;\nconst contentViewRightMargin = Constants.isIOS ? 45 : 46;\nconst titleBottomMargin = 12;\nconst messageBottomMargin = 24;\nconst messageLineHeight = 24;\nconst defaultButtonLabel = 'Got it';\nconst contentViewHeight = Constants.isAndroid ? 268 : 282;\n\n/*eslint-disable*/\n\n/**\n * @description: FeatureHighlight component for feature discovery\n * @notes: 1) FeatureHighlight component must be a direct child of the root view returned in render().; 2) If the element to be highlighted doesn't have a style attribute add 'style={{opacity: 1}}' so the Android OS can detect it.\n * @important: FeatureHighlight uses a native library. You MUST add and link the native library to both iOS and Android projects. For instruction please see\n * @importantLink: https://facebook.github.io/react-native/docs/linking-libraries-ios.html\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/FeatureHighlight/FeatureHighlight.gif?raw=true\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FeatureHighlightScreen.tsx\n */\n\n/*eslint-enable*/\nclass FeatureHighlight extends Component {\n  static propTypes = {\n    /**\n       * Boolean to determine if to present the feature highlight component\n       */\n    visible: _pt.bool.isRequired,\n\n    /**\n       * Frame of the area to highlight {x, y, width, height}\n       */\n    highlightFrame: _pt.shape({\n      x: _pt.number.isRequired,\n      y: _pt.number.isRequired,\n      width: _pt.number.isRequired,\n      height: _pt.number.isRequired\n    }),\n\n    /**\n       * Callback that extract the ref of the element to be highlighted\n       */\n    getTarget: _pt.func,\n\n    /**\n       * Title of the content to be displayed\n       */\n    title: _pt.string,\n\n    /**\n       * Message to be displayed\n       */\n    message: _pt.string,\n\n    /**\n       * Title's max number of lines\n       */\n    titleNumberOfLines: _pt.number,\n\n    /**\n       * Message's max number of lines\n       */\n    messageNumberOfLines: _pt.number,\n\n    /**\n       * Color of the content's background (usually includes alpha for transparency)\n       */\n    overlayColor: _pt.string,\n\n    /**\n       * Color of the content's text\n       */\n    textColor: _pt.string,\n\n    /**\n       * Color of the border around the highlighted element\n       */\n    borderColor: _pt.string,\n\n    /**\n       * Width of the border around the highlighted element\n       */\n    borderWidth: _pt.number,\n\n    /**\n       * Border radius for the border corners around the highlighted element\n       */\n    borderRadius: _pt.number,\n\n    /**\n       * The minimum size of the highlighted component (Android API 21+, and only when passing a ref in 'getTarget')\n       */\n    minimumRectSize: _pt.shape({\n      width: _pt.number.isRequired,\n      height: _pt.number.isRequired\n    }),\n\n    /**\n       * The padding of the highlight frame around the highlighted element's frame (only when passing ref in 'getTarget')\n       */\n    innerPadding: _pt.number,\n    testID: _pt.string\n  };\n  static displayName = 'FeatureHighlight';\n  contentHeight = contentViewHeight;\n\n  constructor(props) {\n    super(props);\n    this.getComponentDimensions = this.getComponentDimensions.bind(this);\n    this.setTargetPosition = this.setTargetPosition.bind(this);\n    this.state = {\n      fadeAnim: new Animated.Value(0),\n      // Initial value for opacity: 0\n      contentTopPosition: undefined\n    };\n  }\n\n  static defaultProps = {\n    minimumRectSize: {\n      width: 56,\n      height: 56\n    },\n    innerPadding: 10\n  };\n\n  componentDidMount() {\n    this.setTargetPosition();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState?.getTarget === nextProps?.getTarget) {\n      return null;\n    }\n\n    const target = nextProps?.getTarget?.();\n    const node = FeatureHighlight.findTargetNode(target);\n\n    if (node && node !== prevState?.node) {\n      return {\n        getTarget: nextProps?.getTarget,\n        node\n      };\n    }\n\n    return null;\n  }\n\n  shouldSetTargetPosition = nextProps => {\n    return nextProps.getTarget?.() !== this.props.getTarget?.() || nextProps.title !== this.props.title || nextProps.visible !== this.props.visible;\n  };\n\n  componentDidUpdate(nextProps) {\n    if (this.shouldSetTargetPosition(nextProps)) {\n      this.setTargetPosition();\n    }\n\n    if (this.viewRef) {\n      this.setAccessibilityFocus(this.viewRef);\n    }\n  }\n\n  setAccessibilityFocus(ref) {\n    const reactTag = findNodeHandle(ref);\n    reactTag && AccessibilityInfo.setAccessibilityFocus(reactTag);\n  }\n\n  static findTargetNode(target) {\n    return findNodeHandle(target);\n  }\n\n  animate(toValue) {\n    Animated.timing( // Animate over time\n    this.state.fadeAnim, // The animated value to drive\n    {\n      toValue,\n      // Animate to value\n      duration: toValue ? 100 : 0,\n      // Make it take a while\n      useNativeDriver: true\n    }).start(); // Starts the animation\n  }\n\n  setTargetPosition(props = this.props) {\n    if (props.getTarget !== undefined) {\n      const target = props.getTarget();\n\n      if (target) {\n        setTimeout(() => {\n          target.measureInWindow((x, y, width, height) => {\n            this.targetPosition = {\n              left: x,\n              top: y,\n              width,\n              height\n            };\n            this.setContentPosition();\n          });\n        }, 0);\n      }\n    } else {\n      const frame = props.highlightFrame;\n\n      if (frame) {\n        this.targetPosition = {\n          left: frame.x,\n          top: frame.y,\n          width: frame.width,\n          height: frame.height\n        };\n        this.setContentPosition();\n      }\n    }\n  }\n\n  getContentPosition() {\n    const {\n      highlightFrame,\n      minimumRectSize = {\n        height: 0\n      },\n      innerPadding = 0\n    } = this.props;\n    const {\n      top,\n      height\n    } = this.targetPosition || {\n      top: 0,\n      height: 0\n    };\n    const screenVerticalCenter = Constants.screenHeight / 2;\n    const targetCenter = top + height / 2;\n    const isAlignedTop = targetCenter > screenVerticalCenter;\n    let topPosition = isAlignedTop ? top - this.contentHeight : top + height;\n\n    if (!highlightFrame && !isAlignedTop) {\n      const minRectHeight = minimumRectSize.height;\n      const isUnderMin = height >= minRectHeight;\n      topPosition = isUnderMin ? topPosition + innerPadding : targetCenter + minRectHeight / 2 + innerPadding / 2;\n    }\n\n    if (topPosition < 0 || topPosition + this.contentHeight > Constants.screenHeight) {\n      console.warn(`Content is too long and might appear off screen. Please adjust the message length for better results.`);\n    }\n\n    return topPosition;\n  }\n\n  setContentPosition() {\n    const top = this.getContentPosition();\n    this.setState({\n      contentTopPosition: top\n    });\n    this.animate(1);\n  } // This method will be called more than once in case of layout change!\n\n\n  getComponentDimensions(event) {\n    this.contentHeight = event.nativeEvent.layout.height;\n\n    if (this.targetPosition !== undefined) {\n      this.setContentPosition();\n    }\n  }\n\n  onPress = () => {\n    this.animate(0);\n    this.contentHeight = contentViewHeight;\n    this.targetPosition = undefined;\n    const {\n      confirmButtonProps\n    } = this.props;\n    confirmButtonProps?.onPress?.();\n  };\n\n  renderHighlightMessage() {\n    const {\n      title,\n      message,\n      titleStyle,\n      messageStyle,\n      confirmButtonProps,\n      textColor,\n      titleNumberOfLines,\n      messageNumberOfLines,\n      pageControlProps\n    } = this.props;\n    const color = textColor || defaultTextColor;\n    return <Animated.View style={[styles.highlightContent, {\n      opacity: this.state.fadeAnim,\n      top: this.state.contentTopPosition\n    }]} onLayout={this.getComponentDimensions} pointerEvents=\"box-none\" ref={!pageControlProps ? r => {\n      this.viewRef = r;\n    } : undefined}>\n        {title && <Text text60 style={[styles.title, {\n        color,\n        marginBottom: message ? titleBottomMargin : messageBottomMargin\n      }, titleStyle]} numberOfLines={titleNumberOfLines} // @ts-expect-error\n      pointerEvents={'none'}>\n            {title}\n          </Text>}\n        {message && <Text text70 style={[styles.message, {\n        color\n      }, messageStyle]} numberOfLines={messageNumberOfLines} // @ts-expect-error\n      pointerEvents={'none'}>\n            {message}\n          </Text>}\n        <Button label={defaultButtonLabel} size={ButtonSize.medium} labelStyle={{ ...Typography.text80,\n        fontWeight: '700'\n      }} outline outlineColor={color} activeBackgroundColor={Colors.rgba(color, 0.3)} {...confirmButtonProps} onPress={this.onPress} />\n      </Animated.View>;\n  }\n\n  render() {\n    const {\n      node,\n      contentTopPosition\n    } = this.state;\n\n    if (contentTopPosition === undefined) {\n      return null;\n    }\n\n    const {\n      testID,\n      visible,\n      highlightFrame,\n      overlayColor,\n      borderColor,\n      borderWidth,\n      minimumRectSize,\n      innerPadding,\n      onBackgroundPress,\n      borderRadius,\n      pageControlProps\n    } = this.props;\n    return <HighlighterOverlayView testID={testID} highlightViewTag={node} highlightFrame={highlightFrame} visible={visible} overlayColor={overlayColor || defaultOverlayColor} strokeColor={borderColor || defaultStrokeColor} strokeWidth={borderWidth || defaultStrokeWidth} minimumRectSize={minimumRectSize} innerPadding={innerPadding} borderRadius={borderRadius} accessible={false}>\n        <TouchableWithoutFeedback style={styles.touchableOverlay} onPress={onBackgroundPress}>\n          {pageControlProps ? <View flex bottom>\n              <PageControl {...pageControlProps} containerStyle={{\n            marginBottom: 24\n          }} ref={r => this.viewRef = r} />\n              <View accessible accessibilityLabel={'dismiss button'} />\n            </View> : <View flex accessible accessibilityLabel={'dismiss'} accessibilityRole={'button'} />}\n        </TouchableWithoutFeedback>\n        {this.renderHighlightMessage()}\n      </HighlighterOverlayView>;\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  highlightContent: {\n    position: 'absolute',\n    padding: contentViewPadding,\n    marginRight: contentViewRightMargin,\n    alignItems: 'flex-start'\n  },\n  title: {\n    lineHeight: Typography.text60?.lineHeight,\n    fontWeight: '900'\n  },\n  message: {\n    marginBottom: messageBottomMargin,\n    ...Typography.text70,\n    lineHeight: messageLineHeight\n  },\n  touchableOverlay: { ...StyleSheet.absoluteFillObject\n  }\n});\nexport { FeatureHighlight as testable }; //@ts-ignore typescript - will be fixed when moved to functional component\n\nexport default asBaseComponent(FeatureHighlight);"]},"metadata":{},"sourceType":"module"}