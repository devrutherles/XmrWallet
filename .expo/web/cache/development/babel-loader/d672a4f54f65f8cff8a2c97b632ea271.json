{"ast":null,"code":"import React from 'react';\nimport _ from 'lodash';\nexport function getChildrenLength(props) {\n  return React.Children.count(props.children);\n}\nexport function calcOffset(props, state) {\n  var currentPage = state.currentPage,\n      pageWidth = state.pageWidth,\n      pageHeight = state.pageHeight;\n  var loop = props.loop,\n      _props$containerMargi = props.containerMarginHorizontal,\n      containerMarginHorizontal = _props$containerMargi === void 0 ? 0 : _props$containerMargi;\n  var actualCurrentPage = loop ? currentPage + 1 : currentPage;\n  var nonLoopAdjustment = !loop && currentPage > 0 ? containerMarginHorizontal : 0;\n  var pageSize = props.horizontal ? pageWidth : pageHeight;\n  var offset = pageSize * actualCurrentPage - nonLoopAdjustment;\n  var offsetXY = {\n    x: props.horizontal ? offset : 0,\n    y: props.horizontal ? 0 : offset\n  };\n  return offsetXY;\n}\nexport function calcPageIndex(offset, props, pageSize) {\n  var pagesCount = getChildrenLength(props);\n  var loop = props.loop;\n  var pageIndexIncludingClonedPages = Math.round(offset / pageSize);\n  var actualPageIndex;\n\n  if (loop) {\n    actualPageIndex = (pageIndexIncludingClonedPages + (pagesCount - 1)) % pagesCount;\n  } else {\n    actualPageIndex = Math.min(pagesCount - 1, pageIndexIncludingClonedPages);\n  }\n\n  return actualPageIndex;\n}\nexport function isOutOfBounds(offset, props, pageWidth) {\n  var length = getChildrenLength(props);\n  var minLimit = 1;\n  var maxLimit = (length + 1) * pageWidth - 1;\n  return !_.inRange(offset, minLimit, maxLimit);\n}","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/carousel/CarouselPresenter.js"],"names":["React","_","getChildrenLength","props","Children","count","children","calcOffset","state","currentPage","pageWidth","pageHeight","loop","containerMarginHorizontal","actualCurrentPage","nonLoopAdjustment","pageSize","horizontal","offset","offsetXY","x","y","calcPageIndex","pagesCount","pageIndexIncludingClonedPages","Math","round","actualPageIndex","min","isOutOfBounds","length","minLimit","maxLimit","inRange"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AACvC,SAAOH,KAAK,CAACI,QAAN,CAAeC,KAAf,CAAqBF,KAAK,CAACG,QAA3B,CAAP;AACD;AACD,OAAO,SAASC,UAAT,CAAoBJ,KAApB,EAA2BK,KAA3B,EAAkC;AACvC,MACEC,WADF,GAIID,KAJJ,CACEC,WADF;AAAA,MAEEC,SAFF,GAIIF,KAJJ,CAEEE,SAFF;AAAA,MAGEC,UAHF,GAIIH,KAJJ,CAGEG,UAHF;AAKA,MACEC,IADF,GAGIT,KAHJ,CACES,IADF;AAAA,8BAGIT,KAHJ,CAEEU,yBAFF;AAAA,MAEEA,yBAFF,sCAE8B,CAF9B;AAIA,MAAMC,iBAAiB,GAAGF,IAAI,GAAGH,WAAW,GAAG,CAAjB,GAAqBA,WAAnD;AACA,MAAMM,iBAAiB,GAAG,CAACH,IAAD,IAASH,WAAW,GAAG,CAAvB,GAA2BI,yBAA3B,GAAuD,CAAjF;AACA,MAAMG,QAAQ,GAAGb,KAAK,CAACc,UAAN,GAAmBP,SAAnB,GAA+BC,UAAhD;AACA,MAAMO,MAAM,GAAGF,QAAQ,GAAGF,iBAAX,GAA+BC,iBAA9C;AACA,MAAMI,QAAQ,GAAG;AACfC,IAAAA,CAAC,EAAEjB,KAAK,CAACc,UAAN,GAAmBC,MAAnB,GAA4B,CADhB;AAEfG,IAAAA,CAAC,EAAElB,KAAK,CAACc,UAAN,GAAmB,CAAnB,GAAuBC;AAFX,GAAjB;AAIA,SAAOC,QAAP;AACD;AACD,OAAO,SAASG,aAAT,CAAuBJ,MAAvB,EAA+Bf,KAA/B,EAAsCa,QAAtC,EAAgD;AACrD,MAAMO,UAAU,GAAGrB,iBAAiB,CAACC,KAAD,CAApC;AACA,MACES,IADF,GAEIT,KAFJ,CACES,IADF;AAGA,MAAMY,6BAA6B,GAAGC,IAAI,CAACC,KAAL,CAAWR,MAAM,GAAGF,QAApB,CAAtC;AACA,MAAIW,eAAJ;;AAEA,MAAIf,IAAJ,EAAU;AACRe,IAAAA,eAAe,GAAG,CAACH,6BAA6B,IAAID,UAAU,GAAG,CAAjB,CAA9B,IAAqDA,UAAvE;AACD,GAFD,MAEO;AACLI,IAAAA,eAAe,GAAGF,IAAI,CAACG,GAAL,CAASL,UAAU,GAAG,CAAtB,EAAyBC,6BAAzB,CAAlB;AACD;;AAED,SAAOG,eAAP;AACD;AACD,OAAO,SAASE,aAAT,CAAuBX,MAAvB,EAA+Bf,KAA/B,EAAsCO,SAAtC,EAAiD;AACtD,MAAMoB,MAAM,GAAG5B,iBAAiB,CAACC,KAAD,CAAhC;AACA,MAAM4B,QAAQ,GAAG,CAAjB;AACA,MAAMC,QAAQ,GAAG,CAACF,MAAM,GAAG,CAAV,IAAepB,SAAf,GAA2B,CAA5C;AACA,SAAO,CAACT,CAAC,CAACgC,OAAF,CAAUf,MAAV,EAAkBa,QAAlB,EAA4BC,QAA5B,CAAR;AACD","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nexport function getChildrenLength(props) {\n  return React.Children.count(props.children);\n}\nexport function calcOffset(props, state) {\n  const {\n    currentPage,\n    pageWidth,\n    pageHeight\n  } = state;\n  const {\n    loop,\n    containerMarginHorizontal = 0\n  } = props;\n  const actualCurrentPage = loop ? currentPage + 1 : currentPage;\n  const nonLoopAdjustment = !loop && currentPage > 0 ? containerMarginHorizontal : 0;\n  const pageSize = props.horizontal ? pageWidth : pageHeight;\n  const offset = pageSize * actualCurrentPage - nonLoopAdjustment;\n  const offsetXY = {\n    x: props.horizontal ? offset : 0,\n    y: props.horizontal ? 0 : offset\n  };\n  return offsetXY;\n}\nexport function calcPageIndex(offset, props, pageSize) {\n  const pagesCount = getChildrenLength(props);\n  const {\n    loop\n  } = props;\n  const pageIndexIncludingClonedPages = Math.round(offset / pageSize);\n  let actualPageIndex;\n\n  if (loop) {\n    actualPageIndex = (pageIndexIncludingClonedPages + (pagesCount - 1)) % pagesCount;\n  } else {\n    actualPageIndex = Math.min(pagesCount - 1, pageIndexIncludingClonedPages);\n  }\n\n  return actualPageIndex;\n}\nexport function isOutOfBounds(offset, props, pageWidth) {\n  const length = getChildrenLength(props);\n  const minLimit = 1;\n  const maxLimit = (length + 1) * pageWidth - 1;\n  return !_.inRange(offset, minLimit, maxLimit);\n}"]},"metadata":{},"sourceType":"module"}