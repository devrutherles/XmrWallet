{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _pt from \"prop-types\";\nimport React from 'react';\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\n\nfunction ExpandableSection(props) {\n  var expanded = props.expanded,\n      sectionHeader = props.sectionHeader,\n      children = props.children,\n      top = props.top;\n\n  var onPress = function onPress() {\n    props.onPress == null ? void 0 : props.onPress();\n    LayoutAnimation.configureNext(_objectSpread(_objectSpread({}, LayoutAnimation.Presets.easeInEaseOut), {}, {\n      duration: 300\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, top && expanded && children, React.createElement(TouchableOpacity, {\n    onPress: onPress\n  }, sectionHeader), !top && expanded && children);\n}\n\nExpandableSection.propTypes = {\n  sectionHeader: _pt.element,\n  children: _pt.node,\n  expanded: _pt.bool,\n  top: _pt.bool,\n  onPress: _pt.func\n};\nexport default ExpandableSection;\nvar styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/expandableSection/index.js"],"names":["_pt","React","View","TouchableOpacity","ExpandableSection","props","expanded","sectionHeader","children","top","onPress","LayoutAnimation","configureNext","Presets","easeInEaseOut","duration","styles","container","propTypes","element","node","bool","func","StyleSheet","create","overflow"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,IAAP;AACA,OAAOC,gBAAP;;AAOA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,MACEC,QADF,GAKID,KALJ,CACEC,QADF;AAAA,MAEEC,aAFF,GAKIF,KALJ,CAEEE,aAFF;AAAA,MAGEC,QAHF,GAKIH,KALJ,CAGEG,QAHF;AAAA,MAIEC,GAJF,GAKIJ,KALJ,CAIEI,GAJF;;AAOA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBL,IAAAA,KAAK,CAACK,OAAN,oBAAAL,KAAK,CAACK,OAAN;AACAC,IAAAA,eAAe,CAACC,aAAhB,iCAAmCD,eAAe,CAACE,OAAhB,CAAwBC,aAA3D;AACEC,MAAAA,QAAQ,EAAE;AADZ;AAGD,GALD;;AAOA,SAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACFR,GAAG,IAAIH,QAAP,IAAmBE,QADjB,EAEH,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEE;AAA3B,KAAqCH,aAArC,CAFG,EAGF,CAACE,GAAD,IAAQH,QAAR,IAAoBE,QAHlB,CAAP;AAKD;;AAEDJ,iBAAiB,CAACc,SAAlB,GAA8B;AAI5BX,EAAAA,aAAa,EAAEP,GAAG,CAACmB,OAJS;AAS5BX,EAAAA,QAAQ,EAAER,GAAG,CAACoB,IATc;AAc5Bd,EAAAA,QAAQ,EAAEN,GAAG,CAACqB,IAdc;AAmB5BZ,EAAAA,GAAG,EAAET,GAAG,CAACqB,IAnBmB;AAwB5BX,EAAAA,OAAO,EAAEV,GAAG,CAACsB;AAxBe,CAA9B;AA0BA,eAAelB,iBAAf;AACA,IAAMY,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,QAAQ,EAAE;AADD;AADoB,CAAlB,CAAf","sourcesContent":["import _pt from \"prop-types\";\nimport React from 'react';\nimport { LayoutAnimation, StyleSheet } from 'react-native';\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\n\n/**\n * @description: ExpandableSection component to render expanded section below or above the sectionHeader\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ExpandableSectionScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/ExpandableSection/ExpandableSection.gif?raw=true\n */\nfunction ExpandableSection(props) {\n  const {\n    expanded,\n    sectionHeader,\n    children,\n    top\n  } = props;\n\n  const onPress = () => {\n    props.onPress?.();\n    LayoutAnimation.configureNext({ ...LayoutAnimation.Presets.easeInEaseOut,\n      duration: 300\n    });\n  };\n\n  return <View style={styles.container}>\n      {top && expanded && children}\n      <TouchableOpacity onPress={onPress}>{sectionHeader}</TouchableOpacity>\n      {!top && expanded && children}\n    </View>;\n}\n\nExpandableSection.propTypes = {\n  /**\n     * expandableSection header element\n     */\n  sectionHeader: _pt.element,\n\n  /**\n     * expandableSection expandable children\n     */\n  children: _pt.node,\n\n  /**\n     * should the expandableSection be expanded\n     */\n  expanded: _pt.bool,\n\n  /**\n     * should the expandableSection open above the sectionHeader\n     */\n  top: _pt.bool,\n\n  /**\n     * action for when pressing the header of the expandableSection\n     */\n  onPress: _pt.func\n};\nexport default ExpandableSection;\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  }\n});"]},"metadata":{},"sourceType":"module"}