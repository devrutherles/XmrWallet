{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport SliderContext from \"./SliderContext\";\nimport { Colors } from \"../../../style\";\nimport View from \"../../view\";\n\nvar SliderGroup = function (_Component) {\n  _inherits(SliderGroup, _Component);\n\n  var _super = _createSuper(SliderGroup);\n\n  function SliderGroup(props) {\n    var _this;\n\n    _classCallCheck(this, SliderGroup);\n\n    _this = _super.call(this, props);\n\n    _this.setValue = function (value) {\n      _this.setState({\n        value: value\n      });\n\n      _.invoke(_this.props, 'onValueChange', Colors.getHexString(value));\n    };\n\n    _this.state = {\n      value: Colors.getHSL(props.color)\n    };\n    return _this;\n  }\n\n  _createClass(SliderGroup, [{\n    key: \"getContextProviderValue\",\n    value: function getContextProviderValue() {\n      return {\n        value: this.state.value,\n        setValue: this.setValue\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, this.props, React.createElement(SliderContext.Provider, {\n        value: this.getContextProviderValue()\n      }, this.props.children));\n    }\n  }]);\n\n  return SliderGroup;\n}(Component);\n\nSliderGroup.propTypes = {\n  color: _pt.string.isRequired,\n  onValueChange: _pt.func.isRequired\n};\nSliderGroup.displayName = 'IGNORE';\nexport { SliderGroup as default };","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/slider/context/SliderGroup.js"],"names":["_pt","React","Component","_","SliderContext","Colors","View","SliderGroup","props","setValue","value","setState","invoke","getHexString","state","getHSL","color","getContextProviderValue","children","propTypes","string","isRequired","onValueChange","func","displayName"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,aAAP;AACA,SAASC,MAAT;AACA,OAAOC,IAAP;;IACqBC,W;;;;;AAOnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAcnBC,QAdmB,GAcR,UAAAC,KAAK,EAAI;AAClB,YAAKC,QAAL,CAAc;AACZD,QAAAA,KAAK,EAALA;AADY,OAAd;;AAIAP,MAAAA,CAAC,CAACS,MAAF,CAAS,MAAKJ,KAAd,EAAqB,eAArB,EAAsCH,MAAM,CAACQ,YAAP,CAAoBH,KAApB,CAAtC;AACD,KApBkB;;AAEjB,UAAKI,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAEL,MAAM,CAACU,MAAP,CAAcP,KAAK,CAACQ,KAApB;AADI,KAAb;AAFiB;AAKlB;;;;WAED,mCAA0B;AACxB,aAAO;AACLN,QAAAA,KAAK,EAAE,KAAKI,KAAL,CAAWJ,KADb;AAELD,QAAAA,QAAQ,EAAE,KAAKA;AAFV,OAAP;AAID;;;WAUD,kBAAS;AACP,aAAO,oBAAC,IAAD,EAAU,KAAKD,KAAf,EACH,oBAAC,aAAD,CAAe,QAAf;AAAwB,QAAA,KAAK,EAAE,KAAKS,uBAAL;AAA/B,SACG,KAAKT,KAAL,CAAWU,QADd,CADG,CAAP;AAKD;;;;EAnCsChB,S;;AAApBK,W,CACZY,S,GAAY;AACjBH,EAAAA,KAAK,EAAEhB,GAAG,CAACoB,MAAJ,CAAWC,UADD;AAEjBC,EAAAA,aAAa,EAAEtB,GAAG,CAACuB,IAAJ,CAASF;AAFP,C;AADAd,W,CAKZiB,W,GAAc,Q;SALFjB,W","sourcesContent":["import _pt from \"prop-types\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport SliderContext from \"./SliderContext\";\nimport { Colors } from \"../../../style\";\nimport View from \"../../view\";\nexport default class SliderGroup extends Component {\n  static propTypes = {\n    color: _pt.string.isRequired,\n    onValueChange: _pt.func.isRequired\n  };\n  static displayName = 'IGNORE';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: Colors.getHSL(props.color)\n    };\n  }\n\n  getContextProviderValue() {\n    return {\n      value: this.state.value,\n      setValue: this.setValue\n    };\n  }\n\n  setValue = value => {\n    this.setState({\n      value\n    });\n\n    _.invoke(this.props, 'onValueChange', Colors.getHexString(value));\n  };\n\n  render() {\n    return <View {...this.props}>\n        <SliderContext.Provider value={this.getContextProviderValue()}>\n          {this.props.children}\n        </SliderContext.Provider>\n      </View>;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}