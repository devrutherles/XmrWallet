{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"type\", \"containerStyle\", \"disabled\", \"accessible\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport tinycolor from 'tinycolor2';\nimport { HueGradient, LightnessGradient, SaturationGradient, Gradient } from 'react-native-color';\nimport { Colors } from \"../../style\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport Slider from \"./index\";\nimport asSliderGroupChild from \"./context/asSliderGroupChild\";\nexport var GradientSliderTypes;\n\n(function (GradientSliderTypes) {\n  GradientSliderTypes[\"DEFAULT\"] = \"default\";\n  GradientSliderTypes[\"HUE\"] = \"hue\";\n  GradientSliderTypes[\"LIGHTNESS\"] = \"lightness\";\n  GradientSliderTypes[\"SATURATION\"] = \"saturation\";\n})(GradientSliderTypes || (GradientSliderTypes = {}));\n\nvar defaultProps = {\n  type: GradientSliderTypes.DEFAULT,\n  gradientSteps: 120,\n  color: Colors.blue30\n};\n\nvar GradientSlider = function (_Component) {\n  _inherits(GradientSlider, _Component);\n\n  var _super = _createSuper(GradientSlider);\n\n  function GradientSlider(props) {\n    var _this;\n\n    _classCallCheck(this, GradientSlider);\n\n    _this = _super.call(this, props);\n\n    _this.getStepColor = function (i) {\n      var color = _this.getColor();\n\n      return tinycolor(_objectSpread(_objectSpread({}, color), {}, {\n        a: i\n      })).toHslString();\n    };\n\n    _this.renderDefaultGradient = function () {\n      var gradientSteps = _this.props.gradientSteps;\n      return React.createElement(Gradient, {\n        gradientSteps: gradientSteps,\n        maximumValue: 1,\n        getStepColor: _this.getStepColor\n      });\n    };\n\n    _this.renderHueGradient = function () {\n      var gradientSteps = _this.props.gradientSteps;\n      return React.createElement(HueGradient, {\n        gradientSteps: gradientSteps\n      });\n    };\n\n    _this.renderLightnessGradient = function () {\n      var color = _this.getColor();\n\n      var gradientSteps = _this.props.gradientSteps;\n      return React.createElement(LightnessGradient, {\n        color: color,\n        gradientSteps: gradientSteps\n      });\n    };\n\n    _this.renderSaturationGradient = function () {\n      var color = _this.getColor();\n\n      var gradientSteps = _this.props.gradientSteps;\n      return React.createElement(SaturationGradient, {\n        color: color,\n        gradientSteps: gradientSteps\n      });\n    };\n\n    _this.onValueChange = function (value, alpha) {\n      _.invoke(_this.props, 'onValueChange', value, alpha);\n    };\n\n    _this.updateAlpha = function (a) {\n      var color = _this.getColor();\n\n      _this.updateColor(_objectSpread(_objectSpread({}, color), {}, {\n        a: a\n      }));\n    };\n\n    _this.updateHue = function (h) {\n      var color = _this.getColor();\n\n      _this.updateColor(_objectSpread(_objectSpread({}, color), {}, {\n        h: h\n      }));\n    };\n\n    _this.updateLightness = function (l) {\n      var color = _this.getColor();\n\n      _this.updateColor(_objectSpread(_objectSpread({}, color), {}, {\n        l: l\n      }));\n    };\n\n    _this.updateSaturation = function (s) {\n      var color = _this.getColor();\n\n      _this.updateColor(_objectSpread(_objectSpread({}, color), {}, {\n        s: s\n      }));\n    };\n\n    _this.state = {\n      prevColor: props.color,\n      initialColor: Colors.getHSL(props.color),\n      color: Colors.getHSL(props.color)\n    };\n    return _this;\n  }\n\n  _createClass(GradientSlider, [{\n    key: \"getColor\",\n    value: function getColor() {\n      var color = this.state.color;\n      var value = this.props.sliderContext.value;\n      return value || color;\n    }\n  }, {\n    key: \"updateColor\",\n    value: function updateColor(color) {\n      if (!_.isEmpty(this.props.sliderContext)) {\n        _.invoke(this.props.sliderContext, 'setValue', color);\n      } else {\n        this.setState({\n          color: color\n        });\n        var hex = Colors.getHexString(color);\n        this.onValueChange(hex, color.a);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          type = _this$props.type,\n          containerStyle = _this$props.containerStyle,\n          disabled = _this$props.disabled,\n          accessible = _this$props.accessible,\n          others = _objectWithoutProperties(_this$props, _excluded);\n\n      var initialColor = this.state.initialColor;\n      var color = this.getColor();\n      var thumbTintColor = Colors.getHexString(color);\n      var step = 0.01;\n      var maximumValue = 1;\n      var value = color.a;\n      var renderTrack = this.renderDefaultGradient;\n      var onValueChange = this.updateAlpha;\n\n      switch (type) {\n        case GradientSliderTypes.HUE:\n          step = 1;\n          maximumValue = 359;\n          value = initialColor.h;\n          renderTrack = this.renderHueGradient;\n          onValueChange = this.updateHue;\n          break;\n\n        case GradientSliderTypes.LIGHTNESS:\n          value = initialColor.l;\n          renderTrack = this.renderLightnessGradient;\n          onValueChange = this.updateLightness;\n          break;\n\n        case GradientSliderTypes.SATURATION:\n          value = initialColor.s;\n          renderTrack = this.renderSaturationGradient;\n          onValueChange = this.updateSaturation;\n          break;\n\n        default:\n          break;\n      }\n\n      return React.createElement(Slider, _extends({}, others, {\n        renderTrack: renderTrack,\n        step: step,\n        maximumValue: maximumValue,\n        value: value,\n        thumbTintColor: thumbTintColor,\n        onValueChange: onValueChange,\n        containerStyle: containerStyle,\n        disabled: disabled,\n        accessible: accessible\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (prevState.prevColor !== nextProps.color) {\n        return {\n          color: Colors.getHSL(nextProps.color),\n          prevColor: Colors.getHSL(nextProps.color)\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return GradientSlider;\n}(Component);\n\nGradientSlider.propTypes = {\n  color: _pt.string,\n  type: _pt.oneOf([\"default\", \"hue\", \"lightness\", \"saturation\"]),\n  gradientSteps: _pt.number,\n  onValueChange: _pt.func,\n  accessible: _pt.bool,\n  disabled: _pt.bool\n};\nGradientSlider.displayName = 'GradientSlider';\nGradientSlider.defaultProps = defaultProps;\nGradientSlider.types = GradientSliderTypes;\nexport default asBaseComponent(asSliderGroupChild(GradientSlider));","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/slider/GradientSlider.js"],"names":["_pt","React","Component","_","tinycolor","HueGradient","LightnessGradient","SaturationGradient","Gradient","Colors","asBaseComponent","Slider","asSliderGroupChild","GradientSliderTypes","defaultProps","type","DEFAULT","gradientSteps","color","blue30","GradientSlider","props","getStepColor","i","getColor","a","toHslString","renderDefaultGradient","renderHueGradient","renderLightnessGradient","renderSaturationGradient","onValueChange","value","alpha","invoke","updateAlpha","updateColor","updateHue","h","updateLightness","l","updateSaturation","s","state","prevColor","initialColor","getHSL","sliderContext","isEmpty","setState","hex","getHexString","containerStyle","disabled","accessible","others","thumbTintColor","step","maximumValue","renderTrack","HUE","LIGHTNESS","SATURATION","nextProps","prevState","propTypes","string","oneOf","number","func","bool","displayName","types"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport tinycolor from 'tinycolor2';\nimport { HueGradient, LightnessGradient, SaturationGradient, Gradient } from 'react-native-color';\nimport { Colors } from \"../../style\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport Slider from \"./index\";\nimport asSliderGroupChild from \"./context/asSliderGroupChild\";\nexport let GradientSliderTypes;\n\n(function (GradientSliderTypes) {\n  GradientSliderTypes[\"DEFAULT\"] = \"default\";\n  GradientSliderTypes[\"HUE\"] = \"hue\";\n  GradientSliderTypes[\"LIGHTNESS\"] = \"lightness\";\n  GradientSliderTypes[\"SATURATION\"] = \"saturation\";\n})(GradientSliderTypes || (GradientSliderTypes = {}));\n\nconst defaultProps = {\n  type: GradientSliderTypes.DEFAULT,\n  gradientSteps: 120,\n  color: Colors.blue30\n};\n/**\n * @description: A Gradient Slider component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SliderScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/GradientSlider/GradientSlider.gif?raw=true\n */\n\nclass GradientSlider extends Component {\n  static propTypes = {\n    /**\n         * The gradient color\n         */\n    color: _pt.string,\n\n    /**\n         * The gradient type (default, hue, lightness, saturation)\n         */\n    type: _pt.oneOf([\"default\", \"hue\", \"lightness\", \"saturation\"]),\n\n    /**\n         * The gradient steps\n         */\n    gradientSteps: _pt.number,\n\n    /**\n         * Callback for onValueChange, returns the updated color\n         */\n    onValueChange: _pt.func,\n\n    /**\n         * If true the component will have accessibility features enabled\n         */\n    accessible: _pt.bool,\n\n    /**\n         * If true the Slider will be disabled and will appear in disabled color\n         */\n    disabled: _pt.bool\n  };\n  static displayName = 'GradientSlider';\n  static defaultProps = defaultProps;\n  static types = GradientSliderTypes;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      prevColor: props.color,\n      initialColor: Colors.getHSL(props.color),\n      color: Colors.getHSL(props.color)\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.prevColor !== nextProps.color) {\n      return {\n        color: Colors.getHSL(nextProps.color),\n        prevColor: Colors.getHSL(nextProps.color)\n      };\n    }\n\n    return null;\n  }\n\n  getColor() {\n    const {\n      color\n    } = this.state;\n    const {\n      value\n    } = this.props.sliderContext;\n    return value || color;\n  }\n\n  getStepColor = i => {\n    const color = this.getColor();\n    return tinycolor({ ...color,\n      a: i\n    }).toHslString();\n  };\n  renderDefaultGradient = () => {\n    const {\n      gradientSteps\n    } = this.props;\n    return <Gradient gradientSteps={gradientSteps} maximumValue={1} getStepColor={this.getStepColor} />;\n  };\n  renderHueGradient = () => {\n    const {\n      gradientSteps\n    } = this.props;\n    return <HueGradient gradientSteps={gradientSteps} />;\n  };\n  renderLightnessGradient = () => {\n    const color = this.getColor();\n    const {\n      gradientSteps\n    } = this.props;\n    return <LightnessGradient color={color} gradientSteps={gradientSteps} />;\n  };\n  renderSaturationGradient = () => {\n    const color = this.getColor();\n    const {\n      gradientSteps\n    } = this.props;\n    return <SaturationGradient color={color} gradientSteps={gradientSteps} />;\n  };\n  onValueChange = (value, alpha) => {\n    // alpha returns for type.DEFAULT\n    _.invoke(this.props, 'onValueChange', value, alpha);\n  };\n\n  updateColor(color) {\n    if (!_.isEmpty(this.props.sliderContext)) {\n      _.invoke(this.props.sliderContext, 'setValue', color);\n    } else {\n      this.setState({\n        color\n      });\n      const hex = Colors.getHexString(color);\n      this.onValueChange(hex, color.a);\n    }\n  }\n\n  updateAlpha = a => {\n    const color = this.getColor();\n    this.updateColor({ ...color,\n      a\n    });\n  };\n  updateHue = h => {\n    const color = this.getColor();\n    this.updateColor({ ...color,\n      h\n    });\n  };\n  updateLightness = l => {\n    const color = this.getColor();\n    this.updateColor({ ...color,\n      l\n    });\n  };\n  updateSaturation = s => {\n    const color = this.getColor();\n    this.updateColor({ ...color,\n      s\n    });\n  };\n\n  render() {\n    const {\n      type,\n      containerStyle,\n      disabled,\n      accessible,\n      ...others\n    } = this.props;\n    const initialColor = this.state.initialColor;\n    const color = this.getColor();\n    const thumbTintColor = Colors.getHexString(color);\n    let step = 0.01;\n    let maximumValue = 1;\n    let value = color.a;\n    let renderTrack = this.renderDefaultGradient;\n    let onValueChange = this.updateAlpha;\n\n    switch (type) {\n      case GradientSliderTypes.HUE:\n        step = 1;\n        maximumValue = 359;\n        value = initialColor.h;\n        renderTrack = this.renderHueGradient;\n        onValueChange = this.updateHue;\n        break;\n\n      case GradientSliderTypes.LIGHTNESS:\n        value = initialColor.l;\n        renderTrack = this.renderLightnessGradient;\n        onValueChange = this.updateLightness;\n        break;\n\n      case GradientSliderTypes.SATURATION:\n        value = initialColor.s;\n        renderTrack = this.renderSaturationGradient;\n        onValueChange = this.updateSaturation;\n        break;\n\n      default:\n        break;\n    }\n\n    return <Slider {...others} renderTrack={renderTrack} step={step} maximumValue={maximumValue} value={value} thumbTintColor={thumbTintColor} onValueChange={onValueChange} containerStyle={containerStyle} disabled={disabled} accessible={accessible} />;\n  }\n\n}\n\nexport default asBaseComponent(asSliderGroupChild(GradientSlider));"]},"metadata":{},"sourceType":"module"}