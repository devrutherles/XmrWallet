{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"size\", \"spacing\", \"color\", \"inactiveColor\"],\n    _excluded2 = [\"containerStyle\", \"animated\", \"horizontal\", \"animatedScrollOffset\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Constants } from \"../../helpers\";\nimport { Colors } from \"../../style\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport PageControl from \"../pageControl\";\nimport * as presenter from \"./CarouselPresenter\";\nimport { CarouselProps, PageControlPosition } from \"./types\";\nexport { CarouselProps, PageControlPosition };\n\nvar Carousel = function (_Component) {\n  _inherits(Carousel, _Component);\n\n  var _super = _createSuper(Carousel);\n\n  function Carousel(props) {\n    var _this$props4, _this$props4$animated, _this$props5, _this$props5$animated, _props$pageHeight;\n\n    var _this;\n\n    _classCallCheck(this, Carousel);\n\n    _this = _super.call(this, props);\n    _this.carousel = React.createRef();\n\n    _this.onOrientationChanged = function () {\n      var _this$props = _this.props,\n          pageWidth = _this$props.pageWidth,\n          loop = _this$props.loop;\n\n      if (!pageWidth || loop) {\n        _this.orientationChange = true;\n\n        _this.setState({\n          pageWidth: _this.state.containerWidth || Constants.screenWidth\n        });\n      }\n    };\n\n    _this.getContainerMarginHorizontal = function () {\n      var _this$props$container = _this.props.containerMarginHorizontal,\n          containerMarginHorizontal = _this$props$container === void 0 ? 0 : _this$props$container;\n      return containerMarginHorizontal;\n    };\n\n    _this.getContainerPaddingVertical = function () {\n      var _this$props$container2 = _this.props.containerPaddingVertical,\n          containerPaddingVertical = _this$props$container2 === void 0 ? 0 : _this$props$container2;\n      return containerPaddingVertical;\n    };\n\n    _this.updateOffset = function () {\n      var _this$carousel;\n\n      var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var _presenter$calcOffset = presenter.calcOffset(_this.props, _this.state),\n          x = _presenter$calcOffset.x,\n          y = _presenter$calcOffset.y;\n\n      if ((_this$carousel = _this.carousel) != null && _this$carousel.current) {\n        _this.carousel.current.scrollTo({\n          x: x,\n          y: y,\n          animated: animated\n        });\n\n        if (Constants.isAndroid) {\n          _this.onMomentumScrollEnd();\n        }\n      }\n    };\n\n    _this.getSnapToOffsets = function () {\n      var _this$state = _this.state,\n          containerWidth = _this$state.containerWidth,\n          pageWidth = _this$state.pageWidth;\n\n      if (_this.shouldEnablePagination()) {\n        return undefined;\n      }\n\n      if (containerWidth) {\n        var spacings = pageWidth === containerWidth ? 0 : _this.getItemSpacings(_this.props);\n        var initialBreak = pageWidth - (containerWidth - pageWidth - spacings) / 2;\n\n        var snapToOffsets = _.times(presenter.getChildrenLength(_this.props), function (index) {\n          return initialBreak + index * pageWidth + _this.getContainerMarginHorizontal();\n        });\n\n        return snapToOffsets;\n      }\n    };\n\n    _this.onContainerLayout = function (_ref) {\n      var _ref$nativeEvent$layo = _ref.nativeEvent.layout,\n          containerWidth = _ref$nativeEvent$layo.width,\n          containerHeight = _ref$nativeEvent$layo.height;\n      var _this$props2 = _this.props,\n          _this$props2$pageWidt = _this$props2.pageWidth,\n          pageWidth = _this$props2$pageWidt === void 0 ? containerWidth : _this$props2$pageWidt,\n          _this$props2$pageHeig = _this$props2.pageHeight,\n          pageHeight = _this$props2$pageHeig === void 0 ? containerHeight : _this$props2$pageHeig;\n      var initialOffset = presenter.calcOffset(_this.props, {\n        currentPage: _this.state.currentPage,\n        pageWidth: pageWidth,\n        pageHeight: pageHeight\n      });\n\n      _this.setState({\n        containerWidth: containerWidth,\n        pageWidth: pageWidth,\n        pageHeight: pageHeight,\n        initialOffset: initialOffset\n      });\n    };\n\n    _this.onContentSizeChange = function () {\n      if (Constants.isAndroid) {\n        _this.updateOffset();\n      }\n    };\n\n    _this.onMomentumScrollEnd = function () {\n      var _this$state2 = _this.state,\n          currentStandingPage = _this$state2.currentStandingPage,\n          currentPage = _this$state2.currentPage;\n\n      var index = _this.getCalcIndex(currentPage);\n\n      var pagesCount = presenter.getChildrenLength(_this.props);\n\n      if (index < pagesCount) {\n        _this.setState({\n          currentStandingPage: index\n        });\n\n        if (currentStandingPage !== index) {\n          _this.props.onChangePage == null ? void 0 : _this.props.onChangePage(index, currentStandingPage, {\n            isAutoScrolled: _this.isAutoScrolled\n          });\n          _this.isAutoScrolled = false;\n        }\n      }\n    };\n\n    _this.onScroll = function (event) {\n      if (!_this.skippedInitialScroll) {\n        _this.skippedInitialScroll = true;\n        return;\n      }\n\n      var _this$props3 = _this.props,\n          loop = _this$props3.loop,\n          autoplay = _this$props3.autoplay,\n          horizontal = _this$props3.horizontal;\n      var _this$state3 = _this.state,\n          pageWidth = _this$state3.pageWidth,\n          pageHeight = _this$state3.pageHeight;\n      var offsetX = event.nativeEvent.contentOffset.x;\n      var offsetY = event.nativeEvent.contentOffset.y;\n      var offset = horizontal ? offsetX : offsetY;\n      var pageSize = horizontal ? pageWidth : pageHeight;\n\n      if (offset >= 0) {\n        if (!_this.orientationChange) {\n          var newPage = presenter.calcPageIndex(offset, _this.props, pageSize);\n\n          _this.setState({\n            currentPage: newPage\n          });\n        }\n\n        _this.orientationChange = false;\n      }\n\n      if (loop && presenter.isOutOfBounds(offsetX, _this.props, pageWidth)) {\n        _this.updateOffset();\n      }\n\n      if (autoplay) {\n        _this.resetAutoPlay();\n      }\n\n      _this.props.onScroll == null ? void 0 : _this.props.onScroll(event);\n    };\n\n    _this.onScrollEvent = Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          y: (_this$props4 = _this.props) == null ? void 0 : (_this$props4$animated = _this$props4.animatedScrollOffset) == null ? void 0 : _this$props4$animated.y,\n          x: (_this$props5 = _this.props) == null ? void 0 : (_this$props5$animated = _this$props5.animatedScrollOffset) == null ? void 0 : _this$props5$animated.x\n        }\n      }\n    }], {\n      useNativeDriver: true,\n      listener: _this.onScroll\n    });\n\n    _this.renderChild = function (child, key) {\n      if (child) {\n        var _this$state4 = _this.state,\n            pageWidth = _this$state4.pageWidth,\n            pageHeight = _this$state4.pageHeight;\n        var horizontal = _this.props.horizontal;\n        var paddingLeft = horizontal ? _this.shouldUsePageWidth() ? _this.getItemSpacings(_this.props) : undefined : 0;\n        var index = Number(key);\n        var length = presenter.getChildrenLength(_this.props);\n\n        var containerMarginHorizontal = _this.getContainerMarginHorizontal();\n\n        var marginLeft = index === 0 ? containerMarginHorizontal : 0;\n        var marginRight = index === length - 1 ? containerMarginHorizontal : 0;\n\n        var paddingVertical = _this.getContainerPaddingVertical();\n\n        return React.createElement(View, {\n          style: {\n            width: pageWidth,\n            height: !horizontal ? pageHeight : undefined,\n            paddingLeft: paddingLeft,\n            marginLeft: marginLeft,\n            marginRight: marginRight,\n            paddingVertical: paddingVertical\n          },\n          key: key,\n          collapsable: false\n        }, _this.shouldAllowAccessibilityLayout() && !Number.isNaN(index) && React.createElement(View, {\n          style: styles.hiddenText\n        }, React.createElement(Text, null, \"page \" + (index + 1) + \" out of \" + length)), child);\n      }\n    };\n\n    var defaultPageWidth = props.loop || !props.pageWidth ? Constants.screenWidth : props.pageWidth;\n\n    var _pageHeight = (_props$pageHeight = props.pageHeight) != null ? _props$pageHeight : Constants.screenHeight;\n\n    _this.isAutoScrolled = false;\n    _this.state = {\n      containerWidth: undefined,\n      currentPage: _this.shouldUsePageWidth() ? _this.getCalcIndex(props.initialPage) : props.initialPage,\n      currentStandingPage: props.initialPage || 0,\n      pageWidth: defaultPageWidth,\n      pageHeight: _pageHeight,\n      initialOffset: presenter.calcOffset(props, {\n        currentPage: props.initialPage,\n        pageWidth: defaultPageWidth,\n        pageHeight: _pageHeight\n      }),\n      prevProps: props\n    };\n    return _this;\n  }\n\n  _createClass(Carousel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n\n      if (this.props.autoplay) {\n        this.startAutoPlay();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n\n      if (this.autoplayTimer) {\n        clearInterval(this.autoplayTimer);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var autoplay = this.props.autoplay;\n\n      if (autoplay && !prevProps.autoplay) {\n        this.startAutoPlay();\n      } else if (!autoplay && prevProps.autoplay) {\n        this.stopAutoPlay();\n      }\n    }\n  }, {\n    key: \"getItemSpacings\",\n    value: function getItemSpacings(props) {\n      var _props$itemSpacings = props.itemSpacings,\n          itemSpacings = _props$itemSpacings === void 0 ? 16 : _props$itemSpacings;\n      return itemSpacings;\n    }\n  }, {\n    key: \"startAutoPlay\",\n    value: function startAutoPlay() {\n      var _this2 = this;\n\n      this.autoplayTimer = setInterval(function () {\n        _this2.isAutoScrolled = true;\n\n        _this2.goToNextPage();\n      }, this.props.autoplayInterval);\n    }\n  }, {\n    key: \"stopAutoPlay\",\n    value: function stopAutoPlay() {\n      if (this.autoplayTimer) {\n        clearInterval(this.autoplayTimer);\n      }\n    }\n  }, {\n    key: \"resetAutoPlay\",\n    value: function resetAutoPlay() {\n      this.stopAutoPlay();\n      this.startAutoPlay();\n    }\n  }, {\n    key: \"goToPage\",\n    value: function goToPage(pageIndex) {\n      var _this3 = this;\n\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.setState({\n        currentPage: this.getCalcIndex(pageIndex)\n      }, function () {\n        return _this3.updateOffset(animated);\n      });\n    }\n  }, {\n    key: \"getCalcIndex\",\n    value: function getCalcIndex(index) {\n      if (Constants.isRTL && Constants.isAndroid) {\n        var length = presenter.getChildrenLength(this.props) - 1;\n        return length - index;\n      }\n\n      return index;\n    }\n  }, {\n    key: \"shouldUsePageWidth\",\n    value: function shouldUsePageWidth() {\n      var _this$props6 = this.props,\n          loop = _this$props6.loop,\n          pageWidth = _this$props6.pageWidth;\n      return !loop && pageWidth;\n    }\n  }, {\n    key: \"shouldEnablePagination\",\n    value: function shouldEnablePagination() {\n      var _this$props7 = this.props,\n          pagingEnabled = _this$props7.pagingEnabled,\n          horizontal = _this$props7.horizontal;\n      return horizontal ? pagingEnabled && !this.shouldUsePageWidth() : true;\n    }\n  }, {\n    key: \"shouldAllowAccessibilityLayout\",\n    value: function shouldAllowAccessibilityLayout() {\n      var allowAccessibleLayout = this.props.allowAccessibleLayout;\n      return allowAccessibleLayout && Constants.accessibility.isScreenReaderEnabled;\n    }\n  }, {\n    key: \"goToNextPage\",\n    value: function goToNextPage() {\n      var currentPage = this.state.currentPage;\n      var pagesCount = presenter.getChildrenLength(this.props);\n      var loop = this.props.loop;\n      var nextPageIndex;\n\n      if (loop) {\n        nextPageIndex = currentPage + 1;\n      } else {\n        nextPageIndex = Math.min(pagesCount - 1, currentPage + 1);\n      }\n\n      this.goToPage(nextPageIndex, true);\n\n      if (loop && currentPage === pagesCount) {\n        this.goToPage(0, false);\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this4 = this;\n\n      var _this$props8 = this.props,\n          children = _this$props8.children,\n          loop = _this$props8.loop;\n      var length = presenter.getChildrenLength(this.props);\n      var childrenArray = React.Children.map(children, function (child, index) {\n        return _this4.renderChild(child, \"\" + index);\n      });\n\n      if (loop && childrenArray) {\n        childrenArray.unshift(this.renderChild(children[length - 1], length - 1 + \"-clone\"));\n        childrenArray.push(this.renderChild(children[0], 0 + \"-clone\"));\n      }\n\n      return childrenArray;\n    }\n  }, {\n    key: \"renderPageControl\",\n    value: function renderPageControl() {\n      var _this$props9 = this.props,\n          pageControlPosition = _this$props9.pageControlPosition,\n          _this$props9$pageCont = _this$props9.pageControlProps,\n          pageControlProps = _this$props9$pageCont === void 0 ? {} : _this$props9$pageCont;\n\n      if (pageControlPosition) {\n        var _pageControlProps$siz = pageControlProps.size,\n            size = _pageControlProps$siz === void 0 ? 6 : _pageControlProps$siz,\n            _pageControlProps$spa = pageControlProps.spacing,\n            spacing = _pageControlProps$spa === void 0 ? 8 : _pageControlProps$spa,\n            _pageControlProps$col = pageControlProps.color,\n            color = _pageControlProps$col === void 0 ? Colors.grey20 : _pageControlProps$col,\n            _pageControlProps$ina = pageControlProps.inactiveColor,\n            inactiveColor = _pageControlProps$ina === void 0 ? Colors.grey60 : _pageControlProps$ina,\n            others = _objectWithoutProperties(pageControlProps, _excluded);\n\n        var pagesCount = presenter.getChildrenLength(this.props);\n        var containerStyle = pageControlPosition === PageControlPosition.UNDER ? {\n          marginVertical: 16 - this.getContainerPaddingVertical()\n        } : styles.pageControlContainerStyle;\n        return React.createElement(PageControl, _extends({\n          size: size,\n          spacing: spacing,\n          containerStyle: containerStyle,\n          inactiveColor: inactiveColor,\n          color: color\n        }, others, {\n          numOfPages: pagesCount,\n          currentPage: this.getCalcIndex(this.state.currentPage)\n        }));\n      }\n    }\n  }, {\n    key: \"renderCounter\",\n    value: function renderCounter() {\n      var _this$props10 = this.props,\n          pageWidth = _this$props10.pageWidth,\n          showCounter = _this$props10.showCounter,\n          counterTextStyle = _this$props10.counterTextStyle;\n      var currentStandingPage = this.state.currentStandingPage;\n      var pagesCount = presenter.getChildrenLength(this.props);\n\n      if (showCounter && !pageWidth) {\n        return React.createElement(View, {\n          center: true,\n          style: styles.counter\n        }, React.createElement(Text, {\n          grey80: true,\n          text90: true,\n          style: [{\n            fontWeight: 'bold'\n          }, counterTextStyle]\n        }, currentStandingPage + 1, \"/\", pagesCount));\n      }\n    }\n  }, {\n    key: \"renderAccessibleLayout\",\n    value: function renderAccessibleLayout() {\n      var _this5 = this;\n\n      var _this$props11 = this.props,\n          containerStyle = _this$props11.containerStyle,\n          children = _this$props11.children;\n      return React.createElement(View, {\n        style: containerStyle,\n        onLayout: this.onContainerLayout\n      }, React.createElement(ScrollView, {\n        ref: this.carousel,\n        showsVerticalScrollIndicator: false,\n        pagingEnabled: true,\n        onContentSizeChange: this.onContentSizeChange,\n        onScroll: this.onScroll,\n        onMomentumScrollEnd: this.onMomentumScrollEnd\n      }, React.Children.map(children, function (child, index) {\n        return _this5.renderChild(child, \"\" + index);\n      })));\n    }\n  }, {\n    key: \"renderCarousel\",\n    value: function renderCarousel() {\n      var _this$props12 = this.props,\n          containerStyle = _this$props12.containerStyle,\n          animated = _this$props12.animated,\n          horizontal = _this$props12.horizontal,\n          animatedScrollOffset = _this$props12.animatedScrollOffset,\n          others = _objectWithoutProperties(_this$props12, _excluded2);\n\n      var initialOffset = this.state.initialOffset;\n      var scrollContainerStyle = this.shouldUsePageWidth() ? {\n        paddingRight: this.getItemSpacings(this.props)\n      } : undefined;\n      var snapToOffsets = this.getSnapToOffsets();\n      var marginBottom = Math.max(0, this.getContainerPaddingVertical() - 16);\n      var ScrollContainer = animatedScrollOffset ? Animated.ScrollView : ScrollView;\n      return React.createElement(View, {\n        animated: animated,\n        style: [{\n          marginBottom: marginBottom\n        }, containerStyle],\n        onLayout: this.onContainerLayout\n      }, React.createElement(ScrollContainer, _extends({\n        showsHorizontalScrollIndicator: false,\n        showsVerticalScrollIndicator: false,\n        decelerationRate: \"fast\",\n        scrollEventThrottle: 200\n      }, others, {\n        ref: this.carousel,\n        onScroll: animatedScrollOffset ? this.onScrollEvent : this.onScroll,\n        contentContainerStyle: scrollContainerStyle,\n        horizontal: horizontal,\n        pagingEnabled: this.shouldEnablePagination(),\n        snapToOffsets: snapToOffsets,\n        contentOffset: initialOffset,\n        onContentSizeChange: this.onContentSizeChange,\n        onMomentumScrollEnd: this.onMomentumScrollEnd\n      }), this.renderChildren()), this.renderPageControl(), this.renderCounter());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.shouldAllowAccessibilityLayout() ? this.renderAccessibleLayout() : this.renderCarousel();\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var currentPage = prevState.currentPage,\n          prevProps = prevState.prevProps;\n      var pageWidth = prevProps.pageWidth,\n          pageHeight = prevProps.pageHeight;\n      var nextPageWidth = nextProps.pageWidth,\n          nextPageHeight = nextProps.pageHeight;\n\n      if (!_.isUndefined(nextPageWidth) && pageWidth !== nextPageWidth || !_.isUndefined(nextPageHeight) && pageHeight !== nextPageHeight) {\n        var _pageWidth = nextPageWidth;\n        var _pageHeight2 = nextPageHeight;\n        return {\n          pageWidth: _pageWidth,\n          initialOffset: presenter.calcOffset(prevProps, {\n            currentPage: currentPage,\n            pageWidth: _pageWidth,\n            pageHeight: _pageHeight2\n          }),\n          prevProps: nextProps\n        };\n      }\n\n      if (prevProps.containerMarginHorizontal !== nextProps.containerMarginHorizontal || prevProps.loop !== nextProps.loop) {\n        return {\n          prevProps: nextProps\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Carousel;\n}(Component);\n\nCarousel.displayName = 'Carousel';\nCarousel.defaultProps = {\n  initialPage: 0,\n  pagingEnabled: true,\n  autoplay: false,\n  autoplayInterval: 4000,\n  horizontal: true\n};\nCarousel.pageControlPositions = PageControlPosition;\nexport { Carousel };\nexport default asBaseComponent(Carousel);\nvar styles = StyleSheet.create({\n  counter: {\n    paddingHorizontal: 8,\n    paddingVertical: 3,\n    borderRadius: 20,\n    backgroundColor: Colors.rgba(Colors.black, 0.6),\n    position: 'absolute',\n    top: 12,\n    right: 12\n  },\n  pageControlContainerStyle: {\n    position: 'absolute',\n    bottom: 16,\n    alignSelf: 'center'\n  },\n  hiddenText: {\n    position: 'absolute',\n    width: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/carousel/index.js"],"names":["_","React","Component","Constants","Colors","asBaseComponent","View","Text","PageControl","presenter","CarouselProps","PageControlPosition","Carousel","props","carousel","createRef","onOrientationChanged","pageWidth","loop","orientationChange","setState","state","containerWidth","screenWidth","getContainerMarginHorizontal","containerMarginHorizontal","getContainerPaddingVertical","containerPaddingVertical","updateOffset","animated","calcOffset","x","y","current","scrollTo","isAndroid","onMomentumScrollEnd","getSnapToOffsets","shouldEnablePagination","undefined","spacings","getItemSpacings","initialBreak","snapToOffsets","times","getChildrenLength","index","onContainerLayout","nativeEvent","layout","width","containerHeight","height","pageHeight","initialOffset","currentPage","onContentSizeChange","currentStandingPage","getCalcIndex","pagesCount","onChangePage","isAutoScrolled","onScroll","event","skippedInitialScroll","autoplay","horizontal","offsetX","contentOffset","offsetY","offset","pageSize","newPage","calcPageIndex","isOutOfBounds","resetAutoPlay","onScrollEvent","Animated","animatedScrollOffset","useNativeDriver","listener","renderChild","child","key","paddingLeft","shouldUsePageWidth","Number","length","marginLeft","marginRight","paddingVertical","shouldAllowAccessibilityLayout","isNaN","styles","hiddenText","defaultPageWidth","screenHeight","initialPage","prevProps","dimensionsChangeListener","addDimensionsEventListener","startAutoPlay","removeDimensionsEventListener","autoplayTimer","clearInterval","stopAutoPlay","itemSpacings","setInterval","goToNextPage","autoplayInterval","pageIndex","isRTL","pagingEnabled","allowAccessibleLayout","accessibility","isScreenReaderEnabled","nextPageIndex","Math","min","goToPage","children","childrenArray","Children","map","unshift","push","pageControlPosition","pageControlProps","size","spacing","color","grey20","inactiveColor","grey60","others","containerStyle","UNDER","marginVertical","pageControlContainerStyle","showCounter","counterTextStyle","counter","fontWeight","scrollContainerStyle","paddingRight","marginBottom","max","ScrollContainer","ScrollView","renderChildren","renderPageControl","renderCounter","renderAccessibleLayout","renderCarousel","nextProps","prevState","nextPageWidth","nextPageHeight","isUndefined","displayName","defaultProps","pageControlPositions","StyleSheet","create","paddingHorizontal","borderRadius","backgroundColor","rgba","black","position","top","right","bottom","alignSelf"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,SAAT;AACA,SAASC,MAAT;AACA,SAASC,eAAT;AACA,OAAOC,IAAP;AACA,OAAOC,IAAP;AACA,OAAOC,WAAP;AACA,OAAO,KAAKC,SAAZ;AACA,SAASC,aAAT,EAAwBC,mBAAxB;AACA,SAASD,aAAT,EAAwBC,mBAAxB;;IAUMC,Q;;;;;AAYJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AADiB,UAFnBC,QAEmB,GAFRb,KAAK,CAACc,SAAN,EAEQ;;AAAA,UAwFnBC,oBAxFmB,GAwFI,YAAM;AAC3B,wBAGI,MAAKH,KAHT;AAAA,UACEI,SADF,eACEA,SADF;AAAA,UAEEC,IAFF,eAEEA,IAFF;;AAKA,UAAI,CAACD,SAAD,IAAcC,IAAlB,EAAwB;AACtB,cAAKC,iBAAL,GAAyB,IAAzB;;AAEA,cAAKC,QAAL,CAAc;AACZH,UAAAA,SAAS,EAAE,MAAKI,KAAL,CAAWC,cAAX,IAA6BnB,SAAS,CAACoB;AADtC,SAAd;AAGD;AACF,KArGkB;;AAAA,UA8GnBC,4BA9GmB,GA8GY,YAAM;AACnC,kCAEI,MAAKX,KAFT,CACEY,yBADF;AAAA,UACEA,yBADF,sCAC8B,CAD9B;AAGA,aAAOA,yBAAP;AACD,KAnHkB;;AAAA,UAsHnBC,2BAtHmB,GAsHW,YAAM;AAClC,mCAEI,MAAKb,KAFT,CACEc,wBADF;AAAA,UACEA,wBADF,uCAC6B,CAD7B;AAGA,aAAOA,wBAAP;AACD,KA3HkB;;AAAA,UA4HnBC,YA5HmB,GA4HJ,YAAsB;AAAA;;AAAA,UAArBC,QAAqB,uEAAV,KAAU;;AACnC,kCAGIpB,SAAS,CAACqB,UAAV,CAAqB,MAAKjB,KAA1B,EAAiC,MAAKQ,KAAtC,CAHJ;AAAA,UACEU,CADF,yBACEA,CADF;AAAA,UAEEC,CAFF,yBAEEA,CAFF;;AAKA,4BAAI,MAAKlB,QAAT,aAAI,eAAemB,OAAnB,EAA4B;AAC1B,cAAKnB,QAAL,CAAcmB,OAAd,CAAsBC,QAAtB,CAA+B;AAC7BH,UAAAA,CAAC,EAADA,CAD6B;AAE7BC,UAAAA,CAAC,EAADA,CAF6B;AAG7BH,UAAAA,QAAQ,EAARA;AAH6B,SAA/B;;AAMA,YAAI1B,SAAS,CAACgC,SAAd,EAAyB;AAIvB,gBAAKC,mBAAL;AACD;AACF;AACF,KAhJkB;;AAAA,UAoLnBC,gBApLmB,GAoLA,YAAM;AACvB,wBAGI,MAAKhB,KAHT;AAAA,UACEC,cADF,eACEA,cADF;AAAA,UAEEL,SAFF,eAEEA,SAFF;;AAKA,UAAI,MAAKqB,sBAAL,EAAJ,EAAmC;AACjC,eAAOC,SAAP;AACD;;AAED,UAAIjB,cAAJ,EAAoB;AAClB,YAAMkB,QAAQ,GAAGvB,SAAS,KAAKK,cAAd,GAA+B,CAA/B,GAAmC,MAAKmB,eAAL,CAAqB,MAAK5B,KAA1B,CAApD;AACA,YAAM6B,YAAY,GAAGzB,SAAS,GAAG,CAACK,cAAc,GAAGL,SAAjB,GAA6BuB,QAA9B,IAA0C,CAA3E;;AAEA,YAAMG,aAAa,GAAG3C,CAAC,CAAC4C,KAAF,CAAQnC,SAAS,CAACoC,iBAAV,CAA4B,MAAKhC,KAAjC,CAAR,EAAiD,UAAAiC,KAAK;AAAA,iBAAIJ,YAAY,GAAGI,KAAK,GAAG7B,SAAvB,GAAmC,MAAKO,4BAAL,EAAvC;AAAA,SAAtD,CAAtB;;AAEA,eAAOmB,aAAP;AACD;AACF,KAtMkB;;AAAA,UAwNnBI,iBAxNmB,GAwNC,gBAOd;AAAA,uCANJC,WAMI,CALFC,MAKE;AAAA,UAJO3B,cAIP,yBAJA4B,KAIA;AAAA,UAHQC,eAGR,yBAHAC,MAGA;AACJ,yBAGI,MAAKvC,KAHT;AAAA,+CACEI,SADF;AAAA,UACEA,SADF,sCACcK,cADd;AAAA,+CAEE+B,UAFF;AAAA,UAEEA,UAFF,sCAEeF,eAFf;AAIA,UAAMG,aAAa,GAAG7C,SAAS,CAACqB,UAAV,CAAqB,MAAKjB,KAA1B,EAAiC;AACrD0C,QAAAA,WAAW,EAAE,MAAKlC,KAAL,CAAWkC,WAD6B;AAErDtC,QAAAA,SAAS,EAATA,SAFqD;AAGrDoC,QAAAA,UAAU,EAAVA;AAHqD,OAAjC,CAAtB;;AAKA,YAAKjC,QAAL,CAAc;AACZE,QAAAA,cAAc,EAAdA,cADY;AAEZL,QAAAA,SAAS,EAATA,SAFY;AAGZoC,QAAAA,UAAU,EAAVA,UAHY;AAIZC,QAAAA,aAAa,EAAbA;AAJY,OAAd;AAMD,KA/OkB;;AAAA,UAwPnBE,mBAxPmB,GAwPG,YAAM;AAE1B,UAAIrD,SAAS,CAACgC,SAAd,EAAyB;AACvB,cAAKP,YAAL;AACD;AACF,KA7PkB;;AAAA,UA8PnBQ,mBA9PmB,GA8PG,YAAM;AAE1B,yBAGI,MAAKf,KAHT;AAAA,UACEoC,mBADF,gBACEA,mBADF;AAAA,UAEEF,WAFF,gBAEEA,WAFF;;AAIA,UAAMT,KAAK,GAAG,MAAKY,YAAL,CAAkBH,WAAlB,CAAd;;AACA,UAAMI,UAAU,GAAGlD,SAAS,CAACoC,iBAAV,CAA4B,MAAKhC,KAAjC,CAAnB;;AAEA,UAAIiC,KAAK,GAAGa,UAAZ,EAAwB;AACtB,cAAKvC,QAAL,CAAc;AACZqC,UAAAA,mBAAmB,EAAEX;AADT,SAAd;;AAIA,YAAIW,mBAAmB,KAAKX,KAA5B,EAAmC;AACjC,gBAAKjC,KAAL,CAAW+C,YAAX,0BAAK/C,KAAL,CAAW+C,YAAX,CAA0Bd,KAA1B,EAAiCW,mBAAjC,EAAsD;AACpDI,YAAAA,cAAc,EAAE,MAAKA;AAD+B,WAAtD;AAGA,gBAAKA,cAAL,GAAsB,KAAtB;AACD;AACF;AACF,KAnRkB;;AAAA,UA6SnBC,QA7SmB,GA6SR,UAAAC,KAAK,EAAI;AAClB,UAAI,CAAC,MAAKC,oBAAV,EAAgC;AAC9B,cAAKA,oBAAL,GAA4B,IAA5B;AACA;AACD;;AAED,yBAII,MAAKnD,KAJT;AAAA,UACEK,IADF,gBACEA,IADF;AAAA,UAEE+C,QAFF,gBAEEA,QAFF;AAAA,UAGEC,UAHF,gBAGEA,UAHF;AAKA,yBAGI,MAAK7C,KAHT;AAAA,UACEJ,SADF,gBACEA,SADF;AAAA,UAEEoC,UAFF,gBAEEA,UAFF;AAIA,UAAMc,OAAO,GAAGJ,KAAK,CAACf,WAAN,CAAkBoB,aAAlB,CAAgCrC,CAAhD;AACA,UAAMsC,OAAO,GAAGN,KAAK,CAACf,WAAN,CAAkBoB,aAAlB,CAAgCpC,CAAhD;AACA,UAAMsC,MAAM,GAAGJ,UAAU,GAAGC,OAAH,GAAaE,OAAtC;AACA,UAAME,QAAQ,GAAGL,UAAU,GAAGjD,SAAH,GAAeoC,UAA1C;;AAEA,UAAIiB,MAAM,IAAI,CAAd,EAAiB;AACf,YAAI,CAAC,MAAKnD,iBAAV,EAA6B;AAE3B,cAAMqD,OAAO,GAAG/D,SAAS,CAACgE,aAAV,CAAwBH,MAAxB,EAAgC,MAAKzD,KAArC,EAA4C0D,QAA5C,CAAhB;;AACA,gBAAKnD,QAAL,CAAc;AACZmC,YAAAA,WAAW,EAAEiB;AADD,WAAd;AAGD;;AAED,cAAKrD,iBAAL,GAAyB,KAAzB;AACD;;AAED,UAAID,IAAI,IAAIT,SAAS,CAACiE,aAAV,CAAwBP,OAAxB,EAAiC,MAAKtD,KAAtC,EAA6CI,SAA7C,CAAZ,EAAqE;AACnE,cAAKW,YAAL;AACD;;AAED,UAAIqC,QAAJ,EAAc;AAEZ,cAAKU,aAAL;AACD;;AAED,YAAK9D,KAAL,CAAWiD,QAAX,0BAAKjD,KAAL,CAAWiD,QAAX,CAAsBC,KAAtB;AACD,KAvVkB;;AAAA,UAyVnBa,aAzVmB,GAyVHC,QAAQ,CAACd,KAAT,CAAe,CAAC;AAC9Bf,MAAAA,WAAW,EAAE;AACXoB,QAAAA,aAAa,EAAE;AACbpC,UAAAA,CAAC,kBAAE,MAAKnB,KAAP,8CAAE,aAAYiE,oBAAd,qBAAE,sBAAkC9C,CADxB;AAEbD,UAAAA,CAAC,kBAAE,MAAKlB,KAAP,8CAAE,aAAYiE,oBAAd,qBAAE,sBAAkC/C;AAFxB;AADJ;AADiB,KAAD,CAAf,EAOZ;AACFgD,MAAAA,eAAe,EAAE,IADf;AAEFC,MAAAA,QAAQ,EAAE,MAAKlB;AAFb,KAPY,CAzVG;;AAAA,UAoWnBmB,WApWmB,GAoWL,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC5B,UAAID,KAAJ,EAAW;AACT,2BAGI,MAAK7D,KAHT;AAAA,YACEJ,SADF,gBACEA,SADF;AAAA,YAEEoC,UAFF,gBAEEA,UAFF;AAIA,YACEa,UADF,GAEI,MAAKrD,KAFT,CACEqD,UADF;AAGA,YAAMkB,WAAW,GAAGlB,UAAU,GAAG,MAAKmB,kBAAL,KAA4B,MAAK5C,eAAL,CAAqB,MAAK5B,KAA1B,CAA5B,GAA+D0B,SAAlE,GAA8E,CAA5G;AACA,YAAMO,KAAK,GAAGwC,MAAM,CAACH,GAAD,CAApB;AACA,YAAMI,MAAM,GAAG9E,SAAS,CAACoC,iBAAV,CAA4B,MAAKhC,KAAjC,CAAf;;AACA,YAAMY,yBAAyB,GAAG,MAAKD,4BAAL,EAAlC;;AACA,YAAMgE,UAAU,GAAG1C,KAAK,KAAK,CAAV,GAAcrB,yBAAd,GAA0C,CAA7D;AACA,YAAMgE,WAAW,GAAG3C,KAAK,KAAKyC,MAAM,GAAG,CAAnB,GAAuB9D,yBAAvB,GAAmD,CAAvE;;AACA,YAAMiE,eAAe,GAAG,MAAKhE,2BAAL,EAAxB;;AACA,eAAO,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAClBwB,YAAAA,KAAK,EAAEjC,SADW;AAElBmC,YAAAA,MAAM,EAAE,CAACc,UAAD,GAAcb,UAAd,GAA2Bd,SAFjB;AAGlB6C,YAAAA,WAAW,EAAXA,WAHkB;AAIlBI,YAAAA,UAAU,EAAVA,UAJkB;AAKlBC,YAAAA,WAAW,EAAXA,WALkB;AAMlBC,YAAAA,eAAe,EAAfA;AANkB,WAAb;AAOJ,UAAA,GAAG,EAAEP,GAPD;AAOM,UAAA,WAAW,EAAE;AAPnB,WAQF,MAAKQ,8BAAL,MAAyC,CAACL,MAAM,CAACM,KAAP,CAAa9C,KAAb,CAA1C,IAAiE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE+C,MAAM,CAACC;AAApB,WAC9D,oBAAC,IAAD,mBAAehD,KAAK,GAAG,CAAvB,iBAAmCyC,MAAnC,CAD8D,CAR/D,EAWFL,KAXE,CAAP;AAaD;AACF,KAlYkB;;AAEjB,QAAMa,gBAAgB,GAAGlF,KAAK,CAACK,IAAN,IAAc,CAACL,KAAK,CAACI,SAArB,GAAiCd,SAAS,CAACoB,WAA3C,GAAyDV,KAAK,CAACI,SAAxF;;AACA,QAAMoC,WAAU,wBAAGxC,KAAK,CAACwC,UAAT,gCAAuBlD,SAAS,CAAC6F,YAAjD;;AACA,UAAKnC,cAAL,GAAsB,KAAtB;AACA,UAAKxC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAEiB,SADL;AAGXgB,MAAAA,WAAW,EAAE,MAAK8B,kBAAL,KAA4B,MAAK3B,YAAL,CAAkB7C,KAAK,CAACoF,WAAxB,CAA5B,GAAmEpF,KAAK,CAACoF,WAH3E;AAIXxC,MAAAA,mBAAmB,EAAE5C,KAAK,CAACoF,WAAN,IAAqB,CAJ/B;AAKXhF,MAAAA,SAAS,EAAE8E,gBALA;AAMX1C,MAAAA,UAAU,EAAVA,WANW;AAOXC,MAAAA,aAAa,EAAE7C,SAAS,CAACqB,UAAV,CAAqBjB,KAArB,EAA4B;AAEzC0C,QAAAA,WAAW,EAAE1C,KAAK,CAACoF,WAFsB;AAGzChF,QAAAA,SAAS,EAAE8E,gBAH8B;AAIzC1C,QAAAA,UAAU,EAAVA;AAJyC,OAA5B,CAPJ;AAaX6C,MAAAA,SAAS,EAAErF;AAbA,KAAb;AALiB;AAoBlB;;;;WAwCD,6BAAoB;AAClB,WAAKsF,wBAAL,GAAgChG,SAAS,CAACiG,0BAAV,CAAqC,KAAKpF,oBAA1C,CAAhC;;AAEA,UAAI,KAAKH,KAAL,CAAWoD,QAAf,EAAyB;AACvB,aAAKoC,aAAL;AACD;AACF;;;WAED,gCAAuB;AACrBlG,MAAAA,SAAS,CAACmG,6BAAV,CAAwC,KAAKH,wBAAL,IAAiC,KAAKnF,oBAA9E;;AAEA,UAAI,KAAKuF,aAAT,EAAwB;AACtBC,QAAAA,aAAa,CAAC,KAAKD,aAAN,CAAb;AACD;AACF;;;WAED,4BAAmBL,SAAnB,EAA8B;AAC5B,UACEjC,QADF,GAEI,KAAKpD,KAFT,CACEoD,QADF;;AAIA,UAAIA,QAAQ,IAAI,CAACiC,SAAS,CAACjC,QAA3B,EAAqC;AACnC,aAAKoC,aAAL;AACD,OAFD,MAEO,IAAI,CAACpC,QAAD,IAAaiC,SAAS,CAACjC,QAA3B,EAAqC;AAC1C,aAAKwC,YAAL;AACD;AACF;;;WAiBD,yBAAgB5F,KAAhB,EAAuB;AACrB,gCAEIA,KAFJ,CACE6F,YADF;AAAA,UACEA,YADF,oCACiB,EADjB;AAGA,aAAOA,YAAP;AACD;;;WAsCD,yBAAgB;AAAA;;AACd,WAAKH,aAAL,GAAqBI,WAAW,CAAC,YAAM;AACrC,QAAA,MAAI,CAAC9C,cAAL,GAAsB,IAAtB;;AACA,QAAA,MAAI,CAAC+C,YAAL;AACD,OAH+B,EAG7B,KAAK/F,KAAL,CAAWgG,gBAHkB,CAAhC;AAID;;;WAED,wBAAe;AACb,UAAI,KAAKN,aAAT,EAAwB;AACtBC,QAAAA,aAAa,CAAC,KAAKD,aAAN,CAAb;AACD;AACF;;;WAED,yBAAgB;AACd,WAAKE,YAAL;AACA,WAAKJ,aAAL;AACD;;;WAED,kBAASS,SAAT,EAAqC;AAAA;;AAAA,UAAjBjF,QAAiB,uEAAN,IAAM;AACnC,WAAKT,QAAL,CAAc;AACZmC,QAAAA,WAAW,EAAE,KAAKG,YAAL,CAAkBoD,SAAlB;AADD,OAAd,EAEG;AAAA,eAAM,MAAI,CAAClF,YAAL,CAAkBC,QAAlB,CAAN;AAAA,OAFH;AAGD;;;WAED,sBAAaiB,KAAb,EAAoB;AAElB,UAAI3C,SAAS,CAAC4G,KAAV,IAAmB5G,SAAS,CAACgC,SAAjC,EAA4C;AAC1C,YAAMoD,MAAM,GAAG9E,SAAS,CAACoC,iBAAV,CAA4B,KAAKhC,KAAjC,IAA0C,CAAzD;AACA,eAAO0E,MAAM,GAAGzC,KAAhB;AACD;;AAED,aAAOA,KAAP;AACD;;;WAsBD,8BAAqB;AACnB,yBAGI,KAAKjC,KAHT;AAAA,UACEK,IADF,gBACEA,IADF;AAAA,UAEED,SAFF,gBAEEA,SAFF;AAIA,aAAO,CAACC,IAAD,IAASD,SAAhB;AACD;;;WAED,kCAAyB;AACvB,yBAGI,KAAKJ,KAHT;AAAA,UACEmG,aADF,gBACEA,aADF;AAAA,UAEE9C,UAFF,gBAEEA,UAFF;AAIA,aAAOA,UAAU,GAAG8C,aAAa,IAAI,CAAC,KAAK3B,kBAAL,EAArB,GAAiD,IAAlE;AACD;;;WA2BD,0CAAiC;AAC/B,UACE4B,qBADF,GAEI,KAAKpG,KAFT,CACEoG,qBADF;AAGA,aAAOA,qBAAqB,IAAI9G,SAAS,CAAC+G,aAAV,CAAwBC,qBAAxD;AACD;;;WA+BD,wBAAe;AACb,UACE5D,WADF,GAEI,KAAKlC,KAFT,CACEkC,WADF;AAGA,UAAMI,UAAU,GAAGlD,SAAS,CAACoC,iBAAV,CAA4B,KAAKhC,KAAjC,CAAnB;AACA,UACEK,IADF,GAEI,KAAKL,KAFT,CACEK,IADF;AAGA,UAAIkG,aAAJ;;AAEA,UAAIlG,IAAJ,EAAU;AACRkG,QAAAA,aAAa,GAAG7D,WAAW,GAAG,CAA9B;AACD,OAFD,MAEO;AACL6D,QAAAA,aAAa,GAAGC,IAAI,CAACC,GAAL,CAAS3D,UAAU,GAAG,CAAtB,EAAyBJ,WAAW,GAAG,CAAvC,CAAhB;AACD;;AAED,WAAKgE,QAAL,CAAcH,aAAd,EAA6B,IAA7B;;AAGA,UAAIlG,IAAI,IAAIqC,WAAW,KAAKI,UAA5B,EAAwC;AACtC,aAAK4D,QAAL,CAAc,CAAd,EAAiB,KAAjB;AACD;AACF;;;WAyFD,0BAAiB;AAAA;;AACf,yBAGI,KAAK1G,KAHT;AAAA,UACE2G,QADF,gBACEA,QADF;AAAA,UAEEtG,IAFF,gBAEEA,IAFF;AAIA,UAAMqE,MAAM,GAAG9E,SAAS,CAACoC,iBAAV,CAA4B,KAAKhC,KAAjC,CAAf;AACA,UAAM4G,aAAa,GAAGxH,KAAK,CAACyH,QAAN,CAAeC,GAAf,CAAmBH,QAAnB,EAA6B,UAACtC,KAAD,EAAQpC,KAAR,EAAkB;AACnE,eAAO,MAAI,CAACmC,WAAL,CAAiBC,KAAjB,OAA2BpC,KAA3B,CAAP;AACD,OAFqB,CAAtB;;AAIA,UAAI5B,IAAI,IAAIuG,aAAZ,EAA2B;AAEzBA,QAAAA,aAAa,CAACG,OAAd,CAAsB,KAAK3C,WAAL,CAAiBuC,QAAQ,CAACjC,MAAM,GAAG,CAAV,CAAzB,EAA0CA,MAAM,GAAG,CAAnD,YAAtB;AAEAkC,QAAAA,aAAa,CAACI,IAAd,CAAmB,KAAK5C,WAAL,CAAiBuC,QAAQ,CAAC,CAAD,CAAzB,EAAiC,CAAjC,YAAnB;AACD;;AAED,aAAOC,aAAP;AACD;;;WAED,6BAAoB;AAClB,yBAGI,KAAK5G,KAHT;AAAA,UACEiH,mBADF,gBACEA,mBADF;AAAA,+CAEEC,gBAFF;AAAA,UAEEA,gBAFF,sCAEqB,EAFrB;;AAKA,UAAID,mBAAJ,EAAyB;AACvB,oCAMIC,gBANJ,CACEC,IADF;AAAA,YACEA,IADF,sCACS,CADT;AAAA,oCAMID,gBANJ,CAEEE,OAFF;AAAA,YAEEA,OAFF,sCAEY,CAFZ;AAAA,oCAMIF,gBANJ,CAGEG,KAHF;AAAA,YAGEA,KAHF,sCAGU9H,MAAM,CAAC+H,MAHjB;AAAA,oCAMIJ,gBANJ,CAIEK,aAJF;AAAA,YAIEA,aAJF,sCAIkBhI,MAAM,CAACiI,MAJzB;AAAA,YAKKC,MALL,4BAMIP,gBANJ;;AAOA,YAAMpE,UAAU,GAAGlD,SAAS,CAACoC,iBAAV,CAA4B,KAAKhC,KAAjC,CAAnB;AACA,YAAM0H,cAAc,GAAGT,mBAAmB,KAAKnH,mBAAmB,CAAC6H,KAA5C,GAAoD;AACzEC,UAAAA,cAAc,EAAE,KAAK,KAAK/G,2BAAL;AADoD,SAApD,GAEnBmE,MAAM,CAAC6C,yBAFX;AAGA,eAAO,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAEV,IAAnB;AAAyB,UAAA,OAAO,EAAEC,OAAlC;AAA2C,UAAA,cAAc,EAAEM,cAA3D;AAA2E,UAAA,aAAa,EAAEH,aAA1F;AAAyG,UAAA,KAAK,EAAEF;AAAhH,WAA2HI,MAA3H;AAAmI,UAAA,UAAU,EAAE3E,UAA/I;AAA2J,UAAA,WAAW,EAAE,KAAKD,YAAL,CAAkB,KAAKrC,KAAL,CAAWkC,WAA7B;AAAxK,WAAP;AACD;AACF;;;WAED,yBAAgB;AACd,0BAII,KAAK1C,KAJT;AAAA,UACEI,SADF,iBACEA,SADF;AAAA,UAEE0H,WAFF,iBAEEA,WAFF;AAAA,UAGEC,gBAHF,iBAGEA,gBAHF;AAKA,UACEnF,mBADF,GAEI,KAAKpC,KAFT,CACEoC,mBADF;AAGA,UAAME,UAAU,GAAGlD,SAAS,CAACoC,iBAAV,CAA4B,KAAKhC,KAAjC,CAAnB;;AAEA,UAAI8H,WAAW,IAAI,CAAC1H,SAApB,EAA+B;AAC7B,eAAO,oBAAC,IAAD;AAAM,UAAA,MAAM,MAAZ;AAAa,UAAA,KAAK,EAAE4E,MAAM,CAACgD;AAA3B,WACH,oBAAC,IAAD;AAAM,UAAA,MAAM,MAAZ;AAAa,UAAA,MAAM,MAAnB;AAAoB,UAAA,KAAK,EAAE,CAAC;AAC5BC,YAAAA,UAAU,EAAE;AADgB,WAAD,EAE1BF,gBAF0B;AAA3B,WAGGnF,mBAAmB,GAAG,CAHzB,OAG6BE,UAH7B,CADG,CAAP;AAOD;AACF;;;WAED,kCAAyB;AAAA;;AACvB,0BAGI,KAAK9C,KAHT;AAAA,UACE0H,cADF,iBACEA,cADF;AAAA,UAEEf,QAFF,iBAEEA,QAFF;AAIA,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEe,cAAb;AAA6B,QAAA,QAAQ,EAAE,KAAKxF;AAA5C,SACH,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAE,KAAKjC,QAAtB;AAAgC,QAAA,4BAA4B,EAAE,KAA9D;AAAqE,QAAA,aAAa,MAAlF;AAAmF,QAAA,mBAAmB,EAAE,KAAK0C,mBAA7G;AAAkI,QAAA,QAAQ,EAAE,KAAKM,QAAjJ;AAA2J,QAAA,mBAAmB,EAAE,KAAK1B;AAArL,SACGnC,KAAK,CAACyH,QAAN,CAAeC,GAAf,CAAmBH,QAAnB,EAA6B,UAACtC,KAAD,EAAQpC,KAAR,EAAkB;AAChD,eAAO,MAAI,CAACmC,WAAL,CAAiBC,KAAjB,OAA2BpC,KAA3B,CAAP;AACD,OAFE,CADH,CADG,CAAP;AAOD;;;WAED,0BAAiB;AACf,0BAMI,KAAKjC,KANT;AAAA,UACE0H,cADF,iBACEA,cADF;AAAA,UAEE1G,QAFF,iBAEEA,QAFF;AAAA,UAGEqC,UAHF,iBAGEA,UAHF;AAAA,UAIEY,oBAJF,iBAIEA,oBAJF;AAAA,UAKKwD,MALL;;AAOA,UACEhF,aADF,GAEI,KAAKjC,KAFT,CACEiC,aADF;AAGA,UAAMyF,oBAAoB,GAAG,KAAK1D,kBAAL,KAA4B;AACvD2D,QAAAA,YAAY,EAAE,KAAKvG,eAAL,CAAqB,KAAK5B,KAA1B;AADyC,OAA5B,GAEzB0B,SAFJ;AAGA,UAAMI,aAAa,GAAG,KAAKN,gBAAL,EAAtB;AACA,UAAM4G,YAAY,GAAG5B,IAAI,CAAC6B,GAAL,CAAS,CAAT,EAAY,KAAKxH,2BAAL,KAAqC,EAAjD,CAArB;AACA,UAAMyH,eAAe,GAAGrE,oBAAoB,GAAGD,QAAQ,CAACuE,UAAZ,GAAyBA,UAArE;AACA,aAAO,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEvH,QAAhB;AAA0B,QAAA,KAAK,EAAE,CAAC;AACvCoH,UAAAA,YAAY,EAAZA;AADuC,SAAD,EAErCV,cAFqC,CAAjC;AAEa,QAAA,QAAQ,EAAE,KAAKxF;AAF5B,SAGH,oBAAC,eAAD;AAAiB,QAAA,8BAA8B,EAAE,KAAjD;AAAwD,QAAA,4BAA4B,EAAE,KAAtF;AAA6F,QAAA,gBAAgB,EAAC,MAA9G;AAAqH,QAAA,mBAAmB,EAAE;AAA1I,SAAmJuF,MAAnJ;AAA2J,QAAA,GAAG,EAAE,KAAKxH,QAArK;AAA+K,QAAA,QAAQ,EAAEgE,oBAAoB,GAAG,KAAKF,aAAR,GAAwB,KAAKd,QAA1O;AAAoP,QAAA,qBAAqB,EAAEiF,oBAA3Q;AAAiS,QAAA,UAAU,EAAE7E,UAA7S;AAAyT,QAAA,aAAa,EAAE,KAAK5B,sBAAL,EAAxU;AAAuW,QAAA,aAAa,EAAEK,aAAtX;AAAqY,QAAA,aAAa,EAAEW,aAApZ;AACF,QAAA,mBAAmB,EAAE,KAAKE,mBADxB;AAC6C,QAAA,mBAAmB,EAAE,KAAKpB;AADvE,UAEG,KAAKiH,cAAL,EAFH,CAHG,EAOF,KAAKC,iBAAL,EAPE,EAQF,KAAKC,aAAL,EARE,CAAP;AAUD;;;WAED,kBAAS;AACP,aAAO,KAAK5D,8BAAL,KAAwC,KAAK6D,sBAAL,EAAxC,GAAwE,KAAKC,cAAL,EAA/E;AACD;;;WA3dD,kCAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AACpD,UACEpG,WADF,GAGIoG,SAHJ,CACEpG,WADF;AAAA,UAEE2C,SAFF,GAGIyD,SAHJ,CAEEzD,SAFF;AAIA,UACEjF,SADF,GAGIiF,SAHJ,CACEjF,SADF;AAAA,UAEEoC,UAFF,GAGI6C,SAHJ,CAEE7C,UAFF;AAIA,UACauG,aADb,GAGIF,SAHJ,CACEzI,SADF;AAAA,UAEc4I,cAFd,GAGIH,SAHJ,CAEErG,UAFF;;AAKA,UAAI,CAACrD,CAAC,CAAC8J,WAAF,CAAcF,aAAd,CAAD,IAAiC3I,SAAS,KAAK2I,aAA/C,IAAgE,CAAC5J,CAAC,CAAC8J,WAAF,CAAcD,cAAd,CAAD,IAAkCxG,UAAU,KAAKwG,cAArH,EAAqI;AACnI,YAAM5I,UAAS,GAAG2I,aAAlB;AACA,YAAMvG,YAAU,GAAGwG,cAAnB;AACA,eAAO;AACL5I,UAAAA,SAAS,EAATA,UADK;AAELqC,UAAAA,aAAa,EAAE7C,SAAS,CAACqB,UAAV,CAAqBoE,SAArB,EAAgC;AAC7C3C,YAAAA,WAAW,EAAXA,WAD6C;AAE7CtC,YAAAA,SAAS,EAATA,UAF6C;AAG7CoC,YAAAA,UAAU,EAAVA;AAH6C,WAAhC,CAFV;AAOL6C,UAAAA,SAAS,EAAEwD;AAPN,SAAP;AASD;;AAGD,UAAIxD,SAAS,CAACzE,yBAAV,KAAwCiI,SAAS,CAACjI,yBAAlD,IAA+EyE,SAAS,CAAChF,IAAV,KAAmBwI,SAAS,CAACxI,IAAhH,EAAsH;AACpH,eAAO;AACLgF,UAAAA,SAAS,EAAEwD;AADN,SAAP;AAGD;;AAED,aAAO,IAAP;AACD;;;;EAtEoBxJ,S;;AAAjBU,Q,CACGmJ,W,GAAc,U;AADjBnJ,Q,CAEGoJ,Y,GAAe;AACpB/D,EAAAA,WAAW,EAAE,CADO;AAEpBe,EAAAA,aAAa,EAAE,IAFK;AAGpB/C,EAAAA,QAAQ,EAAE,KAHU;AAIpB4C,EAAAA,gBAAgB,EAAE,IAJE;AAKpB3C,EAAAA,UAAU,EAAE;AALQ,C;AAFlBtD,Q,CASGqJ,oB,GAAuBtJ,mB;AAwfhC,SAASC,QAAT;AAEA,eAAeP,eAAe,CAACO,QAAD,CAA9B;AACA,IAAMiF,MAAM,GAAGqE,UAAU,CAACC,MAAX,CAAkB;AAC/BtB,EAAAA,OAAO,EAAE;AACPuB,IAAAA,iBAAiB,EAAE,CADZ;AAEP1E,IAAAA,eAAe,EAAE,CAFV;AAIP2E,IAAAA,YAAY,EAAE,EAJP;AAKPC,IAAAA,eAAe,EAAElK,MAAM,CAACmK,IAAP,CAAYnK,MAAM,CAACoK,KAAnB,EAA0B,GAA1B,CALV;AAMPC,IAAAA,QAAQ,EAAE,UANH;AAOPC,IAAAA,GAAG,EAAE,EAPE;AAQPC,IAAAA,KAAK,EAAE;AARA,GADsB;AAW/BjC,EAAAA,yBAAyB,EAAE;AACzB+B,IAAAA,QAAQ,EAAE,UADe;AAEzBG,IAAAA,MAAM,EAAE,EAFiB;AAGzBC,IAAAA,SAAS,EAAE;AAHc,GAXI;AAgB/B/E,EAAAA,UAAU,EAAE;AACV2E,IAAAA,QAAQ,EAAE,UADA;AAEVvH,IAAAA,KAAK,EAAE;AAFG;AAhBmB,CAAlB,CAAf","sourcesContent":["import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Animated, ScrollView, StyleSheet } from 'react-native';\nimport { Constants } from \"../../helpers\";\nimport { Colors } from \"../../style\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport PageControl from \"../pageControl\";\nimport * as presenter from \"./CarouselPresenter\";\nimport { CarouselProps, PageControlPosition } from \"./types\";\nexport { CarouselProps, PageControlPosition };\n\n/**\n * @description: Carousel for scrolling pages horizontally\n * @gif: https://user-images.githubusercontent.com/1780255/107120258-40b5bc80-6895-11eb-9596-8065d3a940ff.gif, https://user-images.githubusercontent.com/1780255/107120257-3eebf900-6895-11eb-9800-402e9e0dc692.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CarouselScreen.tsx\n * @extends: ScrollView\n * @extendsLink: https://reactnative.dev/docs/scrollview\n * @notes: This is a screen width Component\n */\nclass Carousel extends Component {\n  static displayName = 'Carousel';\n  static defaultProps = {\n    initialPage: 0,\n    pagingEnabled: true,\n    autoplay: false,\n    autoplayInterval: 4000,\n    horizontal: true\n  };\n  static pageControlPositions = PageControlPosition;\n  carousel = React.createRef();\n\n  constructor(props) {\n    super(props);\n    const defaultPageWidth = props.loop || !props.pageWidth ? Constants.screenWidth : props.pageWidth;\n    const pageHeight = props.pageHeight ?? Constants.screenHeight;\n    this.isAutoScrolled = false;\n    this.state = {\n      containerWidth: undefined,\n      // @ts-ignore (defaultProps)\n      currentPage: this.shouldUsePageWidth() ? this.getCalcIndex(props.initialPage) : props.initialPage,\n      currentStandingPage: props.initialPage || 0,\n      pageWidth: defaultPageWidth,\n      pageHeight,\n      initialOffset: presenter.calcOffset(props, {\n        // @ts-ignore (defaultProps)\n        currentPage: props.initialPage,\n        pageWidth: defaultPageWidth,\n        pageHeight\n      }),\n      prevProps: props\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentPage,\n      prevProps\n    } = prevState;\n    const {\n      pageWidth,\n      pageHeight\n    } = prevProps;\n    const {\n      pageWidth: nextPageWidth,\n      pageHeight: nextPageHeight\n    } = nextProps;\n\n    if (!_.isUndefined(nextPageWidth) && pageWidth !== nextPageWidth || !_.isUndefined(nextPageHeight) && pageHeight !== nextPageHeight) {\n      const pageWidth = nextPageWidth;\n      const pageHeight = nextPageHeight;\n      return {\n        pageWidth,\n        initialOffset: presenter.calcOffset(prevProps, {\n          currentPage,\n          pageWidth,\n          pageHeight\n        }),\n        prevProps: nextProps\n      };\n    } // for presenter.calcOffset() props parameter\n\n\n    if (prevProps.containerMarginHorizontal !== nextProps.containerMarginHorizontal || prevProps.loop !== nextProps.loop) {\n      return {\n        prevProps: nextProps\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n\n    if (this.props.autoplay) {\n      this.startAutoPlay();\n    }\n  }\n\n  componentWillUnmount() {\n    Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n\n    if (this.autoplayTimer) {\n      clearInterval(this.autoplayTimer);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      autoplay\n    } = this.props;\n\n    if (autoplay && !prevProps.autoplay) {\n      this.startAutoPlay();\n    } else if (!autoplay && prevProps.autoplay) {\n      this.stopAutoPlay();\n    }\n  }\n\n  onOrientationChanged = () => {\n    const {\n      pageWidth,\n      loop\n    } = this.props;\n\n    if (!pageWidth || loop) {\n      this.orientationChange = true; // HACK: setting to containerWidth for Android's call when view disappear\n\n      this.setState({\n        pageWidth: this.state.containerWidth || Constants.screenWidth\n      });\n    }\n  };\n\n  getItemSpacings(props) {\n    const {\n      itemSpacings = 16\n    } = props;\n    return itemSpacings;\n  }\n\n  getContainerMarginHorizontal = () => {\n    const {\n      containerMarginHorizontal = 0\n    } = this.props;\n    return containerMarginHorizontal;\n  }; // TODO: RN 61.5 - try to remove this from the children and move to the ScrollView's contentContainerStyle\n  // style={{overflow: 'visible'}} does not work in ScrollView on Android, maybe it will be fixed in the future\n\n  getContainerPaddingVertical = () => {\n    const {\n      containerPaddingVertical = 0\n    } = this.props;\n    return containerPaddingVertical;\n  };\n  updateOffset = (animated = false) => {\n    const {\n      x,\n      y\n    } = presenter.calcOffset(this.props, this.state);\n\n    if (this.carousel?.current) {\n      this.carousel.current.scrollTo({\n        x,\n        y,\n        animated\n      });\n\n      if (Constants.isAndroid) {\n        // this is done to handle onMomentumScrollEnd not being called in Android:\n        // https://github.com/facebook/react-native/issues/11693\n        // https://github.com/facebook/react-native/issues/19246\n        this.onMomentumScrollEnd();\n      }\n    }\n  };\n\n  startAutoPlay() {\n    this.autoplayTimer = setInterval(() => {\n      this.isAutoScrolled = true;\n      this.goToNextPage();\n    }, this.props.autoplayInterval);\n  }\n\n  stopAutoPlay() {\n    if (this.autoplayTimer) {\n      clearInterval(this.autoplayTimer);\n    }\n  }\n\n  resetAutoPlay() {\n    this.stopAutoPlay();\n    this.startAutoPlay();\n  }\n\n  goToPage(pageIndex, animated = true) {\n    this.setState({\n      currentPage: this.getCalcIndex(pageIndex)\n    }, () => this.updateOffset(animated));\n  }\n\n  getCalcIndex(index) {\n    // to handle scrollView index issue in Android's RTL layout\n    if (Constants.isRTL && Constants.isAndroid) {\n      const length = presenter.getChildrenLength(this.props) - 1;\n      return length - index;\n    }\n\n    return index;\n  }\n\n  getSnapToOffsets = () => {\n    const {\n      containerWidth,\n      pageWidth\n    } = this.state;\n\n    if (this.shouldEnablePagination()) {\n      return undefined;\n    }\n\n    if (containerWidth) {\n      const spacings = pageWidth === containerWidth ? 0 : this.getItemSpacings(this.props);\n      const initialBreak = pageWidth - (containerWidth - pageWidth - spacings) / 2;\n\n      const snapToOffsets = _.times(presenter.getChildrenLength(this.props), index => initialBreak + index * pageWidth + this.getContainerMarginHorizontal());\n\n      return snapToOffsets;\n    }\n  };\n\n  shouldUsePageWidth() {\n    const {\n      loop,\n      pageWidth\n    } = this.props;\n    return !loop && pageWidth;\n  }\n\n  shouldEnablePagination() {\n    const {\n      pagingEnabled,\n      horizontal\n    } = this.props;\n    return horizontal ? pagingEnabled && !this.shouldUsePageWidth() : true;\n  }\n\n  onContainerLayout = ({\n    nativeEvent: {\n      layout: {\n        width: containerWidth,\n        height: containerHeight\n      }\n    }\n  }) => {\n    const {\n      pageWidth = containerWidth,\n      pageHeight = containerHeight\n    } = this.props;\n    const initialOffset = presenter.calcOffset(this.props, {\n      currentPage: this.state.currentPage,\n      pageWidth,\n      pageHeight\n    });\n    this.setState({\n      containerWidth,\n      pageWidth,\n      pageHeight,\n      initialOffset\n    });\n  };\n\n  shouldAllowAccessibilityLayout() {\n    const {\n      allowAccessibleLayout\n    } = this.props;\n    return allowAccessibleLayout && Constants.accessibility.isScreenReaderEnabled;\n  }\n\n  onContentSizeChange = () => {\n    // this is to handle initial scroll position (content offset)\n    if (Constants.isAndroid) {\n      this.updateOffset();\n    }\n  };\n  onMomentumScrollEnd = () => {\n    // finished full page scroll\n    const {\n      currentStandingPage,\n      currentPage\n    } = this.state;\n    const index = this.getCalcIndex(currentPage);\n    const pagesCount = presenter.getChildrenLength(this.props);\n\n    if (index < pagesCount) {\n      this.setState({\n        currentStandingPage: index\n      });\n\n      if (currentStandingPage !== index) {\n        this.props.onChangePage?.(index, currentStandingPage, {\n          isAutoScrolled: this.isAutoScrolled\n        });\n        this.isAutoScrolled = false;\n      }\n    }\n  };\n\n  goToNextPage() {\n    const {\n      currentPage\n    } = this.state;\n    const pagesCount = presenter.getChildrenLength(this.props);\n    const {\n      loop\n    } = this.props;\n    let nextPageIndex;\n\n    if (loop) {\n      nextPageIndex = currentPage + 1;\n    } else {\n      nextPageIndex = Math.min(pagesCount - 1, currentPage + 1);\n    }\n\n    this.goToPage(nextPageIndex, true); // in case of a loop, after we advanced right to the cloned first page,\n    // we return silently to the real first page\n\n    if (loop && currentPage === pagesCount) {\n      this.goToPage(0, false);\n    }\n  }\n\n  onScroll = event => {\n    if (!this.skippedInitialScroll) {\n      this.skippedInitialScroll = true;\n      return;\n    }\n\n    const {\n      loop,\n      autoplay,\n      horizontal\n    } = this.props;\n    const {\n      pageWidth,\n      pageHeight\n    } = this.state;\n    const offsetX = event.nativeEvent.contentOffset.x;\n    const offsetY = event.nativeEvent.contentOffset.y;\n    const offset = horizontal ? offsetX : offsetY;\n    const pageSize = horizontal ? pageWidth : pageHeight;\n\n    if (offset >= 0) {\n      if (!this.orientationChange) {\n        // Avoid new calculation on orientation change\n        const newPage = presenter.calcPageIndex(offset, this.props, pageSize);\n        this.setState({\n          currentPage: newPage\n        });\n      }\n\n      this.orientationChange = false;\n    }\n\n    if (loop && presenter.isOutOfBounds(offsetX, this.props, pageWidth)) {\n      this.updateOffset();\n    }\n\n    if (autoplay) {\n      // reset the timer to avoid auto scroll immediately after manual one\n      this.resetAutoPlay();\n    }\n\n    this.props.onScroll?.(event);\n  }; // @ts-ignore\n\n  onScrollEvent = Animated.event([{\n    nativeEvent: {\n      contentOffset: {\n        y: this.props?.animatedScrollOffset?.y,\n        x: this.props?.animatedScrollOffset?.x\n      }\n    }\n  }], {\n    useNativeDriver: true,\n    listener: this.onScroll\n  });\n  renderChild = (child, key) => {\n    if (child) {\n      const {\n        pageWidth,\n        pageHeight\n      } = this.state;\n      const {\n        horizontal\n      } = this.props;\n      const paddingLeft = horizontal ? this.shouldUsePageWidth() ? this.getItemSpacings(this.props) : undefined : 0;\n      const index = Number(key);\n      const length = presenter.getChildrenLength(this.props);\n      const containerMarginHorizontal = this.getContainerMarginHorizontal();\n      const marginLeft = index === 0 ? containerMarginHorizontal : 0;\n      const marginRight = index === length - 1 ? containerMarginHorizontal : 0;\n      const paddingVertical = this.getContainerPaddingVertical();\n      return <View style={{\n        width: pageWidth,\n        height: !horizontal ? pageHeight : undefined,\n        paddingLeft,\n        marginLeft,\n        marginRight,\n        paddingVertical\n      }} key={key} collapsable={false}>\n          {this.shouldAllowAccessibilityLayout() && !Number.isNaN(index) && <View style={styles.hiddenText}>\n              <Text>{`page ${index + 1} out of ${length}`}</Text>\n            </View>}\n          {child}\n        </View>;\n    }\n  };\n\n  renderChildren() {\n    const {\n      children,\n      loop\n    } = this.props;\n    const length = presenter.getChildrenLength(this.props);\n    const childrenArray = React.Children.map(children, (child, index) => {\n      return this.renderChild(child, `${index}`);\n    });\n\n    if (loop && childrenArray) {\n      // @ts-ignore\n      childrenArray.unshift(this.renderChild(children[length - 1], `${length - 1}-clone`)); // @ts-ignore\n\n      childrenArray.push(this.renderChild(children[0], `${0}-clone`));\n    }\n\n    return childrenArray;\n  }\n\n  renderPageControl() {\n    const {\n      pageControlPosition,\n      pageControlProps = {}\n    } = this.props;\n\n    if (pageControlPosition) {\n      const {\n        size = 6,\n        spacing = 8,\n        color = Colors.grey20,\n        inactiveColor = Colors.grey60,\n        ...others\n      } = pageControlProps;\n      const pagesCount = presenter.getChildrenLength(this.props);\n      const containerStyle = pageControlPosition === PageControlPosition.UNDER ? {\n        marginVertical: 16 - this.getContainerPaddingVertical()\n      } : styles.pageControlContainerStyle;\n      return <PageControl size={size} spacing={spacing} containerStyle={containerStyle} inactiveColor={inactiveColor} color={color} {...others} numOfPages={pagesCount} currentPage={this.getCalcIndex(this.state.currentPage)} />;\n    }\n  }\n\n  renderCounter() {\n    const {\n      pageWidth,\n      showCounter,\n      counterTextStyle\n    } = this.props;\n    const {\n      currentStandingPage\n    } = this.state;\n    const pagesCount = presenter.getChildrenLength(this.props);\n\n    if (showCounter && !pageWidth) {\n      return <View center style={styles.counter}>\n          <Text grey80 text90 style={[{\n          fontWeight: 'bold'\n        }, counterTextStyle]}>\n            {currentStandingPage + 1}/{pagesCount}\n          </Text>\n        </View>;\n    }\n  }\n\n  renderAccessibleLayout() {\n    const {\n      containerStyle,\n      children\n    } = this.props;\n    return <View style={containerStyle} onLayout={this.onContainerLayout}>\n        <ScrollView ref={this.carousel} showsVerticalScrollIndicator={false} pagingEnabled onContentSizeChange={this.onContentSizeChange} onScroll={this.onScroll} onMomentumScrollEnd={this.onMomentumScrollEnd}>\n          {React.Children.map(children, (child, index) => {\n          return this.renderChild(child, `${index}`);\n        })}\n        </ScrollView>\n      </View>;\n  }\n\n  renderCarousel() {\n    const {\n      containerStyle,\n      animated,\n      horizontal,\n      animatedScrollOffset,\n      ...others\n    } = this.props;\n    const {\n      initialOffset\n    } = this.state;\n    const scrollContainerStyle = this.shouldUsePageWidth() ? {\n      paddingRight: this.getItemSpacings(this.props)\n    } : undefined;\n    const snapToOffsets = this.getSnapToOffsets();\n    const marginBottom = Math.max(0, this.getContainerPaddingVertical() - 16);\n    const ScrollContainer = animatedScrollOffset ? Animated.ScrollView : ScrollView;\n    return <View animated={animated} style={[{\n      marginBottom\n    }, containerStyle]} onLayout={this.onContainerLayout}>\n        <ScrollContainer showsHorizontalScrollIndicator={false} showsVerticalScrollIndicator={false} decelerationRate=\"fast\" scrollEventThrottle={200} {...others} ref={this.carousel} onScroll={animatedScrollOffset ? this.onScrollEvent : this.onScroll} contentContainerStyle={scrollContainerStyle} horizontal={horizontal} pagingEnabled={this.shouldEnablePagination()} snapToOffsets={snapToOffsets} contentOffset={initialOffset} // iOS only\n      onContentSizeChange={this.onContentSizeChange} onMomentumScrollEnd={this.onMomentumScrollEnd}>\n          {this.renderChildren()}\n        </ScrollContainer>\n        {this.renderPageControl()}\n        {this.renderCounter()}\n      </View>;\n  }\n\n  render() {\n    return this.shouldAllowAccessibilityLayout() ? this.renderAccessibleLayout() : this.renderCarousel();\n  }\n\n}\n\nexport { Carousel }; // For tests\n\nexport default asBaseComponent(Carousel);\nconst styles = StyleSheet.create({\n  counter: {\n    paddingHorizontal: 8,\n    paddingVertical: 3,\n    // height: 24,\n    borderRadius: 20,\n    backgroundColor: Colors.rgba(Colors.black, 0.6),\n    position: 'absolute',\n    top: 12,\n    right: 12\n  },\n  pageControlContainerStyle: {\n    position: 'absolute',\n    bottom: 16,\n    alignSelf: 'center'\n  },\n  hiddenText: {\n    position: 'absolute',\n    width: 1\n  }\n});"]},"metadata":{},"sourceType":"module"}