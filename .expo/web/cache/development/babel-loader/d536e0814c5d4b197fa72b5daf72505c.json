{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport { isUndefined } from 'lodash';\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport { Typography, Spacings } from \"../../style\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Button from \"../button\";\nvar ActionType;\n\n(function (ActionType) {\n  ActionType[\"MINUS\"] = \"minus\";\n  ActionType[\"PLUS\"] = \"plus\";\n})(ActionType || (ActionType = {}));\n\nvar minusOutline = require(\"./assets/minusOutline.png\");\n\nvar minusOutlineSmall = require(\"./assets/minusOutlineSmall.png\");\n\nvar plusOutline = require(\"./assets/plusOutline.png\");\n\nvar plusOutlineSmall = require(\"./assets/plusOutlineSmall.png\");\n\nvar DEFAULT_STEP = 1;\n\nvar Stepper = function (_PureComponent) {\n  _inherits(Stepper, _PureComponent);\n\n  var _super = _createSuper(Stepper);\n\n  function Stepper(props) {\n    var _this;\n\n    _classCallCheck(this, Stepper);\n\n    _this = _super.call(this, props);\n\n    _this.onAccessibilityAction = function (event) {\n      var currentValue = _this.state.currentValue;\n      var _this$props$step = _this.props.step,\n          step = _this$props$step === void 0 ? DEFAULT_STEP : _this$props$step;\n      var eventMsgContext = event.nativeEvent.actionName === 'decrement' ? 'Minimum' : 'Maximum';\n      var stepperLimitMsg = eventMsgContext + \" stepper value, \" + currentValue + \", reached\";\n\n      switch (event.nativeEvent.actionName) {\n        case 'decrement':\n          _this.accessibilityActionHandler(ActionType.MINUS, currentValue - step, stepperLimitMsg);\n\n          break;\n\n        case 'increment':\n          _this.accessibilityActionHandler(ActionType.PLUS, currentValue + step, stepperLimitMsg);\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    var value = props.value,\n        _props$minValue = props.minValue,\n        minValue = _props$minValue === void 0 ? 0 : _props$minValue,\n        _props$maxValue = props.maxValue,\n        maxValue = _props$maxValue === void 0 ? 1 : _props$maxValue,\n        testID = props.testID;\n    var initialValue = 0;\n\n    if (minValue) {\n      initialValue = minValue;\n    }\n\n    if (value !== undefined) {\n      initialValue = value;\n    }\n\n    _this.state = {\n      currentValue: initialValue\n    };\n\n    if (initialValue < minValue) {\n      console.warn(\"Stepper: \" + testID + \"'s minimum value: \" + minValue + \" is greater than current value: \" + initialValue);\n    }\n\n    if (initialValue > maxValue) {\n      console.warn(\"Stepper: \" + testID + \"'s maximum value: \" + maxValue + \" is less than current value: \" + initialValue);\n    }\n\n    if (minValue > maxValue) {\n      console.warn(\"Stepper: \" + testID + \"'s minimum value: \" + minValue + \" is greater than the maximum value: \" + maxValue);\n    }\n\n    return _this;\n  }\n\n  _createClass(Stepper, [{\n    key: \"getAccessibilityProps\",\n    value: function getAccessibilityProps() {\n      var currentValue = this.state.currentValue;\n      var accessibilityLabel = this.props.accessibilityLabel;\n      var labelSuffix = \"value = \" + currentValue;\n      return {\n        accessibilityLabel: accessibilityLabel ? accessibilityLabel + \", \" + labelSuffix : \"Stepper, \" + labelSuffix,\n        accessible: true,\n        accessibilityRole: 'adjustable',\n        accessibilityActions: [{\n          name: 'decrement'\n        }, {\n          name: 'increment'\n        }],\n        onAccessibilityAction: this.onAccessibilityAction\n      };\n    }\n  }, {\n    key: \"accessibilityActionHandler\",\n    value: function accessibilityActionHandler(actionType, newStepperValue, actionLimitMsg) {\n      if (this.allowStepChange(actionType)) {\n        this.handleStepChange(actionType);\n        AccessibilityInfo.announceForAccessibility == null ? void 0 : AccessibilityInfo.announceForAccessibility(newStepperValue.toString());\n      } else {\n        AccessibilityInfo.announceForAccessibility == null ? void 0 : AccessibilityInfo.announceForAccessibility(actionLimitMsg);\n      }\n    }\n  }, {\n    key: \"allowStepChange\",\n    value: function allowStepChange(actionType) {\n      var _this$props = this.props,\n          minValue = _this$props.minValue,\n          maxValue = _this$props.maxValue;\n      var currentValue = this.state.currentValue;\n\n      if (actionType === ActionType.PLUS) {\n        return maxValue === undefined || currentValue < maxValue;\n      }\n\n      if (actionType === ActionType.MINUS) {\n        return minValue === undefined || currentValue > minValue;\n      }\n    }\n  }, {\n    key: \"handleStepChange\",\n    value: function handleStepChange(actionType) {\n      var _this$props$onValueCh, _this$props3;\n\n      var _this$props2 = this.props,\n          testID = _this$props2.testID,\n          _this$props2$step = _this$props2.step,\n          step = _this$props2$step === void 0 ? DEFAULT_STEP : _this$props2$step;\n      var currentValue = this.state.currentValue;\n      var newCurrent = currentValue;\n\n      if (actionType === ActionType.MINUS) {\n        newCurrent = currentValue - step;\n      } else {\n        newCurrent = currentValue + step;\n      }\n\n      this.setState({\n        currentValue: newCurrent\n      });\n      (_this$props$onValueCh = (_this$props3 = this.props).onValueChange) == null ? void 0 : _this$props$onValueCh.call(_this$props3, newCurrent, testID);\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton(actionType) {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          disabled = _this$props4.disabled,\n          small = _this$props4.small,\n          testID = _this$props4.testID;\n      var allowStepChange = this.allowStepChange(actionType);\n      var minusButton = small ? minusOutlineSmall : minusOutline;\n      var plusButton = small ? plusOutlineSmall : plusOutline;\n      return React.createElement(Button, {\n        link: true,\n        throttleTime: 0,\n        iconSource: actionType === ActionType.MINUS ? minusButton : plusButton,\n        disabled: disabled || !allowStepChange,\n        onPress: function onPress() {\n          return _this2.handleStepChange(actionType);\n        },\n        testID: actionType === ActionType.MINUS ? testID + \".minusStep\" : testID + \".plusStep\",\n        useCustomTheme: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          testID = _this$props5.testID,\n          disabled = _this$props5.disabled;\n      var currentValue = this.state.currentValue;\n      return React.createElement(View, _extends({\n        row: true,\n        centerV: true\n      }, this.getAccessibilityProps()), this.renderButton(ActionType.MINUS), React.createElement(Text, {\n        grey50: disabled,\n        style: [Typography.text70M, styles.text],\n        testID: testID + \".currentValue\"\n      }, currentValue), this.renderButton(ActionType.PLUS));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (!isUndefined(nextProps.value) && prevState.currentValue !== nextProps.value) {\n        return {\n          currentValue: nextProps.value\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Stepper;\n}(PureComponent);\n\nStepper.propTypes = {\n  value: _pt.number,\n  minValue: _pt.number,\n  maxValue: _pt.number,\n  step: _pt.number,\n  onValueChange: _pt.func,\n  disabled: _pt.bool,\n  small: _pt.bool,\n  accessibilityLabel: _pt.string,\n  testID: _pt.string\n};\nvar styles = StyleSheet.create({\n  text: {\n    marginHorizontal: Spacings.s5\n  }\n});\nexport default asBaseComponent(Stepper);","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/√Årea de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/stepper/index.js"],"names":["_pt","isUndefined","React","PureComponent","Typography","Spacings","asBaseComponent","View","Text","Button","ActionType","minusOutline","require","minusOutlineSmall","plusOutline","plusOutlineSmall","DEFAULT_STEP","Stepper","props","onAccessibilityAction","event","currentValue","state","step","eventMsgContext","nativeEvent","actionName","stepperLimitMsg","accessibilityActionHandler","MINUS","PLUS","value","minValue","maxValue","testID","initialValue","undefined","console","warn","accessibilityLabel","labelSuffix","accessible","accessibilityRole","accessibilityActions","name","actionType","newStepperValue","actionLimitMsg","allowStepChange","handleStepChange","AccessibilityInfo","announceForAccessibility","toString","newCurrent","setState","onValueChange","disabled","small","minusButton","plusButton","getAccessibilityProps","renderButton","text70M","styles","text","nextProps","prevState","propTypes","number","func","bool","string","StyleSheet","create","marginHorizontal","s5"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport { isUndefined } from 'lodash';\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, AccessibilityInfo } from 'react-native';\nimport { Typography, Spacings } from \"../../style\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Button from \"../button\";\nvar ActionType;\n\n(function (ActionType) {\n  ActionType[\"MINUS\"] = \"minus\";\n  ActionType[\"PLUS\"] = \"plus\";\n})(ActionType || (ActionType = {}));\n\nconst minusOutline = require(\"./assets/minusOutline.png\");\n\nconst minusOutlineSmall = require(\"./assets/minusOutlineSmall.png\");\n\nconst plusOutline = require(\"./assets/plusOutline.png\");\n\nconst plusOutlineSmall = require(\"./assets/plusOutlineSmall.png\");\n\nconst DEFAULT_STEP = 1;\n\n/**\n * @description: A stepper component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/StepperScreen.js\n */\nclass Stepper extends PureComponent {\n  static propTypes = {\n    /**\n       * Initial value of the Stepper.\n       */\n    value: _pt.number,\n\n    /**\n       * Minimum value.\n       */\n    minValue: _pt.number,\n\n    /**\n       * Maximum value.\n       */\n    maxValue: _pt.number,\n\n    /**\n       * The step to increase and decrease by (default is 1)\n       */\n    step: _pt.number,\n\n    /**\n       * On value change callback function\n       */\n    onValueChange: _pt.func,\n\n    /**\n       * disables interaction with the stepper\n       */\n    disabled: _pt.bool,\n\n    /**\n       * Renders a small sized Stepper\n       */\n    small: _pt.bool,\n\n    /**\n       * Component accessibility label\n       */\n    accessibilityLabel: _pt.string,\n\n    /**\n       * Test id for component\n       */\n    testID: _pt.string\n  };\n\n  constructor(props) {\n    super(props);\n    const {\n      value,\n      minValue = 0,\n      maxValue = 1,\n      testID\n    } = props;\n    let initialValue = 0;\n\n    if (minValue) {\n      initialValue = minValue;\n    }\n\n    if (value !== undefined) {\n      initialValue = value;\n    }\n\n    this.state = {\n      currentValue: initialValue\n    };\n\n    if (initialValue < minValue) {\n      console.warn(`Stepper: ${testID}'s minimum value: ${minValue} is greater than current value: ${initialValue}`);\n    }\n\n    if (initialValue > maxValue) {\n      console.warn(`Stepper: ${testID}'s maximum value: ${maxValue} is less than current value: ${initialValue}`);\n    }\n\n    if (minValue > maxValue) {\n      console.warn(`Stepper: ${testID}'s minimum value: ${minValue} is greater than the maximum value: ${maxValue}`);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!isUndefined(nextProps.value) && prevState.currentValue !== nextProps.value) {\n      return {\n        currentValue: nextProps.value\n      };\n    }\n\n    return null;\n  }\n\n  getAccessibilityProps() {\n    const {\n      currentValue\n    } = this.state;\n    const {\n      accessibilityLabel\n    } = this.props;\n    const labelSuffix = `value = ${currentValue}`;\n    return {\n      accessibilityLabel: accessibilityLabel ? `${accessibilityLabel}, ${labelSuffix}` : `Stepper, ${labelSuffix}`,\n      accessible: true,\n      accessibilityRole: 'adjustable',\n      accessibilityActions: [{\n        name: 'decrement'\n      }, {\n        name: 'increment'\n      }],\n      onAccessibilityAction: this.onAccessibilityAction\n    };\n  }\n\n  onAccessibilityAction = event => {\n    const {\n      currentValue\n    } = this.state;\n    const {\n      step = DEFAULT_STEP\n    } = this.props;\n    const eventMsgContext = event.nativeEvent.actionName === 'decrement' ? 'Minimum' : 'Maximum';\n    const stepperLimitMsg = `${eventMsgContext} stepper value, ${currentValue}, reached`;\n\n    switch (event.nativeEvent.actionName) {\n      case 'decrement':\n        this.accessibilityActionHandler(ActionType.MINUS, currentValue - step, stepperLimitMsg);\n        break;\n\n      case 'increment':\n        this.accessibilityActionHandler(ActionType.PLUS, currentValue + step, stepperLimitMsg);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  accessibilityActionHandler(actionType, newStepperValue, actionLimitMsg) {\n    if (this.allowStepChange(actionType)) {\n      this.handleStepChange(actionType);\n      AccessibilityInfo.announceForAccessibility?.(newStepperValue.toString());\n    } else {\n      AccessibilityInfo.announceForAccessibility?.(actionLimitMsg);\n    }\n  }\n\n  allowStepChange(actionType) {\n    const {\n      minValue,\n      maxValue\n    } = this.props;\n    const {\n      currentValue\n    } = this.state;\n\n    if (actionType === ActionType.PLUS) {\n      return maxValue === undefined || currentValue < maxValue;\n    }\n\n    if (actionType === ActionType.MINUS) {\n      return minValue === undefined || currentValue > minValue;\n    }\n  }\n\n  handleStepChange(actionType) {\n    const {\n      testID,\n      step = DEFAULT_STEP\n    } = this.props;\n    const {\n      currentValue\n    } = this.state;\n    let newCurrent = currentValue;\n\n    if (actionType === ActionType.MINUS) {\n      newCurrent = currentValue - step;\n    } else {\n      newCurrent = currentValue + step;\n    }\n\n    this.setState({\n      currentValue: newCurrent\n    });\n    this.props.onValueChange?.(newCurrent, testID);\n  }\n\n  renderButton(actionType) {\n    const {\n      disabled,\n      small,\n      testID\n    } = this.props;\n    const allowStepChange = this.allowStepChange(actionType);\n    const minusButton = small ? minusOutlineSmall : minusOutline;\n    const plusButton = small ? plusOutlineSmall : plusOutline;\n    return <Button link throttleTime={0} iconSource={actionType === ActionType.MINUS ? minusButton : plusButton} disabled={disabled || !allowStepChange} onPress={() => this.handleStepChange(actionType)} testID={actionType === ActionType.MINUS ? `${testID}.minusStep` : `${testID}.plusStep`} useCustomTheme />;\n  }\n\n  render() {\n    const {\n      testID,\n      disabled\n    } = this.props;\n    const {\n      currentValue\n    } = this.state;\n    return <View row centerV {...this.getAccessibilityProps()}>\n        {this.renderButton(ActionType.MINUS)}\n        <Text grey50={disabled} style={[Typography.text70M, styles.text]} testID={`${testID}.currentValue`}>\n          {currentValue}\n        </Text>\n        {this.renderButton(ActionType.PLUS)}\n      </View>;\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    marginHorizontal: Spacings.s5\n  }\n});\nexport default asBaseComponent(Stepper);"]},"metadata":{},"sourceType":"module"}