{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _pt from \"prop-types\";\nimport React, { useMemo, useContext, useState, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Reanimated, { runOnJS, useAnimatedReaction, useAnimatedStyle, interpolate } from 'react-native-reanimated';\nimport _ from 'lodash';\nimport TabBarContext from \"./TabBarContext\";\nimport TabBarItem from \"./TabBarItem\";\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport View from \"../view\";\nimport { Colors, Spacings, Typography } from \"../../style\";\nimport FadedScrollView from \"./FadedScrollView\";\nimport useScrollToItem from \"./useScrollToItem\";\nimport { Constants } from \"../../helpers\";\nimport { useDidUpdate } from \"../../hooks\";\nvar DEFAULT_HEIGHT = 48;\nvar DEFAULT_BACKGROUND_COLOR = Colors.white;\n\nvar DEFAULT_LABEL_STYLE = _objectSpread(_objectSpread({}, Typography.text80M), {}, {\n  letterSpacing: 0\n});\n\nvar DEFAULT_SELECTED_LABEL_STYLE = _objectSpread(_objectSpread({}, Typography.text80M), {}, {\n  letterSpacing: 0\n});\n\nvar TabBar = function TabBar(props) {\n  var propsItems = props.items,\n      height = props.height,\n      enableShadow = props.enableShadow,\n      propsShadowStyle = props.shadowStyle,\n      indicatorStyle = props.indicatorStyle,\n      labelStyle = props.labelStyle,\n      selectedLabelStyle = props.selectedLabelStyle,\n      labelColor = props.labelColor,\n      selectedLabelColor = props.selectedLabelColor,\n      uppercase = props.uppercase,\n      iconColor = props.iconColor,\n      selectedIconColor = props.selectedIconColor,\n      activeBackgroundColor = props.activeBackgroundColor,\n      backgroundColor = props.backgroundColor,\n      propsContainerWidth = props.containerWidth,\n      centerSelected = props.centerSelected,\n      spreadItems = props.spreadItems,\n      _props$indicatorInset = props.indicatorInsets,\n      indicatorInsets = _props$indicatorInset === void 0 ? Spacings.s4 : _props$indicatorInset,\n      containerStyle = props.containerStyle,\n      testID = props.testID;\n  var tabBar = useRef();\n\n  var _useState = useState(Constants.orientation),\n      _useState2 = _slicedToArray(_useState, 2),\n      key = _useState2[0],\n      setKey = _useState2[1];\n\n  var context = useContext(TabBarContext);\n  var contextItems = context.items,\n      currentPage = context.currentPage,\n      targetPage = context.targetPage,\n      initialIndex = context.initialIndex,\n      selectedIndex = context.selectedIndex,\n      contextContainerWidth = context.containerWidth;\n  var containerWidth = useMemo(function () {\n    return propsContainerWidth || contextContainerWidth;\n  }, [propsContainerWidth, contextContainerWidth]);\n  var items = useMemo(function () {\n    return contextItems || propsItems;\n  }, [contextItems, propsItems]);\n  var itemsCount = (items == null ? void 0 : items.length) || 0;\n\n  var _useScrollToItem = useScrollToItem({\n    scrollViewRef: tabBar,\n    itemsCount: itemsCount,\n    selectedIndex: selectedIndex || initialIndex,\n    containerWidth: containerWidth,\n    offsetType: centerSelected ? useScrollToItem.offsetType.CENTER : useScrollToItem.offsetType.DYNAMIC\n  }),\n      onItemLayout = _useScrollToItem.onItemLayout,\n      itemsWidthsAnimated = _useScrollToItem.itemsWidthsAnimated,\n      itemsOffsetsAnimated = _useScrollToItem.itemsOffsetsAnimated,\n      focusIndex = _useScrollToItem.focusIndex,\n      reset = _useScrollToItem.reset,\n      onContentSizeChange = _useScrollToItem.onContentSizeChange,\n      onLayout = _useScrollToItem.onLayout;\n\n  useAnimatedReaction(function () {\n    const _f = function () {\n      return Math.round(currentPage.value);\n    };\n\n    _f._closure = {\n      currentPage\n    };\n    _f.asString = \"function _f(){const{currentPage}=jsThis._closure;{return Math.round(currentPage.value);}}\";\n    _f.__workletHash = 2235578649486;\n    _f.__location = \"C:\\\\Users\\\\ruthe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projetos\\\\xmrwallet\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\TabBar.js (87:22)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), function () {\n    const _f = function (currIndex, prevIndex) {\n      if (prevIndex !== null && currIndex !== prevIndex) {\n        runOnJS(focusIndex)(currIndex);\n      }\n    };\n\n    _f._closure = {\n      runOnJS,\n      focusIndex\n    };\n    _f.asString = \"function _f(currIndex,prevIndex){const{runOnJS,focusIndex}=jsThis._closure;{if(prevIndex!==null&&currIndex!==prevIndex){runOnJS(focusIndex)(currIndex);}}}\";\n    _f.__workletHash = 15694012263272;\n    _f.__location = \"C:\\\\Users\\\\ruthe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projetos\\\\xmrwallet\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\TabBar.js (89:5)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var tabBarItems = useMemo(function () {\n    return _.map(items, function (item, index) {\n      return React.createElement(TabBarItem, _extends({\n        labelColor: labelColor,\n        selectedLabelColor: selectedLabelColor,\n        labelStyle: labelStyle,\n        selectedLabelStyle: selectedLabelStyle,\n        uppercase: uppercase,\n        iconColor: iconColor,\n        selectedIconColor: selectedIconColor,\n        activeBackgroundColor: activeBackgroundColor,\n        key: item.label\n      }, item, context, {\n        index: index,\n        onLayout: onItemLayout\n      }));\n    });\n  }, [items, labelColor, selectedLabelColor, labelStyle, selectedLabelStyle, uppercase, iconColor, selectedIconColor, activeBackgroundColor, centerSelected, onItemLayout]);\n\n  var _indicatorTransitionStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      var value = targetPage.value;\n      var width = interpolate(value, itemsWidthsAnimated.value.map(function (_v, i) {\n        return i;\n      }), itemsWidthsAnimated.value.map(function (v) {\n        return v - 2 * indicatorInsets;\n      }));\n      var left = interpolate(value, itemsOffsetsAnimated.value.map(function (_v, i) {\n        return i;\n      }), itemsOffsetsAnimated.value);\n      return {\n        marginHorizontal: indicatorInsets,\n        width: width,\n        left: left\n      };\n    };\n\n    _f._closure = {\n      targetPage,\n      interpolate,\n      itemsWidthsAnimated,\n      indicatorInsets,\n      itemsOffsetsAnimated\n    };\n    _f.asString = \"function _f(){const{targetPage,interpolate,itemsWidthsAnimated,indicatorInsets,itemsOffsetsAnimated}=jsThis._closure;{var value=targetPage.value;var width=interpolate(value,itemsWidthsAnimated.value.map(function(_v,i){return i;}),itemsWidthsAnimated.value.map(function(v){return v-2*indicatorInsets;}));var left=interpolate(value,itemsOffsetsAnimated.value.map(function(_v,i){return i;}),itemsOffsetsAnimated.value);return{marginHorizontal:indicatorInsets,width:width,left:left};}}\";\n    _f.__workletHash = 9522762854419;\n    _f.__location = \"C:\\\\Users\\\\ruthe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projetos\\\\xmrwallet\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\components\\\\tabController\\\\TabBar.js (100:53)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n\n  var shadowStyle = useMemo(function () {\n    return enableShadow ? propsShadowStyle || styles.containerShadow : undefined;\n  }, [enableShadow, propsShadowStyle]);\n\n  var _containerStyle = useMemo(function () {\n    return [styles.container, shadowStyle, {\n      width: containerWidth\n    }, containerStyle];\n  }, [shadowStyle, containerWidth, containerStyle]);\n\n  var tabBarContainerStyle = useMemo(function () {\n    return [styles.tabBar, spreadItems && styles.spreadItems, !_.isUndefined(height) && {\n      height: height\n    }, {\n      backgroundColor: backgroundColor\n    }];\n  }, [height, backgroundColor]);\n  var scrollViewContainerStyle = useMemo(function () {\n    return {\n      minWidth: containerWidth\n    };\n  }, [containerWidth]);\n  useDidUpdate(function () {\n    var _tabBar$current;\n\n    if ((_tabBar$current = tabBar.current) != null && _tabBar$current.isScrollEnabled()) {\n      focusIndex(currentPage.value);\n    } else {\n      reset();\n      setKey(Constants.orientation);\n    }\n  }, [containerWidth]);\n  return React.createElement(View, {\n    style: _containerStyle,\n    key: key\n  }, React.createElement(FadedScrollView, {\n    ref: tabBar,\n    horizontal: true,\n    contentContainerStyle: scrollViewContainerStyle,\n    testID: testID,\n    onContentSizeChange: onContentSizeChange,\n    onLayout: onLayout\n  }, React.createElement(View, {\n    style: tabBarContainerStyle\n  }, tabBarItems), itemsCount > 1 && React.createElement(Reanimated.View, {\n    style: [styles.selectedIndicator, indicatorStyle, _indicatorTransitionStyle]\n  })));\n};\n\nTabBar.propTypes = {\n  items: _pt.array,\n  height: _pt.number,\n  enableShadow: _pt.bool,\n  labelColor: _pt.string,\n  selectedLabelColor: _pt.string,\n  uppercase: _pt.bool,\n  iconColor: _pt.string,\n  selectedIconColor: _pt.string,\n  activeBackgroundColor: _pt.string,\n  backgroundColor: _pt.string,\n  containerWidth: _pt.number,\n  centerSelected: _pt.bool,\n  spreadItems: _pt.bool,\n  indicatorInsets: _pt.number,\n  testID: _pt.string,\n  children: _pt.oneOfType([_pt.arrayOf(_pt.element), _pt.element])\n};\nTabBar.displayName = 'TabController.TabBar';\nTabBar.defaultProps = {\n  labelStyle: DEFAULT_LABEL_STYLE,\n  selectedLabelStyle: DEFAULT_SELECTED_LABEL_STYLE,\n  backgroundColor: DEFAULT_BACKGROUND_COLOR,\n  spreadItems: true\n};\nvar styles = StyleSheet.create({\n  container: {\n    zIndex: 100\n  },\n  tabBar: {\n    height: DEFAULT_HEIGHT,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  selectedIndicator: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: 70,\n    height: 2,\n    backgroundColor: Colors.primary\n  },\n  containerShadow: _objectSpread({}, Platform.select({\n    ios: {\n      shadowColor: Colors.grey10,\n      shadowOpacity: 0.05,\n      shadowRadius: 2,\n      shadowOffset: {\n        height: 6,\n        width: 0\n      }\n    },\n    android: {\n      elevation: 5,\n      backgroundColor: Colors.white\n    }\n  })),\n  spreadItems: {\n    flex: 1\n  }\n});\nexport default asBaseComponent(forwardRef(TabBar));","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/tabController/TabBar.js"],"names":["_pt","React","useMemo","useContext","useState","useRef","Reanimated","runOnJS","useAnimatedReaction","useAnimatedStyle","interpolate","_","TabBarContext","TabBarItem","asBaseComponent","forwardRef","View","Colors","Spacings","Typography","FadedScrollView","useScrollToItem","Constants","useDidUpdate","DEFAULT_HEIGHT","DEFAULT_BACKGROUND_COLOR","white","DEFAULT_LABEL_STYLE","text80M","letterSpacing","DEFAULT_SELECTED_LABEL_STYLE","TabBar","props","propsItems","items","height","enableShadow","propsShadowStyle","shadowStyle","indicatorStyle","labelStyle","selectedLabelStyle","labelColor","selectedLabelColor","uppercase","iconColor","selectedIconColor","activeBackgroundColor","backgroundColor","propsContainerWidth","containerWidth","centerSelected","spreadItems","indicatorInsets","s4","containerStyle","testID","tabBar","orientation","key","setKey","context","contextItems","currentPage","targetPage","initialIndex","selectedIndex","contextContainerWidth","itemsCount","length","scrollViewRef","offsetType","CENTER","DYNAMIC","onItemLayout","itemsWidthsAnimated","itemsOffsetsAnimated","focusIndex","reset","onContentSizeChange","onLayout","Math","round","value","currIndex","prevIndex","tabBarItems","map","item","index","label","_indicatorTransitionStyle","width","_v","i","v","left","marginHorizontal","styles","containerShadow","undefined","_containerStyle","container","tabBarContainerStyle","isUndefined","scrollViewContainerStyle","minWidth","current","isScrollEnabled","selectedIndicator","propTypes","array","number","bool","string","children","oneOfType","arrayOf","element","displayName","defaultProps","StyleSheet","create","zIndex","flexDirection","justifyContent","tab","flex","alignItems","position","bottom","primary","Platform","select","ios","shadowColor","grey10","shadowOpacity","shadowRadius","shadowOffset","android","elevation"],"mappings":";;;;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+CC,MAA/C,QAA6D,OAA7D;;;AAEA,OAAOC,UAAP,IAAqBC,OAArB,EAA8BC,mBAA9B,EAAmDC,gBAAnD,EAAqEC,WAArE,QAAwF,yBAAxF;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;AACA,SAASC,eAAT,EAA0BC,UAA1B;AACA,OAAOC,IAAP;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,UAA3B;AACA,OAAOC,eAAP;AACA,OAAOC,eAAP;AACA,SAASC,SAAT;AACA,SAASC,YAAT;AACA,IAAMC,cAAc,GAAG,EAAvB;AACA,IAAMC,wBAAwB,GAAGR,MAAM,CAACS,KAAxC;;AACA,IAAMC,mBAAmB,mCAAQR,UAAU,CAACS,OAAnB;AACvBC,EAAAA,aAAa,EAAE;AADQ,EAAzB;;AAGA,IAAMC,4BAA4B,mCAAQX,UAAU,CAACS,OAAnB;AAChCC,EAAAA,aAAa,EAAE;AADiB,EAAlC;;AAQA,IAAME,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,MACSC,UADT,GAqBID,KArBJ,CACEE,KADF;AAAA,MAEEC,MAFF,GAqBIH,KArBJ,CAEEG,MAFF;AAAA,MAGEC,YAHF,GAqBIJ,KArBJ,CAGEI,YAHF;AAAA,MAIeC,gBAJf,GAqBIL,KArBJ,CAIEM,WAJF;AAAA,MAKEC,cALF,GAqBIP,KArBJ,CAKEO,cALF;AAAA,MAMEC,UANF,GAqBIR,KArBJ,CAMEQ,UANF;AAAA,MAOEC,kBAPF,GAqBIT,KArBJ,CAOES,kBAPF;AAAA,MAQEC,UARF,GAqBIV,KArBJ,CAQEU,UARF;AAAA,MASEC,kBATF,GAqBIX,KArBJ,CASEW,kBATF;AAAA,MAUEC,SAVF,GAqBIZ,KArBJ,CAUEY,SAVF;AAAA,MAWEC,SAXF,GAqBIb,KArBJ,CAWEa,SAXF;AAAA,MAYEC,iBAZF,GAqBId,KArBJ,CAYEc,iBAZF;AAAA,MAaEC,qBAbF,GAqBIf,KArBJ,CAaEe,qBAbF;AAAA,MAcEC,eAdF,GAqBIhB,KArBJ,CAcEgB,eAdF;AAAA,MAekBC,mBAflB,GAqBIjB,KArBJ,CAeEkB,cAfF;AAAA,MAgBEC,cAhBF,GAqBInB,KArBJ,CAgBEmB,cAhBF;AAAA,MAiBEC,WAjBF,GAqBIpB,KArBJ,CAiBEoB,WAjBF;AAAA,8BAqBIpB,KArBJ,CAkBEqB,eAlBF;AAAA,MAkBEA,eAlBF,sCAkBoBnC,QAAQ,CAACoC,EAlB7B;AAAA,MAmBEC,cAnBF,GAqBIvB,KArBJ,CAmBEuB,cAnBF;AAAA,MAoBEC,MApBF,GAqBIxB,KArBJ,CAoBEwB,MApBF;AAsBA,MAAMC,MAAM,GAAGpD,MAAM,EAArB;;AACA,kBAAsBD,QAAQ,CAACkB,SAAS,CAACoC,WAAX,CAA9B;AAAA;AAAA,MAAOC,GAAP;AAAA,MAAYC,MAAZ;;AACA,MAAMC,OAAO,GAAG1D,UAAU,CAACS,aAAD,CAA1B;AACA,MACSkD,YADT,GAOID,OAPJ,CACE3B,KADF;AAAA,MAEE6B,WAFF,GAOIF,OAPJ,CAEEE,WAFF;AAAA,MAGEC,UAHF,GAOIH,OAPJ,CAGEG,UAHF;AAAA,MAIEC,YAJF,GAOIJ,OAPJ,CAIEI,YAJF;AAAA,MAKEC,aALF,GAOIL,OAPJ,CAKEK,aALF;AAAA,MAMkBC,qBANlB,GAOIN,OAPJ,CAMEX,cANF;AAQA,MAAMA,cAAc,GAAGhD,OAAO,CAAC,YAAM;AACnC,WAAO+C,mBAAmB,IAAIkB,qBAA9B;AACD,GAF6B,EAE3B,CAAClB,mBAAD,EAAsBkB,qBAAtB,CAF2B,CAA9B;AAGA,MAAMjC,KAAK,GAAGhC,OAAO,CAAC,YAAM;AAC1B,WAAO4D,YAAY,IAAI7B,UAAvB;AACD,GAFoB,EAElB,CAAC6B,YAAD,EAAe7B,UAAf,CAFkB,CAArB;AAGA,MAAMmC,UAAU,GAAG,CAAAlC,KAAK,QAAL,YAAAA,KAAK,CAAEmC,MAAP,KAAiB,CAApC;;AACA,yBAUIhD,eAAe,CAAC;AAElBiD,IAAAA,aAAa,EAAEb,MAFG;AAGlBW,IAAAA,UAAU,EAAVA,UAHkB;AAIlBF,IAAAA,aAAa,EAAEA,aAAa,IAAID,YAJd;AAKlBf,IAAAA,cAAc,EAAdA,cALkB;AAMlBqB,IAAAA,UAAU,EAAEpB,cAAc,GAAG9B,eAAe,CAACkD,UAAhB,CAA2BC,MAA9B,GAAuCnD,eAAe,CAACkD,UAAhB,CAA2BE;AAN1E,GAAD,CAVnB;AAAA,MACEC,YADF,oBACEA,YADF;AAAA,MAEEC,mBAFF,oBAEEA,mBAFF;AAAA,MAGEC,oBAHF,oBAGEA,oBAHF;AAAA,MAMEC,UANF,oBAMEA,UANF;AAAA,MAOEC,KAPF,oBAOEA,KAPF;AAAA,MAQEC,mBARF,oBAQEA,mBARF;AAAA,MASEC,QATF,oBASEA,QATF;;AAkBAxE,EAAAA,mBAAmB;AAAA,2BAAO;AACxB,aAAOyE,IAAI,CAACC,KAAL,CAAWnB,WAAW,CAACoB,KAAvB,CAAP;AACD,KAFkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,yBAEfC,SAFe,EAEJC,SAFI,EAEU;AAC3B,UAAIA,SAAS,KAAK,IAAd,IAAsBD,SAAS,KAAKC,SAAxC,EAAmD;AACjD9E,QAAAA,OAAO,CAACsE,UAAD,CAAP,CAAoBO,SAApB;AACD;AACF,KANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,MAAnB;AAOA,MAAME,WAAW,GAAGpF,OAAO,CAAC,YAAM;AAChC,WAAOS,CAAC,CAAC4E,GAAF,CAAMrD,KAAN,EAAa,UAACsD,IAAD,EAAOC,KAAP,EAAiB;AACnC,aAAO,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE/C,UAAxB;AAAoC,QAAA,kBAAkB,EAAEC,kBAAxD;AAA4E,QAAA,UAAU,EAAEH,UAAxF;AAAoG,QAAA,kBAAkB,EAAEC,kBAAxH;AAA4I,QAAA,SAAS,EAAEG,SAAvJ;AAAkK,QAAA,SAAS,EAAEC,SAA7K;AAAwL,QAAA,iBAAiB,EAAEC,iBAA3M;AAA8N,QAAA,qBAAqB,EAAEC,qBAArP;AAA4Q,QAAA,GAAG,EAAEyC,IAAI,CAACE;AAAtR,SAAiSF,IAAjS,EAA2S3B,OAA3S;AAAoT,QAAA,KAAK,EAAE4B,KAA3T;AAAkU,QAAA,QAAQ,EAAEf;AAA5U,SAAP;AACD,KAFM,CAAP;AAGD,GAJ0B,EAIxB,CAACxC,KAAD,EAAQQ,UAAR,EAAoBC,kBAApB,EAAwCH,UAAxC,EAAoDC,kBAApD,EAAwEG,SAAxE,EAAmFC,SAAnF,EAA8FC,iBAA9F,EAAiHC,qBAAjH,EAAwII,cAAxI,EAAwJuB,YAAxJ,CAJwB,CAA3B;;AAMA,MAAMiB,yBAAyB,GAAGlF,gBAAgB;AAAA,2BAAO;AACvD,UAAM0E,KAAK,GAAGnB,UAAU,CAACmB,KAAzB;AACA,UAAMS,KAAK,GAAGlF,WAAW,CAACyE,KAAD,EAAQR,mBAAmB,CAACQ,KAApB,CAA0BI,GAA1B,CAA8B,UAACM,EAAD,EAAKC,CAAL;AAAA,eAAWA,CAAX;AAAA,OAA9B,CAAR,EAAqDnB,mBAAmB,CAACQ,KAApB,CAA0BI,GAA1B,CAA8B,UAAAQ,CAAC;AAAA,eAAIA,CAAC,GAAG,IAAI1C,eAAZ;AAAA,OAA/B,CAArD,CAAzB;AACA,UAAM2C,IAAI,GAAGtF,WAAW,CAACyE,KAAD,EAAQP,oBAAoB,CAACO,KAArB,CAA2BI,GAA3B,CAA+B,UAACM,EAAD,EAAKC,CAAL;AAAA,eAAWA,CAAX;AAAA,OAA/B,CAAR,EAAsDlB,oBAAoB,CAACO,KAA3E,CAAxB;AACA,aAAO;AACLc,QAAAA,gBAAgB,EAAE5C,eADb;AAELuC,QAAAA,KAAK,EAALA,KAFK;AAGLI,QAAAA,IAAI,EAAJA;AAHK,OAAP;AAKD,KATiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,MAAlD;;AAWA,MAAM1D,WAAW,GAAGpC,OAAO,CAAC,YAAM;AAChC,WAAOkC,YAAY,GAAGC,gBAAgB,IAAI6D,MAAM,CAACC,eAA9B,GAAgDC,SAAnE;AACD,GAF0B,EAExB,CAAChE,YAAD,EAAeC,gBAAf,CAFwB,CAA3B;;AAIA,MAAMgE,eAAe,GAAGnG,OAAO,CAAC,YAAM;AACpC,WAAO,CAACgG,MAAM,CAACI,SAAR,EAAmBhE,WAAnB,EAAgC;AACrCsD,MAAAA,KAAK,EAAE1C;AAD8B,KAAhC,EAEJK,cAFI,CAAP;AAGD,GAJ8B,EAI5B,CAACjB,WAAD,EAAcY,cAAd,EAA8BK,cAA9B,CAJ4B,CAA/B;;AAMA,MAAMgD,oBAAoB,GAAGrG,OAAO,CAAC,YAAM;AACzC,WAAO,CAACgG,MAAM,CAACzC,MAAR,EAAgBL,WAAW,IAAI8C,MAAM,CAAC9C,WAAtC,EAAmD,CAACzC,CAAC,CAAC6F,WAAF,CAAcrE,MAAd,CAAD,IAA0B;AAClFA,MAAAA,MAAM,EAANA;AADkF,KAA7E,EAEJ;AACDa,MAAAA,eAAe,EAAfA;AADC,KAFI,CAAP;AAKD,GANmC,EAMjC,CAACb,MAAD,EAASa,eAAT,CANiC,CAApC;AAOA,MAAMyD,wBAAwB,GAAGvG,OAAO,CAAC,YAAM;AAC7C,WAAO;AACLwG,MAAAA,QAAQ,EAAExD;AADL,KAAP;AAGD,GAJuC,EAIrC,CAACA,cAAD,CAJqC,CAAxC;AAKA3B,EAAAA,YAAY,CAAC,YAAM;AAAA;;AAEjB,2BAAIkC,MAAM,CAACkD,OAAX,aAAI,gBAAgBC,eAAhB,EAAJ,EAAuC;AACrC/B,MAAAA,UAAU,CAACd,WAAW,CAACoB,KAAb,CAAV;AACD,KAFD,MAEO;AACLL,MAAAA,KAAK;AACLlB,MAAAA,MAAM,CAACtC,SAAS,CAACoC,WAAX,CAAN;AACD;AACF,GARW,EAQT,CAACR,cAAD,CARS,CAAZ;AASA,SAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmD,eAAb;AAA8B,IAAA,GAAG,EAAE1C;AAAnC,KACH,oBAAC,eAAD;AACF,IAAA,GAAG,EAAEF,MADH;AACW,IAAA,UAAU,MADrB;AACsB,IAAA,qBAAqB,EAAEgD,wBAD7C;AACuE,IAAA,MAAM,EAAEjD,MAD/E;AACuF,IAAA,mBAAmB,EAAEuB,mBAD5G;AACiI,IAAA,QAAQ,EAAEC;AAD3I,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEuB;AAAb,KAAoCjB,WAApC,CAFF,EAGGlB,UAAU,GAAG,CAAb,IAAkB,oBAAC,UAAD,CAAY,IAAZ;AAAiB,IAAA,KAAK,EAAE,CAAC8B,MAAM,CAACW,iBAAR,EAA2BtE,cAA3B,EAA2CoD,yBAA3C;AAAxB,IAHrB,CADG,CAAP;AAOD,CAzHD;;AA2HA5D,MAAM,CAAC+E,SAAP,GAAmB;AAIjB5E,EAAAA,KAAK,EAAElC,GAAG,CAAC+G,KAJM;AASjB5E,EAAAA,MAAM,EAAEnC,GAAG,CAACgH,MATK;AAcjB5E,EAAAA,YAAY,EAAEpC,GAAG,CAACiH,IAdD;AAmBjBvE,EAAAA,UAAU,EAAE1C,GAAG,CAACkH,MAnBC;AAwBjBvE,EAAAA,kBAAkB,EAAE3C,GAAG,CAACkH,MAxBP;AA6BjBtE,EAAAA,SAAS,EAAE5C,GAAG,CAACiH,IA7BE;AAkCjBpE,EAAAA,SAAS,EAAE7C,GAAG,CAACkH,MAlCE;AAuCjBpE,EAAAA,iBAAiB,EAAE9C,GAAG,CAACkH,MAvCN;AA6CjBnE,EAAAA,qBAAqB,EAAE/C,GAAG,CAACkH,MA7CV;AAkDjBlE,EAAAA,eAAe,EAAEhD,GAAG,CAACkH,MAlDJ;AAuDjBhE,EAAAA,cAAc,EAAElD,GAAG,CAACgH,MAvDH;AA4DjB7D,EAAAA,cAAc,EAAEnD,GAAG,CAACiH,IA5DH;AAiEjB7D,EAAAA,WAAW,EAAEpD,GAAG,CAACiH,IAjEA;AAsEjB5D,EAAAA,eAAe,EAAErD,GAAG,CAACgH,MAtEJ;AA2EjBxD,EAAAA,MAAM,EAAExD,GAAG,CAACkH,MA3EK;AA4EjBC,EAAAA,QAAQ,EAAEnH,GAAG,CAACoH,SAAJ,CAAc,CAACpH,GAAG,CAACqH,OAAJ,CAAYrH,GAAG,CAACsH,OAAhB,CAAD,EAA2BtH,GAAG,CAACsH,OAA/B,CAAd;AA5EO,CAAnB;AA8EAvF,MAAM,CAACwF,WAAP,GAAqB,sBAArB;AACAxF,MAAM,CAACyF,YAAP,GAAsB;AACpBhF,EAAAA,UAAU,EAAEb,mBADQ;AAEpBc,EAAAA,kBAAkB,EAAEX,4BAFA;AAGpBkB,EAAAA,eAAe,EAAEvB,wBAHG;AAIpB2B,EAAAA,WAAW,EAAE;AAJO,CAAtB;AAMA,IAAM8C,MAAM,GAAGuB,UAAU,CAACC,MAAX,CAAkB;AAC/BpB,EAAAA,SAAS,EAAE;AACTqB,IAAAA,MAAM,EAAE;AADC,GADoB;AAI/BlE,EAAAA,MAAM,EAAE;AACNtB,IAAAA,MAAM,EAAEX,cADF;AAENoG,IAAAA,aAAa,EAAE,KAFT;AAGNC,IAAAA,cAAc,EAAE;AAHV,GAJuB;AAS/BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,IAAI,EAAE,CADH;AAEHC,IAAAA,UAAU,EAAE,QAFT;AAGHH,IAAAA,cAAc,EAAE;AAHb,GAT0B;AAc/BhB,EAAAA,iBAAiB,EAAE;AACjBoB,IAAAA,QAAQ,EAAE,UADO;AAEjBC,IAAAA,MAAM,EAAE,CAFS;AAGjBlC,IAAAA,IAAI,EAAE,CAHW;AAIjBJ,IAAAA,KAAK,EAAE,EAJU;AAKjBzD,IAAAA,MAAM,EAAE,CALS;AAMjBa,IAAAA,eAAe,EAAE/B,MAAM,CAACkH;AANP,GAdY;AAsB/BhC,EAAAA,eAAe,oBAAOiC,QAAQ,CAACC,MAAT,CAAgB;AAClCC,IAAAA,GAAG,EAAE;AACHC,MAAAA,WAAW,EAAEtH,MAAM,CAACuH,MADjB;AAEHC,MAAAA,aAAa,EAAE,IAFZ;AAGHC,MAAAA,YAAY,EAAE,CAHX;AAIHC,MAAAA,YAAY,EAAE;AACZxG,QAAAA,MAAM,EAAE,CADI;AAEZyD,QAAAA,KAAK,EAAE;AAFK;AAJX,KAD6B;AAUlCgD,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAE,CADJ;AAEP7F,MAAAA,eAAe,EAAE/B,MAAM,CAACS;AAFjB;AAVyB,GAAhB,CAAP,CAtBgB;AAsC/B0B,EAAAA,WAAW,EAAE;AACX2E,IAAAA,IAAI,EAAE;AADK;AAtCkB,CAAlB,CAAf;AA0CA,eAAejH,eAAe,CAACC,UAAU,CAACgB,MAAD,CAAX,CAA9B","sourcesContent":["import _pt from \"prop-types\";\nimport React, { useMemo, useContext, useState, useRef } from 'react';\nimport { StyleSheet, Platform } from 'react-native';\nimport Reanimated, { runOnJS, useAnimatedReaction, useAnimatedStyle, interpolate } from 'react-native-reanimated';\nimport _ from 'lodash';\nimport TabBarContext from \"./TabBarContext\";\nimport TabBarItem from \"./TabBarItem\";\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport View from \"../view\";\nimport { Colors, Spacings, Typography } from \"../../style\";\nimport FadedScrollView from \"./FadedScrollView\";\nimport useScrollToItem from \"./useScrollToItem\";\nimport { Constants } from \"../../helpers\";\nimport { useDidUpdate } from \"../../hooks\";\nconst DEFAULT_HEIGHT = 48;\nconst DEFAULT_BACKGROUND_COLOR = Colors.white;\nconst DEFAULT_LABEL_STYLE = { ...Typography.text80M,\n  letterSpacing: 0\n};\nconst DEFAULT_SELECTED_LABEL_STYLE = { ...Typography.text80M,\n  letterSpacing: 0\n};\n\n/**\n * @description: TabController's TabBar component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx\n */\nconst TabBar = props => {\n  const {\n    items: propsItems,\n    height,\n    enableShadow,\n    shadowStyle: propsShadowStyle,\n    indicatorStyle,\n    labelStyle,\n    selectedLabelStyle,\n    labelColor,\n    selectedLabelColor,\n    uppercase,\n    iconColor,\n    selectedIconColor,\n    activeBackgroundColor,\n    backgroundColor,\n    containerWidth: propsContainerWidth,\n    centerSelected,\n    spreadItems,\n    indicatorInsets = Spacings.s4,\n    containerStyle,\n    testID\n  } = props;\n  const tabBar = useRef();\n  const [key, setKey] = useState(Constants.orientation);\n  const context = useContext(TabBarContext);\n  const {\n    items: contextItems,\n    currentPage,\n    targetPage,\n    initialIndex,\n    selectedIndex,\n    containerWidth: contextContainerWidth\n  } = context;\n  const containerWidth = useMemo(() => {\n    return propsContainerWidth || contextContainerWidth;\n  }, [propsContainerWidth, contextContainerWidth]);\n  const items = useMemo(() => {\n    return contextItems || propsItems;\n  }, [contextItems, propsItems]);\n  const itemsCount = items?.length || 0;\n  const {\n    onItemLayout,\n    itemsWidthsAnimated,\n    itemsOffsetsAnimated,\n    // itemsWidths,\n    // itemsOffsets,\n    focusIndex,\n    reset,\n    onContentSizeChange,\n    onLayout\n  } = useScrollToItem({\n    // @ts-expect-error TODO: typing bug\n    scrollViewRef: tabBar,\n    itemsCount,\n    selectedIndex: selectedIndex || initialIndex,\n    containerWidth,\n    offsetType: centerSelected ? useScrollToItem.offsetType.CENTER : useScrollToItem.offsetType.DYNAMIC\n  });\n  useAnimatedReaction(() => {\n    return Math.round(currentPage.value);\n  }, (currIndex, prevIndex) => {\n    if (prevIndex !== null && currIndex !== prevIndex) {\n      runOnJS(focusIndex)(currIndex);\n    }\n  });\n  const tabBarItems = useMemo(() => {\n    return _.map(items, (item, index) => {\n      return <TabBarItem labelColor={labelColor} selectedLabelColor={selectedLabelColor} labelStyle={labelStyle} selectedLabelStyle={selectedLabelStyle} uppercase={uppercase} iconColor={iconColor} selectedIconColor={selectedIconColor} activeBackgroundColor={activeBackgroundColor} key={item.label} {...item} {...context} index={index} onLayout={onItemLayout} />;\n    });\n  }, [items, labelColor, selectedLabelColor, labelStyle, selectedLabelStyle, uppercase, iconColor, selectedIconColor, activeBackgroundColor, centerSelected, onItemLayout]);\n\n  const _indicatorTransitionStyle = useAnimatedStyle(() => {\n    const value = targetPage.value;\n    const width = interpolate(value, itemsWidthsAnimated.value.map((_v, i) => i), itemsWidthsAnimated.value.map(v => v - 2 * indicatorInsets));\n    const left = interpolate(value, itemsOffsetsAnimated.value.map((_v, i) => i), itemsOffsetsAnimated.value);\n    return {\n      marginHorizontal: indicatorInsets,\n      width,\n      left\n    };\n  });\n\n  const shadowStyle = useMemo(() => {\n    return enableShadow ? propsShadowStyle || styles.containerShadow : undefined;\n  }, [enableShadow, propsShadowStyle]);\n\n  const _containerStyle = useMemo(() => {\n    return [styles.container, shadowStyle, {\n      width: containerWidth\n    }, containerStyle];\n  }, [shadowStyle, containerWidth, containerStyle]);\n\n  const tabBarContainerStyle = useMemo(() => {\n    return [styles.tabBar, spreadItems && styles.spreadItems, !_.isUndefined(height) && {\n      height\n    }, {\n      backgroundColor\n    }];\n  }, [height, backgroundColor]);\n  const scrollViewContainerStyle = useMemo(() => {\n    return {\n      minWidth: containerWidth\n    };\n  }, [containerWidth]);\n  useDidUpdate(() => {\n    // @ts-expect-error TODO: fix forwardRef Statics\n    if (tabBar.current?.isScrollEnabled()) {\n      focusIndex(currentPage.value);\n    } else {\n      reset();\n      setKey(Constants.orientation);\n    }\n  }, [containerWidth]);\n  return <View style={_containerStyle} key={key}>\n      <FadedScrollView // @ts-expect-error\n    ref={tabBar} horizontal contentContainerStyle={scrollViewContainerStyle} testID={testID} onContentSizeChange={onContentSizeChange} onLayout={onLayout}>\n        <View style={tabBarContainerStyle}>{tabBarItems}</View>\n        {itemsCount > 1 && <Reanimated.View style={[styles.selectedIndicator, indicatorStyle, _indicatorTransitionStyle]} />}\n      </FadedScrollView>\n    </View>;\n};\n\nTabBar.propTypes = {\n  /**\n     * The list of tab bar items\n     */\n  items: _pt.array,\n\n  /**\n     * Tab Bar height\n     */\n  height: _pt.number,\n\n  /**\n     * Show Tab Bar bottom shadow\n     */\n  enableShadow: _pt.bool,\n\n  /**\n     * the default label color\n     */\n  labelColor: _pt.string,\n\n  /**\n     * the selected label color\n     */\n  selectedLabelColor: _pt.string,\n\n  /**\n     * whether to change the text to uppercase\n     */\n  uppercase: _pt.bool,\n\n  /**\n     * icon tint color\n     */\n  iconColor: _pt.string,\n\n  /**\n     * icon selected tint color\n     */\n  selectedIconColor: _pt.string,\n\n  /**\n     * TODO: rename to feedbackColor\n     * Apply background color on press for TouchableOpacity\n     */\n  activeBackgroundColor: _pt.string,\n\n  /**\n     * The TabBar background Color\n     */\n  backgroundColor: _pt.string,\n\n  /**\n     * The TabBar container width\n     */\n  containerWidth: _pt.number,\n\n  /**\n     * Pass to center selected item\n     */\n  centerSelected: _pt.bool,\n\n  /**\n     * Whether the tabBar should be spread (default: true)\n     */\n  spreadItems: _pt.bool,\n\n  /**\n     * The indicator insets (default: Spacings.s4, set to 0 to make it wide as the item)\n     */\n  indicatorInsets: _pt.number,\n\n  /**\n     * Used as a testing identifier\n     */\n  testID: _pt.string,\n  children: _pt.oneOfType([_pt.arrayOf(_pt.element), _pt.element])\n};\nTabBar.displayName = 'TabController.TabBar';\nTabBar.defaultProps = {\n  labelStyle: DEFAULT_LABEL_STYLE,\n  selectedLabelStyle: DEFAULT_SELECTED_LABEL_STYLE,\n  backgroundColor: DEFAULT_BACKGROUND_COLOR,\n  spreadItems: true\n};\nconst styles = StyleSheet.create({\n  container: {\n    zIndex: 100\n  },\n  tabBar: {\n    height: DEFAULT_HEIGHT,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  selectedIndicator: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: 70,\n    height: 2,\n    backgroundColor: Colors.primary\n  },\n  containerShadow: { ...Platform.select({\n      ios: {\n        shadowColor: Colors.grey10,\n        shadowOpacity: 0.05,\n        shadowRadius: 2,\n        shadowOffset: {\n          height: 6,\n          width: 0\n        }\n      },\n      android: {\n        elevation: 5,\n        backgroundColor: Colors.white\n      }\n    })\n  },\n  spreadItems: {\n    flex: 1\n  }\n});\nexport default asBaseComponent(forwardRef(TabBar));"]},"metadata":{},"sourceType":"module"}