{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"style\", \"color\", \"onPress\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Assets from \"../../assets\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Image from \"../image\";\nimport { Colors } from \"../../style\";\nimport { Constants } from \"../../helpers\";\n\nvar transparentImage = require(\"./assets/transparentSwatch/TransparentSwatch.png\");\n\nvar DEFAULT_SIZE = Constants.isTablet ? 44 : 36;\nexport var SWATCH_MARGIN = 12;\nexport var SWATCH_SIZE = DEFAULT_SIZE;\n\nvar ColorSwatch = function (_PureComponent) {\n  _inherits(ColorSwatch, _PureComponent);\n\n  var _super = _createSuper(ColorSwatch);\n\n  function ColorSwatch() {\n    var _this;\n\n    _classCallCheck(this, ColorSwatch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isSelected: new Animated.Value(0),\n      animatedOpacity: new Animated.Value(0.3),\n      animatedScale: new Animated.Value(0.5)\n    };\n    _this.styles = createStyles(_this.props);\n    _this.layout = {\n      x: 0,\n      y: 0\n    };\n\n    _this.onPress = function () {\n      var _this$props = _this.props,\n          _this$props$color = _this$props.color,\n          color = _this$props$color === void 0 ? '' : _this$props$color,\n          value = _this$props.value,\n          index = _this$props.index;\n\n      var tintColor = _this.getTintColor(value);\n\n      _this.props.onPress == null ? void 0 : _this.props.onPress(value || color, {\n        tintColor: tintColor,\n        index: index\n      });\n    };\n\n    _this.onLayout = function (event) {\n      _this.layout = event.nativeEvent.layout;\n    };\n\n    _this.renderSwatch = function () {\n      var animated = _this.props.animated;\n      var _this$state = _this.state,\n          animatedOpacity = _this$state.animatedOpacity,\n          animatedScale = _this$state.animatedScale;\n\n      if (animated) {\n        return React.createElement(Animated.View, {\n          style: {\n            opacity: animatedOpacity,\n            transform: [{\n              scaleX: animatedScale\n            }, {\n              scaleY: animatedScale\n            }]\n          }\n        }, _this.renderContent());\n      }\n\n      return _this.renderContent();\n    };\n\n    return _this;\n  }\n\n  _createClass(ColorSwatch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animateCheckmark(this.props.selected);\n      this.animateSwatch(1);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.selected !== this.props.selected) {\n        this.animateCheckmark(this.props.selected);\n      }\n    }\n  }, {\n    key: \"animateSwatch\",\n    value: function animateSwatch(newValue) {\n      var _this$state2 = this.state,\n          animatedOpacity = _this$state2.animatedOpacity,\n          animatedScale = _this$state2.animatedScale;\n      Animated.parallel([Animated.timing(animatedOpacity, {\n        duration: 250,\n        toValue: newValue,\n        useNativeDriver: true\n      }), Animated.spring(animatedScale, {\n        toValue: newValue,\n        bounciness: 18,\n        speed: 12,\n        delay: 170,\n        useNativeDriver: true\n      })]).start();\n    }\n  }, {\n    key: \"animateCheckmark\",\n    value: function animateCheckmark() {\n      var newValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var isSelected = this.state.isSelected;\n      Animated.timing(isSelected, {\n        duration: 150,\n        easing: Easing.bezier(0.165, 0.84, 0.44, 1.0),\n        toValue: Number(newValue),\n        delay: 50,\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"getTintColor\",\n    value: function getTintColor(color) {\n      if (color) {\n        if (Colors.isTransparent(color)) {\n          return Colors.black;\n        }\n\n        return Colors.isDark(color) ? Colors.white : Colors.black;\n      }\n    }\n  }, {\n    key: \"getAccessibilityInfo\",\n    value: function getAccessibilityInfo() {\n      var color = this.props.color;\n      return {\n        accessibilityLabel: color && Colors.getColorName(color),\n        accessibilityStates: this.props.selected ? ['selected'] : []\n      };\n    }\n  }, {\n    key: \"getLayout\",\n    value: function getLayout() {\n      return this.layout;\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          color = _this$props2.color,\n          onPress = _this$props2.onPress,\n          others = _objectWithoutProperties(_this$props2, _excluded);\n\n      var isSelected = this.state.isSelected;\n      var Container = onPress ? TouchableOpacity : View;\n      var tintColor = this.getTintColor(color);\n      return React.createElement(Container, _extends({}, others, {\n        center: true,\n        activeOpacity: 1,\n        throttleTime: 0,\n        hitSlop: {\n          top: 10,\n          bottom: 10,\n          left: 10,\n          right: 10\n        },\n        onPress: this.onPress,\n        style: [this.styles.container, style],\n        onLayout: this.onLayout\n      }, this.getAccessibilityInfo()), Colors.isTransparent(color) && React.createElement(Image, {\n        source: transparentImage,\n        style: this.styles.transparentImage,\n        resizeMode: 'cover'\n      }), React.createElement(Animated.Image, {\n        source: Assets.icons.check,\n        style: {\n          tintColor: tintColor,\n          opacity: isSelected,\n          transform: [{\n            scaleX: isSelected\n          }, {\n            scaleY: isSelected\n          }]\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.renderSwatch();\n    }\n  }]);\n\n  return ColorSwatch;\n}(PureComponent);\n\nColorSwatch.propTypes = {\n  value: _pt.string,\n  color: _pt.string,\n  selected: _pt.bool,\n  animated: _pt.bool,\n  onPress: _pt.func,\n  index: _pt.number,\n  testID: _pt.string\n};\nColorSwatch.displayName = 'ColorSwatch';\nexport default asBaseComponent(ColorSwatch);\n\nfunction createStyles(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? Colors.grey30 : _ref$color;\n  return StyleSheet.create({\n    container: {\n      backgroundColor: color,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      borderRadius: DEFAULT_SIZE / 2,\n      margin: SWATCH_MARGIN,\n      borderWidth: color === 'transparent' ? undefined : 1,\n      borderColor: Colors.rgba(Colors.grey30, 0.2)\n    },\n    transparentImage: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/√Årea de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/colorPicker/ColorSwatch.js"],"names":["_pt","React","PureComponent","Assets","asBaseComponent","View","TouchableOpacity","Image","Colors","Constants","transparentImage","require","DEFAULT_SIZE","isTablet","SWATCH_MARGIN","SWATCH_SIZE","ColorSwatch","state","isSelected","Animated","Value","animatedOpacity","animatedScale","styles","createStyles","props","layout","x","y","onPress","color","value","index","tintColor","getTintColor","onLayout","event","nativeEvent","renderSwatch","animated","opacity","transform","scaleX","scaleY","renderContent","animateCheckmark","selected","animateSwatch","prevProps","newValue","parallel","timing","duration","toValue","useNativeDriver","spring","bounciness","speed","delay","start","easing","Easing","bezier","Number","isTransparent","black","isDark","white","accessibilityLabel","getColorName","accessibilityStates","style","others","Container","top","bottom","left","right","container","getAccessibilityInfo","icons","check","propTypes","string","bool","func","number","testID","displayName","grey30","StyleSheet","create","backgroundColor","width","height","borderRadius","margin","borderWidth","undefined","borderColor","rgba","absoluteFillObject"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, Animated, Easing } from 'react-native';\nimport Assets from \"../../assets\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Image from \"../image\";\nimport { Colors } from \"../../style\";\nimport { Constants } from \"../../helpers\";\n\nconst transparentImage = require(\"./assets/transparentSwatch/TransparentSwatch.png\");\n\nconst DEFAULT_SIZE = Constants.isTablet ? 44 : 36;\nexport const SWATCH_MARGIN = 12;\nexport const SWATCH_SIZE = DEFAULT_SIZE;\n/**\n * @description: A color swatch component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/ColorPalette/ColorPalette.gif?raw=true\n */\n\nclass ColorSwatch extends PureComponent {\n  static propTypes = {\n    /**\n       * The identifier value of the ColorSwatch in a ColorSwatch palette.\n       * Must be different than other ColorSwatches in the same group\n       */\n    value: _pt.string,\n\n    /**\n       * The color of the ColorSwatch\n       */\n    color: _pt.string,\n\n    /**\n       * Is the initial state is selected\n       */\n    selected: _pt.bool,\n\n    /**\n       * Is first render should be animated\n       */\n    animated: _pt.bool,\n\n    /**\n       * onPress callback\n       */\n    onPress: _pt.func,\n    index: _pt.number,\n    testID: _pt.string\n  };\n  static displayName = 'ColorSwatch';\n  state = {\n    isSelected: new Animated.Value(0),\n    animatedOpacity: new Animated.Value(0.3),\n    animatedScale: new Animated.Value(0.5)\n  };\n  styles = createStyles(this.props);\n  layout = {\n    x: 0,\n    y: 0\n  };\n\n  componentDidMount() {\n    this.animateCheckmark(this.props.selected);\n    this.animateSwatch(1);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selected !== this.props.selected) {\n      this.animateCheckmark(this.props.selected);\n    }\n  }\n\n  animateSwatch(newValue) {\n    const {\n      animatedOpacity,\n      animatedScale\n    } = this.state;\n    Animated.parallel([Animated.timing(animatedOpacity, {\n      duration: 250,\n      toValue: newValue,\n      useNativeDriver: true\n    }), Animated.spring(animatedScale, {\n      toValue: newValue,\n      // easing: Easing.bezier(0, 0, 0.58, 1), // => easeOut\n      bounciness: 18,\n      speed: 12,\n      delay: 170,\n      useNativeDriver: true\n    })]).start();\n  }\n\n  animateCheckmark(newValue = false) {\n    const {\n      isSelected\n    } = this.state;\n    Animated.timing(isSelected, {\n      duration: 150,\n      easing: Easing.bezier(0.165, 0.84, 0.44, 1.0),\n      // => easeOutQuart\n      toValue: Number(newValue),\n      delay: 50,\n      useNativeDriver: true\n    }).start();\n  }\n\n  onPress = () => {\n    const {\n      color = '',\n      value,\n      index\n    } = this.props;\n    const tintColor = this.getTintColor(value);\n    this.props.onPress?.(value || color, {\n      tintColor,\n      index\n    });\n  };\n\n  getTintColor(color) {\n    if (color) {\n      if (Colors.isTransparent(color)) {\n        return Colors.black;\n      }\n\n      return Colors.isDark(color) ? Colors.white : Colors.black;\n    }\n  }\n\n  getAccessibilityInfo() {\n    const {\n      color\n    } = this.props;\n    return {\n      accessibilityLabel: color && Colors.getColorName(color),\n      accessibilityStates: this.props.selected ? ['selected'] : []\n    };\n  }\n\n  getLayout() {\n    return this.layout;\n  }\n\n  onLayout = event => {\n    this.layout = event.nativeEvent.layout;\n  };\n\n  renderContent() {\n    const {\n      style,\n      color,\n      onPress,\n      ...others\n    } = this.props;\n    const {\n      isSelected\n    } = this.state;\n    const Container = onPress ? TouchableOpacity : View;\n    const tintColor = this.getTintColor(color);\n    return <Container {...others} center activeOpacity={1} throttleTime={0} hitSlop={{\n      top: 10,\n      bottom: 10,\n      left: 10,\n      right: 10\n    }} onPress={this.onPress} style={[this.styles.container, style]} onLayout={this.onLayout} {...this.getAccessibilityInfo()}>\n        {Colors.isTransparent(color) && <Image source={transparentImage} style={this.styles.transparentImage} resizeMode={'cover'} />}\n        <Animated.Image source={Assets.icons.check} style={{\n        tintColor,\n        opacity: isSelected,\n        transform: [{\n          scaleX: isSelected\n        }, {\n          scaleY: isSelected\n        }]\n      }} />\n      </Container>;\n  }\n\n  renderSwatch = () => {\n    const {\n      animated\n    } = this.props;\n    const {\n      animatedOpacity,\n      animatedScale\n    } = this.state;\n\n    if (animated) {\n      return <Animated.View style={{\n        opacity: animatedOpacity,\n        transform: [{\n          scaleX: animatedScale\n        }, {\n          scaleY: animatedScale\n        }]\n      }}>\n          {this.renderContent()}\n        </Animated.View>;\n    }\n\n    return this.renderContent();\n  };\n\n  render() {\n    return this.renderSwatch();\n  }\n\n}\n\nexport default asBaseComponent(ColorSwatch);\n\nfunction createStyles({\n  color = Colors.grey30\n}) {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: color,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      borderRadius: DEFAULT_SIZE / 2,\n      margin: SWATCH_MARGIN,\n      borderWidth: color === 'transparent' ? undefined : 1,\n      borderColor: Colors.rgba(Colors.grey30, 0.2)\n    },\n    transparentImage: { ...StyleSheet.absoluteFillObject,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}