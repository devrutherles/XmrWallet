{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback, useRef } from 'react';\n\nvar useScrollEnabler = function useScrollEnabler() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$horizontal = props.horizontal,\n      horizontal = _props$horizontal === void 0 ? false : _props$horizontal;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      scrollEnabled = _useState2[0],\n      setScrollEnabled = _useState2[1];\n\n  var contentSize = useRef(0);\n  var layoutSize = useRef(0);\n  var checkScroll = useCallback(function () {\n    var isScrollEnabled = contentSize.current > layoutSize.current;\n\n    if (isScrollEnabled !== scrollEnabled) {\n      setScrollEnabled(isScrollEnabled);\n    }\n  }, [scrollEnabled]);\n  var onContentSizeChange = useCallback(function (contentWidth, contentHeight) {\n    var size = horizontal ? contentWidth : contentHeight;\n\n    if (size !== contentSize.current) {\n      contentSize.current = size;\n\n      if (layoutSize.current > 0) {\n        checkScroll();\n      }\n    }\n  }, [horizontal, checkScroll]);\n  var onLayout = useCallback(function (event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n        width = _event$nativeEvent$la.width,\n        height = _event$nativeEvent$la.height;\n    var size = horizontal ? width : height;\n\n    if (size !== layoutSize.current) {\n      layoutSize.current = size;\n\n      if (contentSize.current > 0) {\n        checkScroll();\n      }\n    }\n  }, [horizontal, checkScroll]);\n  return {\n    onContentSizeChange: onContentSizeChange,\n    onLayout: onLayout,\n    scrollEnabled: scrollEnabled\n  };\n};\n\nexport default useScrollEnabler;","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/hooks/useScrollEnabler/index.js"],"names":["React","useState","useCallback","useRef","useScrollEnabler","props","horizontal","scrollEnabled","setScrollEnabled","contentSize","layoutSize","checkScroll","isScrollEnabled","current","onContentSizeChange","contentWidth","contentHeight","size","onLayout","event","nativeEvent","layout","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,MAAvC,QAAqD,OAArD;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAgB;AAAA,MAAfC,KAAe,uEAAP,EAAO;AACvC,0BAEIA,KAFJ,CACEC,UADF;AAAA,MACEA,UADF,kCACe,KADf;;AAGA,kBAA0CL,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOM,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAMC,WAAW,GAAGN,MAAM,CAAC,CAAD,CAA1B;AACA,MAAMO,UAAU,GAAGP,MAAM,CAAC,CAAD,CAAzB;AACA,MAAMQ,WAAW,GAAGT,WAAW,CAAC,YAAM;AACpC,QAAMU,eAAe,GAAGH,WAAW,CAACI,OAAZ,GAAsBH,UAAU,CAACG,OAAzD;;AAEA,QAAID,eAAe,KAAKL,aAAxB,EAAuC;AACrCC,MAAAA,gBAAgB,CAACI,eAAD,CAAhB;AACD;AACF,GAN8B,EAM5B,CAACL,aAAD,CAN4B,CAA/B;AAOA,MAAMO,mBAAmB,GAAGZ,WAAW,CAAC,UAACa,YAAD,EAAeC,aAAf,EAAiC;AACvE,QAAMC,IAAI,GAAGX,UAAU,GAAGS,YAAH,GAAkBC,aAAzC;;AAEA,QAAIC,IAAI,KAAKR,WAAW,CAACI,OAAzB,EAAkC;AAChCJ,MAAAA,WAAW,CAACI,OAAZ,GAAsBI,IAAtB;;AAEA,UAAIP,UAAU,CAACG,OAAX,GAAqB,CAAzB,EAA4B;AAC1BF,QAAAA,WAAW;AACZ;AACF;AACF,GAVsC,EAUpC,CAACL,UAAD,EAAaK,WAAb,CAVoC,CAAvC;AAWA,MAAMO,QAAQ,GAAGhB,WAAW,CAAC,UAAAiB,KAAK,EAAI;AACpC,gCAOIA,KAPJ,CACEC,WADF,CAEIC,MAFJ;AAAA,QAGMC,KAHN,yBAGMA,KAHN;AAAA,QAIMC,MAJN,yBAIMA,MAJN;AAQA,QAAMN,IAAI,GAAGX,UAAU,GAAGgB,KAAH,GAAWC,MAAlC;;AAEA,QAAIN,IAAI,KAAKP,UAAU,CAACG,OAAxB,EAAiC;AAC/BH,MAAAA,UAAU,CAACG,OAAX,GAAqBI,IAArB;;AAEA,UAAIR,WAAW,CAACI,OAAZ,GAAsB,CAA1B,EAA6B;AAC3BF,QAAAA,WAAW;AACZ;AACF;AACF,GAlB2B,EAkBzB,CAACL,UAAD,EAAaK,WAAb,CAlByB,CAA5B;AAmBA,SAAO;AACLG,IAAAA,mBAAmB,EAAnBA,mBADK;AAELI,IAAAA,QAAQ,EAARA,QAFK;AAGLX,IAAAA,aAAa,EAAbA;AAHK,GAAP;AAKD,CAjDD;;AAmDA,eAAeH,gBAAf","sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\n\nconst useScrollEnabler = (props = {}) => {\n  const {\n    horizontal = false\n  } = props;\n  const [scrollEnabled, setScrollEnabled] = useState(false);\n  const contentSize = useRef(0);\n  const layoutSize = useRef(0);\n  const checkScroll = useCallback(() => {\n    const isScrollEnabled = contentSize.current > layoutSize.current;\n\n    if (isScrollEnabled !== scrollEnabled) {\n      setScrollEnabled(isScrollEnabled);\n    }\n  }, [scrollEnabled]);\n  const onContentSizeChange = useCallback((contentWidth, contentHeight) => {\n    const size = horizontal ? contentWidth : contentHeight;\n\n    if (size !== contentSize.current) {\n      contentSize.current = size;\n\n      if (layoutSize.current > 0) {\n        checkScroll();\n      }\n    }\n  }, [horizontal, checkScroll]);\n  const onLayout = useCallback(event => {\n    const {\n      nativeEvent: {\n        layout: {\n          width,\n          height\n        }\n      }\n    } = event;\n    const size = horizontal ? width : height;\n\n    if (size !== layoutSize.current) {\n      layoutSize.current = size;\n\n      if (contentSize.current > 0) {\n        checkScroll();\n      }\n    }\n  }, [horizontal, checkScroll]);\n  return {\n    onContentSizeChange,\n    onLayout,\n    scrollEnabled\n  };\n};\n\nexport default useScrollEnabler;"]},"metadata":{},"sourceType":"module"}