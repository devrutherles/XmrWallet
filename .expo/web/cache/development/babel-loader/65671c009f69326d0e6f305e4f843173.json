{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated, { Easing as _Easing, EasingNode } from 'react-native-reanimated';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { Colors } from \"../../style\";\nimport ShareTransitionContext from \"./ShareTransitionContext\";\nvar _interpolate = Animated.interpolate,\n    interpolateNode = Animated.interpolateNode;\nvar Easing = EasingNode || _Easing;\nvar interpolate = interpolateNode || _interpolate;\n\nvar SharedArea = function (_Component) {\n  _inherits(SharedArea, _Component);\n\n  var _super = _createSuper(SharedArea);\n\n  function SharedArea() {\n    var _this;\n\n    _classCallCheck(this, SharedArea);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.displayName = 'IGNORE';\n    _this.state = {};\n    _this.transition = new Animated.Value(0);\n\n    _this.setSharedData = function (data) {\n      _this.setState({\n        data: data\n      });\n    };\n\n    _this.setSource = function (sourceLayout, element) {\n      _this.setState({\n        sourceLayout: sourceLayout,\n        element: element,\n        showDetails: true\n      }, function () {\n        _this.startTransition(true);\n      });\n    };\n\n    _this.setTarget = function (targetLayout) {\n      _this.setState({\n        targetLayout: targetLayout\n      });\n    };\n\n    _this.clearSource = function () {\n      _this.startTransition(false, function () {\n        _this.setState({\n          showDetails: false,\n          data: undefined,\n          sourceLayout: undefined,\n          element: undefined\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SharedArea, [{\n    key: \"getProviderContextValue\",\n    value: function getProviderContextValue() {\n      var showDetails = this.state.showDetails;\n      return {\n        setSharedData: this.setSharedData,\n        setSource: this.setSource,\n        setTarget: this.setTarget,\n        showDetails: showDetails\n      };\n    }\n  }, {\n    key: \"getOverlayStyle\",\n    value: function getOverlayStyle() {\n      return _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n        backgroundColor: Colors.white,\n        opacity: interpolate(this.transition, {\n          inputRange: [0, 1],\n          outputRange: [0, 1]\n        })\n      });\n    }\n  }, {\n    key: \"getDetailsStyle\",\n    value: function getDetailsStyle() {\n      return _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n        opacity: interpolate(this.transition, {\n          inputRange: [90, 100],\n          outputRange: [0, 1]\n        })\n      });\n    }\n  }, {\n    key: \"getElementStyle\",\n    value: function getElementStyle() {\n      var _this$state = this.state,\n          sourceLayout = _this$state.sourceLayout,\n          targetLayout = _this$state.targetLayout;\n\n      if (sourceLayout && this.transition) {\n        return {\n          position: 'absolute',\n          width: interpolate(this.transition, {\n            inputRange: [0, 100],\n            outputRange: [sourceLayout.width, targetLayout.width]\n          }),\n          height: interpolate(this.transition, {\n            inputRange: [0, 100],\n            outputRange: [sourceLayout.height, targetLayout.height]\n          }),\n          top: interpolate(this.transition, {\n            inputRange: [0, 100],\n            outputRange: [sourceLayout.y, targetLayout.y]\n          }),\n          left: interpolate(this.transition, {\n            inputRange: [0, 100],\n            outputRange: [sourceLayout.x, targetLayout.x]\n          })\n        };\n      }\n    }\n  }, {\n    key: \"startTransition\",\n    value: function startTransition(show, onAnimationEnd) {\n      Animated.timing(this.transition, {\n        toValue: show ? 100 : 0,\n        duration: 600,\n        easing: Easing.bezier(0.19, 1, 0.22, 1),\n        useNativeDriver: false\n      }).start(onAnimationEnd);\n    }\n  }, {\n    key: \"renderDetailsOverlay\",\n    value: function renderDetailsOverlay() {\n      var renderDetails = this.props.renderDetails;\n      var _this$state2 = this.state,\n          data = _this$state2.data,\n          element = _this$state2.element;\n      return React.createElement(Animated.View, {\n        pointerEvents: data ? 'auto' : 'none',\n        style: this.getOverlayStyle()\n      }, React.createElement(Animated.View, {\n        pointerEvents: \"box-none\",\n        style: this.getDetailsStyle()\n      }, renderDetails(data)), React.createElement(Animated.View, {\n        style: this.getElementStyle()\n      }, React.createElement(TouchableOpacity, {\n        activeOpacity: 1,\n        onPress: this.clearSource,\n        style: {\n          flex: 1\n        }\n      }, element)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ShareTransitionContext.Provider, {\n        value: this.getProviderContextValue()\n      }, this.props.children, this.renderDetailsOverlay());\n    }\n  }]);\n\n  return SharedArea;\n}(Component);\n\nSharedArea.propTypes = {\n  renderDetails: PropTypes.elementType\n};\nSharedArea.defaultProps = {\n  renderDetails: _.noop\n};\nexport default SharedArea;","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/sharedTransition/SharedArea.js"],"names":["React","Component","Animated","Easing","_Easing","EasingNode","PropTypes","_","TouchableOpacity","Colors","ShareTransitionContext","_interpolate","interpolate","interpolateNode","SharedArea","displayName","state","transition","Value","setSharedData","data","setState","setSource","sourceLayout","element","showDetails","startTransition","setTarget","targetLayout","clearSource","undefined","StyleSheet","absoluteFillObject","backgroundColor","white","opacity","inputRange","outputRange","position","width","height","top","y","left","x","show","onAnimationEnd","timing","toValue","duration","easing","bezier","useNativeDriver","start","renderDetails","props","getOverlayStyle","getDetailsStyle","getElementStyle","flex","getProviderContextValue","children","renderDetailsOverlay","propTypes","elementType","defaultProps","noop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {StyleSheet} from 'react-native';\nimport Animated, {Easing as _Easing, EasingNode} from 'react-native-reanimated';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport TouchableOpacity from '../touchableOpacity';\nimport {Colors} from '../../style';\nimport ShareTransitionContext from './ShareTransitionContext';\n\nconst {interpolate: _interpolate, interpolateNode} = Animated;\nconst Easing = EasingNode || _Easing;\nconst interpolate = interpolateNode || _interpolate;\n\nclass SharedArea extends Component {\n  displayName = 'IGNORE';\n  static propTypes = {\n    /**\n     * render details screen\n     */\n    renderDetails: PropTypes.elementType\n  };\n\n  static defaultProps = {\n    renderDetails: _.noop\n  };\n\n  state = {};\n  transition = new Animated.Value(0);\n\n  getProviderContextValue() {\n    const {showDetails} = this.state;\n    return {\n      setSharedData: this.setSharedData,\n      setSource: this.setSource,\n      setTarget: this.setTarget,\n      showDetails\n    };\n  }\n\n  getOverlayStyle() {\n    return {\n      ...StyleSheet.absoluteFillObject,\n      backgroundColor: Colors.white,\n      opacity: interpolate(this.transition, {inputRange: [0, 1], outputRange: [0, 1]})\n    };\n  }\n\n  getDetailsStyle() {\n    return {\n      ...StyleSheet.absoluteFillObject,\n      opacity: interpolate(this.transition, {inputRange: [90, 100], outputRange: [0, 1]})\n    };\n  }\n\n  getElementStyle() {\n    const {sourceLayout, targetLayout} = this.state;\n    if (sourceLayout && this.transition) {\n      return {\n        position: 'absolute',\n        width: interpolate(this.transition, {\n          inputRange: [0, 100],\n          outputRange: [sourceLayout.width, targetLayout.width]\n        }),\n        height: interpolate(this.transition, {\n          inputRange: [0, 100],\n          outputRange: [sourceLayout.height, targetLayout.height]\n        }),\n        top: interpolate(this.transition, {\n          inputRange: [0, 100],\n          outputRange: [sourceLayout.y, targetLayout.y]\n        }),\n        left: interpolate(this.transition, {\n          inputRange: [0, 100],\n          outputRange: [sourceLayout.x, targetLayout.x]\n        })\n      };\n    }\n  }\n\n  setSharedData = data => {\n    this.setState({\n      data\n    });\n  };\n\n  setSource = (sourceLayout, element) => {\n    this.setState({\n      sourceLayout,\n      element,\n      showDetails: true\n    },\n    () => {\n      this.startTransition(true);\n    });\n  };\n\n  setTarget = targetLayout => {\n    this.setState({\n      targetLayout\n    });\n  };\n\n  clearSource = () => {\n    this.startTransition(false, () => {\n      this.setState({\n        showDetails: false,\n        data: undefined,\n        sourceLayout: undefined,\n        element: undefined\n      });\n    });\n  };\n\n  startTransition(show, onAnimationEnd) {\n    Animated.timing(this.transition, {\n      toValue: show ? 100 : 0,\n      duration: 600,\n      easing: Easing.bezier(0.19, 1, 0.22, 1),\n      useNativeDriver: false\n    }).start(onAnimationEnd);\n  }\n\n  renderDetailsOverlay() {\n    const {renderDetails} = this.props;\n    const {data, element} = this.state;\n\n    return (\n      <Animated.View pointerEvents={data ? 'auto' : 'none'} style={this.getOverlayStyle()}>\n        <Animated.View pointerEvents=\"box-none\" style={this.getDetailsStyle()}>\n          {renderDetails(data)}\n        </Animated.View>\n\n        <Animated.View style={this.getElementStyle()}>\n          <TouchableOpacity activeOpacity={1} onPress={this.clearSource} /* _style={[style]} */ style={{flex: 1}}>\n            {element}\n          </TouchableOpacity>\n        </Animated.View>\n      </Animated.View>\n    );\n  }\n\n  render() {\n    return (\n      <ShareTransitionContext.Provider value={this.getProviderContextValue()}>\n        {this.props.children}\n        {this.renderDetailsOverlay()}\n      </ShareTransitionContext.Provider>\n    );\n  }\n}\n\nexport default SharedArea;\n"]},"metadata":{},"sourceType":"module"}