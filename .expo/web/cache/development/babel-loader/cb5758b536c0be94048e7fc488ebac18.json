{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _pt from \"prop-types\";\nimport { isFunction, isUndefined } from 'lodash';\nimport React, { useCallback, useRef, useMemo, useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated, { useSharedValue, useAnimatedScrollHandler } from 'react-native-reanimated';\nimport { Colors, Spacings } from \"../../style\";\nimport View from \"../../components/view\";\nimport Fader, { FaderPosition } from \"../../components/fader\";\nimport { Constants } from \"../../helpers\";\nimport Item from \"./Item\";\nimport usePresenter from \"./usePresenter\";\nimport Text from \"../../components/text\";\nimport { asBaseComponent } from \"../../commons/new\";\nvar AnimatedFlatList = Animated.createAnimatedComponent(FlatList);\nvar WheelPickerAlign;\n\n(function (WheelPickerAlign) {\n  WheelPickerAlign[\"CENTER\"] = \"center\";\n  WheelPickerAlign[\"RIGHT\"] = \"right\";\n  WheelPickerAlign[\"LEFT\"] = \"left\";\n})(WheelPickerAlign || (WheelPickerAlign = {}));\n\nvar WheelPicker = function WheelPicker(_ref) {\n  var propItems = _ref.items,\n      _ref$itemHeight = _ref.itemHeight,\n      itemHeight = _ref$itemHeight === void 0 ? 44 : _ref$itemHeight,\n      _ref$numberOfVisibleR = _ref.numberOfVisibleRows,\n      numberOfVisibleRows = _ref$numberOfVisibleR === void 0 ? 5 : _ref$numberOfVisibleR,\n      _ref$activeTextColor = _ref.activeTextColor,\n      activeTextColor = _ref$activeTextColor === void 0 ? Colors.primary : _ref$activeTextColor,\n      inactiveTextColor = _ref.inactiveTextColor,\n      textStyle = _ref.textStyle,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      labelProps = _ref.labelProps,\n      onChange = _ref.onChange,\n      _ref$align = _ref.align,\n      align = _ref$align === void 0 ? WheelPickerAlign.CENTER : _ref$align,\n      style = _ref.style,\n      children = _ref.children,\n      initialValue = _ref.initialValue,\n      selectedValue = _ref.selectedValue,\n      testID = _ref.testID;\n  var scrollView = useRef();\n  var offset = useSharedValue(0);\n  var scrollHandler = useAnimatedScrollHandler(function () {\n    const _f = function (e) {\n      offset.value = e.contentOffset.y;\n    };\n\n    _f._closure = {\n      offset\n    };\n    _f.asString = \"function _f(e){const{offset}=jsThis._closure;{offset.value=e.contentOffset.y;}}\";\n    _f.__workletHash = 12677925137497;\n    _f.__location = \"C:\\\\Users\\\\ruthe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projetos\\\\xmrwallet\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\incubator\\\\WheelPicker\\\\index.js (44:49)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n\n  var _usePresenter = usePresenter({\n    initialValue: initialValue,\n    selectedValue: selectedValue,\n    items: propItems,\n    children: children,\n    itemHeight: itemHeight,\n    preferredNumVisibleRows: numberOfVisibleRows\n  }),\n      height = _usePresenter.height,\n      items = _usePresenter.items,\n      shouldControlComponent = _usePresenter.shouldControlComponent,\n      currentIndex = _usePresenter.index,\n      getRowItemAtOffset = _usePresenter.getRowItemAtOffset;\n\n  var prevIndex = useRef(currentIndex);\n\n  var _useState = useState(currentIndex * itemHeight),\n      _useState2 = _slicedToArray(_useState, 2),\n      scrollOffset = _useState2[0],\n      setScrollOffset = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      flatListWidth = _useState4[0],\n      setFlatListWidth = _useState4[1];\n\n  var keyExtractor = useCallback(function (item, index) {\n    return item + \".\" + index;\n  }, []);\n  useEffect(function () {\n    if (shouldControlComponent(scrollOffset)) {\n      scrollToIndex(currentIndex, true);\n    }\n  });\n  useEffect(function () {\n    !isUndefined(initialValue) && scrollToIndex(currentIndex, true);\n  }, [currentIndex]);\n  var scrollToPassedIndex = useCallback(function () {\n    scrollToIndex(currentIndex, false);\n  }, []);\n\n  var scrollToOffset = function scrollToOffset(index, animated) {\n    var _scrollView$current;\n\n    if (isFunction((_scrollView$current = scrollView.current) == null ? void 0 : _scrollView$current.scrollToOffset)) {\n      var _scrollView$current2;\n\n      (_scrollView$current2 = scrollView.current) == null ? void 0 : _scrollView$current2.scrollToOffset({\n        offset: index * itemHeight,\n        animated: animated\n      });\n    } else {\n      var _scrollView$current3, _scrollView$current3$;\n\n      (_scrollView$current3 = scrollView.current) == null ? void 0 : (_scrollView$current3$ = _scrollView$current3.getNode()) == null ? void 0 : _scrollView$current3$.scrollToOffset({\n        offset: index * itemHeight,\n        animated: animated\n      });\n    }\n  };\n\n  var scrollToIndex = function scrollToIndex(index, animated) {\n    if (Constants.isAndroid && prevIndex.current !== index) {\n      var _items$index;\n\n      prevIndex.current = index;\n      onChange == null ? void 0 : onChange(items == null ? void 0 : (_items$index = items[index]) == null ? void 0 : _items$index.value, index);\n    }\n\n    setTimeout(function () {\n      return scrollToOffset(index, animated);\n    }, 100);\n  };\n\n  var selectItem = useCallback(function (index) {\n    scrollToIndex(index, true);\n  }, [itemHeight]);\n  var onValueChange = useCallback(function (event) {\n    setScrollOffset(event.nativeEvent.contentOffset.y);\n\n    var _getRowItemAtOffset = getRowItemAtOffset(event.nativeEvent.contentOffset.y),\n        index = _getRowItemAtOffset.index,\n        value = _getRowItemAtOffset.value;\n\n    onChange == null ? void 0 : onChange(value, index);\n  }, [onChange]);\n  var alignmentStyle = useMemo(function () {\n    return align === WheelPickerAlign.RIGHT ? {\n      alignSelf: undefined\n    } : align === WheelPickerAlign.LEFT ? {\n      alignSelf: 'flex-start'\n    } : {\n      alignSelf: 'center'\n    };\n  }, [align]);\n  var renderItem = useCallback(function (_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    return React.createElement(Item, _extends({\n      index: index,\n      itemHeight: itemHeight,\n      offset: offset,\n      activeColor: activeTextColor,\n      inactiveColor: inactiveTextColor,\n      style: textStyle\n    }, item, {\n      fakeLabel: label,\n      fakeLabelStyle: labelStyle,\n      fakeLabelProps: labelProps,\n      centerH: !label,\n      onSelect: selectItem,\n      testID: testID + \".item_\" + index\n    }));\n  }, [itemHeight]);\n  var separators = useMemo(function () {\n    return React.createElement(View, {\n      absF: true,\n      centerV: true,\n      pointerEvents: \"none\"\n    }, React.createElement(View, {\n      style: styles.separators\n    }));\n  }, []);\n  var labelContainerStyle = useMemo(function () {\n    return [{\n      position: 'absolute',\n      top: 0,\n      bottom: 0\n    }, alignmentStyle];\n  }, [alignmentStyle]);\n  var labelContainer = useMemo(function () {\n    return React.createElement(View, {\n      style: labelContainerStyle,\n      width: flatListWidth,\n      pointerEvents: \"none\"\n    }, React.createElement(View, {\n      style: styles.label,\n      centerV: true,\n      pointerEvents: \"none\"\n    }, React.createElement(Text, _extends({\n      \"marginL-s2\": true,\n      \"marginR-s5\": true,\n      text80M: true\n    }, labelProps, {\n      color: activeTextColor,\n      style: labelStyle\n    }), label)));\n  }, [flatListWidth, labelContainerStyle, label, labelProps, activeTextColor, labelStyle]);\n  var fader = useMemo(function () {\n    return function (position) {\n      return React.createElement(Fader, {\n        visible: true,\n        position: position,\n        size: 60\n      });\n    };\n  }, []);\n  var getItemLayout = useCallback(function (_data, index) {\n    return {\n      length: itemHeight,\n      offset: itemHeight * index,\n      index: index\n    };\n  }, [itemHeight]);\n  var updateFlatListWidth = useCallback(function (width) {\n    setFlatListWidth(width);\n  }, []);\n  var contentContainerStyle = useMemo(function () {\n    return [{\n      paddingVertical: height / 2 - itemHeight / 2\n    }, alignmentStyle];\n  }, [height, itemHeight, alignmentStyle]);\n  return React.createElement(View, {\n    testID: testID,\n    \"bg-white\": true,\n    style: style\n  }, React.createElement(View, {\n    row: true,\n    centerH: true\n  }, React.createElement(View, {\n    flexG: true\n  }, React.createElement(AnimatedFlatList, {\n    testID: testID + \".list\",\n    height: height,\n    data: items,\n    keyExtractor: keyExtractor,\n    scrollEventThrottle: 100,\n    onScroll: scrollHandler,\n    onMomentumScrollEnd: onValueChange,\n    showsVerticalScrollIndicator: false,\n    onLayout: scrollToPassedIndex,\n    ref: scrollView,\n    contentContainerStyle: contentContainerStyle,\n    snapToInterval: itemHeight,\n    decelerationRate: Constants.isAndroid ? 0.98 : 'normal',\n    renderItem: renderItem,\n    getItemLayout: getItemLayout,\n    initialScrollIndex: currentIndex,\n    onContentSizeChange: updateFlatListWidth,\n    centerContent: align === 'center' && Constants.isRTL\n  }))), label && labelContainer, fader(FaderPosition.BOTTOM), fader(FaderPosition.TOP), separators);\n};\n\nWheelPicker.propTypes = {\n  items: _pt.array,\n  itemHeight: _pt.number,\n  numberOfVisibleRows: _pt.number,\n  activeTextColor: _pt.string,\n  inactiveTextColor: _pt.string,\n  label: _pt.string,\n  onChange: _pt.func,\n  children: _pt.oneOfType([_pt.element, _pt.arrayOf(_pt.element)]),\n  align: _pt.oneOf([\"center\", \"right\", \"left\"]),\n  testID: _pt.string\n};\nWheelPicker.alignments = WheelPickerAlign;\nWheelPicker.displayName = 'Incubator.WheelPicker';\nexport default asBaseComponent(WheelPicker);\nvar styles = StyleSheet.create({\n  separators: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    height: Spacings.s9,\n    borderColor: Colors.grey60\n  },\n  label: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/incubator/WheelPicker/index.js"],"names":["_pt","isFunction","isUndefined","React","useCallback","useRef","useMemo","useEffect","useState","Animated","useSharedValue","useAnimatedScrollHandler","Colors","Spacings","View","Fader","FaderPosition","Constants","Item","usePresenter","Text","asBaseComponent","AnimatedFlatList","createAnimatedComponent","FlatList","WheelPickerAlign","WheelPicker","propItems","items","itemHeight","numberOfVisibleRows","activeTextColor","primary","inactiveTextColor","textStyle","label","labelStyle","labelProps","onChange","align","CENTER","style","children","initialValue","selectedValue","testID","scrollView","offset","scrollHandler","e","value","contentOffset","y","preferredNumVisibleRows","height","shouldControlComponent","currentIndex","index","getRowItemAtOffset","prevIndex","scrollOffset","setScrollOffset","flatListWidth","setFlatListWidth","keyExtractor","item","scrollToIndex","scrollToPassedIndex","scrollToOffset","animated","current","getNode","isAndroid","setTimeout","selectItem","onValueChange","event","nativeEvent","alignmentStyle","RIGHT","alignSelf","undefined","LEFT","renderItem","separators","styles","labelContainerStyle","position","top","bottom","labelContainer","fader","getItemLayout","_data","length","updateFlatListWidth","width","contentContainerStyle","paddingVertical","isRTL","BOTTOM","TOP","propTypes","array","number","string","func","oneOfType","element","arrayOf","oneOf","alignments","displayName","StyleSheet","create","borderTopWidth","borderBottomWidth","s9","borderColor","grey60","right"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n// TODO: Support style customization\nimport { isFunction, isUndefined } from 'lodash';\nimport React, { useCallback, useRef, useMemo, useEffect, useState } from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\nimport Animated, { useSharedValue, useAnimatedScrollHandler } from 'react-native-reanimated';\nimport { Colors, Spacings } from \"../../style\";\nimport View from \"../../components/view\";\nimport Fader, { FaderPosition } from \"../../components/fader\";\nimport { Constants } from \"../../helpers\";\nimport Item from \"./Item\";\nimport usePresenter from \"./usePresenter\";\nimport Text from \"../../components/text\";\nimport { asBaseComponent } from \"../../commons/new\";\nconst AnimatedFlatList = Animated.createAnimatedComponent(FlatList);\nvar WheelPickerAlign;\n\n(function (WheelPickerAlign) {\n  WheelPickerAlign[\"CENTER\"] = \"center\";\n  WheelPickerAlign[\"RIGHT\"] = \"right\";\n  WheelPickerAlign[\"LEFT\"] = \"left\";\n})(WheelPickerAlign || (WheelPickerAlign = {}));\n\nconst WheelPicker = ({\n  items: propItems,\n  itemHeight = 44,\n  numberOfVisibleRows = 5,\n  activeTextColor = Colors.primary,\n  inactiveTextColor,\n  textStyle,\n  label,\n  labelStyle,\n  labelProps,\n  onChange,\n  align = WheelPickerAlign.CENTER,\n  style,\n  children,\n  initialValue,\n  selectedValue,\n  testID\n}) => {\n  const scrollView = useRef();\n  const offset = useSharedValue(0);\n  const scrollHandler = useAnimatedScrollHandler(e => {\n    offset.value = e.contentOffset.y;\n  });\n  const {\n    height,\n    items,\n    shouldControlComponent,\n    index: currentIndex,\n    getRowItemAtOffset\n  } = usePresenter({\n    initialValue,\n    selectedValue,\n    items: propItems,\n    children,\n    itemHeight,\n    preferredNumVisibleRows: numberOfVisibleRows\n  });\n  const prevIndex = useRef(currentIndex);\n  const [scrollOffset, setScrollOffset] = useState(currentIndex * itemHeight);\n  const [flatListWidth, setFlatListWidth] = useState(0);\n  const keyExtractor = useCallback((item, index) => `${item}.${index}`, []);\n  /* This effect enforce the index to be controlled by selectedValue passed by the user */\n\n  useEffect(() => {\n    if (shouldControlComponent(scrollOffset)) {\n      scrollToIndex(currentIndex, true);\n    }\n  });\n  /* This effect making sure to reset index if initialValue has changed */\n\n  useEffect(() => {\n    !isUndefined(initialValue) && scrollToIndex(currentIndex, true);\n  }, [currentIndex]);\n  const scrollToPassedIndex = useCallback(() => {\n    scrollToIndex(currentIndex, false);\n  }, []);\n\n  const scrollToOffset = (index, animated) => {\n    // TODO: we should remove this split (the getNode section) in V6 and remove support for reanimated 1\n    //@ts-expect-error for some reason scrollToOffset isn't recognized\n    if (isFunction(scrollView.current?.scrollToOffset)) {\n      //@ts-expect-error\n      scrollView.current?.scrollToOffset({\n        offset: index * itemHeight,\n        animated\n      });\n    } else {\n      //@ts-expect-error\n      scrollView.current?.getNode()?.scrollToOffset({\n        offset: index * itemHeight,\n        animated\n      });\n    }\n  };\n\n  const scrollToIndex = (index, animated) => {\n    // this is done to handle onMomentumScrollEnd not being called in Android:\n    // https://github.com/facebook/react-native/issues/26661\n    if (Constants.isAndroid && prevIndex.current !== index) {\n      prevIndex.current = index;\n      onChange?.(items?.[index]?.value, index);\n    }\n\n    setTimeout(() => scrollToOffset(index, animated), 100);\n  };\n\n  const selectItem = useCallback(index => {\n    scrollToIndex(index, true);\n  }, [itemHeight]);\n  const onValueChange = useCallback(event => {\n    setScrollOffset(event.nativeEvent.contentOffset.y);\n    const {\n      index,\n      value\n    } = getRowItemAtOffset(event.nativeEvent.contentOffset.y);\n    onChange?.(value, index);\n  }, [onChange]);\n  const alignmentStyle = useMemo(() => {\n    return align === WheelPickerAlign.RIGHT ? {\n      alignSelf: undefined\n    } : align === WheelPickerAlign.LEFT ? {\n      alignSelf: 'flex-start'\n    } : {\n      alignSelf: 'center'\n    };\n  }, [align]);\n  const renderItem = useCallback(({\n    item,\n    index\n  }) => {\n    return <Item index={index} itemHeight={itemHeight} offset={offset} activeColor={activeTextColor} inactiveColor={inactiveTextColor} style={textStyle} {...item} fakeLabel={label} fakeLabelStyle={labelStyle} fakeLabelProps={labelProps} centerH={!label} onSelect={selectItem} testID={`${testID}.item_${index}`} />;\n  }, [itemHeight]);\n  const separators = useMemo(() => {\n    return <View absF centerV pointerEvents=\"none\">\n        <View style={styles.separators} />\n      </View>;\n  }, []);\n  const labelContainerStyle = useMemo(() => {\n    return [{\n      position: 'absolute',\n      top: 0,\n      bottom: 0\n    }, alignmentStyle];\n  }, [alignmentStyle]);\n  const labelContainer = useMemo(() => {\n    return (// @ts-expect-error\n      <View style={labelContainerStyle} width={flatListWidth} pointerEvents=\"none\">\n        <View style={styles.label} centerV pointerEvents=\"none\">\n          <Text marginL-s2 marginR-s5 text80M {...labelProps} color={activeTextColor} style={labelStyle}>\n            {label}\n          </Text>\n        </View>\n      </View>\n    );\n  }, [flatListWidth, labelContainerStyle, label, labelProps, activeTextColor, labelStyle]);\n  const fader = useMemo(() => position => {\n    return <Fader visible position={position} size={60} />;\n  }, []);\n  const getItemLayout = useCallback((_data, index) => {\n    return {\n      length: itemHeight,\n      offset: itemHeight * index,\n      index\n    };\n  }, [itemHeight]);\n  const updateFlatListWidth = useCallback(width => {\n    setFlatListWidth(width);\n  }, []);\n  const contentContainerStyle = useMemo(() => {\n    return [{\n      paddingVertical: height / 2 - itemHeight / 2\n    }, alignmentStyle];\n  }, [height, itemHeight, alignmentStyle]);\n  return <View testID={testID} bg-white style={style}>\n      <View row centerH>\n        <View flexG>\n          <AnimatedFlatList testID={`${testID}.list`} height={height} data={items} // @ts-ignore reanimated2\n        keyExtractor={keyExtractor} scrollEventThrottle={100} onScroll={scrollHandler} onMomentumScrollEnd={onValueChange} showsVerticalScrollIndicator={false} onLayout={scrollToPassedIndex} // @ts-ignore\n        ref={scrollView} // @ts-expect-error\n        contentContainerStyle={contentContainerStyle} snapToInterval={itemHeight} decelerationRate={Constants.isAndroid ? 0.98 : 'normal'} renderItem={renderItem} getItemLayout={getItemLayout} initialScrollIndex={currentIndex} onContentSizeChange={updateFlatListWidth}\n        /* This fixes an issue with RTL when centering flatlist content using alignSelf */\n        centerContent={align === 'center' && Constants.isRTL} />\n        </View>\n      </View>\n      {label && labelContainer}\n      {fader(FaderPosition.BOTTOM)}\n      {fader(FaderPosition.TOP)}\n      {separators}\n    </View>;\n};\n\nWheelPicker.propTypes = {\n  /**\n     * Data source for WheelPicker\n     */\n  items: _pt.array,\n\n  /**\n     * Describe the height of each item in the WheelPicker\n     * default value: 44\n     */\n  itemHeight: _pt.number,\n\n  /**\n     * Describe the number of rows visible\n     * default value: 5\n     */\n  numberOfVisibleRows: _pt.number,\n\n  /**\n     * Text color for the focused row\n     */\n  activeTextColor: _pt.string,\n\n  /**\n     * Text color for other, non-focused rows\n     */\n  inactiveTextColor: _pt.string,\n\n  /**\n     * Additional label on the right of the item text\n     */\n  label: _pt.string,\n\n  /**\n     * Event, on active row change\n     */\n  onChange: _pt.func,\n\n  /**\n     * Support passing items as children props\n     */\n  children: _pt.oneOfType([_pt.element, _pt.arrayOf(_pt.element)]),\n\n  /**\n     * Align the content to center, right ot left (default: center)\n     */\n  align: _pt.oneOf([\"center\", \"right\", \"left\"]),\n  testID: _pt.string\n};\nWheelPicker.alignments = WheelPickerAlign;\nWheelPicker.displayName = 'Incubator.WheelPicker';\nexport default asBaseComponent(WheelPicker);\nconst styles = StyleSheet.create({\n  separators: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    height: Spacings.s9,\n    borderColor: Colors.grey60\n  },\n  label: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0\n  }\n});"]},"metadata":{},"sourceType":"module"}