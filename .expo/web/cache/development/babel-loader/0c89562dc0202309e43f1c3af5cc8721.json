{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useState } from 'react';\nimport { Constants } from \"../../helpers\";\nexport default function useHiddenLocation(props) {\n  var containerRef = props.containerRef;\n\n  var getHiddenLocation = function getHiddenLocation(_ref) {\n    var _ref$x = _ref.x,\n        x = _ref$x === void 0 ? 0 : _ref$x,\n        _ref$y = _ref.y,\n        y = _ref$y === void 0 ? 0 : _ref$y,\n        _ref$width = _ref.width,\n        width = _ref$width === void 0 ? Constants.screenWidth : _ref$width,\n        _ref$height = _ref.height,\n        height = _ref$height === void 0 ? Constants.windowHeight : _ref$height,\n        _ref$isDefault = _ref.isDefault,\n        isDefault = _ref$isDefault === void 0 ? true : _ref$isDefault;\n    return {\n      top: -y - height,\n      bottom: Constants.windowHeight - y,\n      left: -width - x,\n      right: Constants.screenWidth - x,\n      isDefault: isDefault\n    };\n  };\n\n  var _useState = useState(getHiddenLocation({})),\n      _useState2 = _slicedToArray(_useState, 2),\n      hiddenLocation = _useState2[0],\n      setHiddenLocation = _useState2[1];\n\n  var onLayout = useCallback(function (event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n        width = _event$nativeEvent$la.width,\n        height = _event$nativeEvent$la.height;\n\n    if (containerRef.current) {\n      containerRef.current.measureInWindow(function (x, y) {\n        setHiddenLocation(getHiddenLocation({\n          x: x,\n          y: y,\n          width: width,\n          height: height,\n          isDefault: false\n        }));\n      });\n    }\n  }, []);\n  return {\n    onLayout: onLayout,\n    hiddenLocation: hiddenLocation\n  };\n}","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/incubator/hooks/useHiddenLocation.js"],"names":["React","useCallback","useState","Constants","useHiddenLocation","props","containerRef","getHiddenLocation","x","y","width","screenWidth","height","windowHeight","isDefault","top","bottom","left","right","hiddenLocation","setHiddenLocation","onLayout","event","nativeEvent","layout","current","measureInWindow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,SAAT;AACA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC/C,MACEC,YADF,GAEID,KAFJ,CACEC,YADF;;AAIA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAMpB;AAAA,sBALJC,CAKI;AAAA,QALJA,CAKI,uBALA,CAKA;AAAA,sBAJJC,CAII;AAAA,QAJJA,CAII,uBAJA,CAIA;AAAA,0BAHJC,KAGI;AAAA,QAHJA,KAGI,2BAHIP,SAAS,CAACQ,WAGd;AAAA,2BAFJC,MAEI;AAAA,QAFJA,MAEI,4BAFKT,SAAS,CAACU,YAEf;AAAA,8BADJC,SACI;AAAA,QADJA,SACI,+BADQ,IACR;AACJ,WAAO;AACLC,MAAAA,GAAG,EAAE,CAACN,CAAD,GAAKG,MADL;AAELI,MAAAA,MAAM,EAAEb,SAAS,CAACU,YAAV,GAAyBJ,CAF5B;AAGLQ,MAAAA,IAAI,EAAE,CAACP,KAAD,GAASF,CAHV;AAILU,MAAAA,KAAK,EAAEf,SAAS,CAACQ,WAAV,GAAwBH,CAJ1B;AAKLM,MAAAA,SAAS,EAATA;AALK,KAAP;AAOD,GAdD;;AAgBA,kBAA4CZ,QAAQ,CAACK,iBAAiB,CAAC,EAAD,CAAlB,CAApD;AAAA;AAAA,MAAOY,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,MAAMC,QAAQ,GAAGpB,WAAW,CAAC,UAAAqB,KAAK,EAAI;AACpC,gCAGIA,KAAK,CAACC,WAAN,CAAkBC,MAHtB;AAAA,QACEd,KADF,yBACEA,KADF;AAAA,QAEEE,MAFF,yBAEEA,MAFF;;AAKA,QAAIN,YAAY,CAACmB,OAAjB,EAA0B;AACxBnB,MAAAA,YAAY,CAACmB,OAAb,CAAqBC,eAArB,CAAqC,UAAClB,CAAD,EAAIC,CAAJ,EAAU;AAC7CW,QAAAA,iBAAiB,CAACb,iBAAiB,CAAC;AAClCC,UAAAA,CAAC,EAADA,CADkC;AAElCC,UAAAA,CAAC,EAADA,CAFkC;AAGlCC,UAAAA,KAAK,EAALA,KAHkC;AAIlCE,UAAAA,MAAM,EAANA,MAJkC;AAKlCE,UAAAA,SAAS,EAAE;AALuB,SAAD,CAAlB,CAAjB;AAOD,OARD;AASD;AAEF,GAlB2B,EAkBzB,EAlByB,CAA5B;AAmBA,SAAO;AACLO,IAAAA,QAAQ,EAARA,QADK;AAELF,IAAAA,cAAc,EAAdA;AAFK,GAAP;AAID","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Constants } from \"../../helpers\";\nexport default function useHiddenLocation(props) {\n  const {\n    containerRef\n  } = props;\n\n  const getHiddenLocation = ({\n    x = 0,\n    y = 0,\n    width = Constants.screenWidth,\n    height = Constants.windowHeight,\n    isDefault = true\n  }) => {\n    return {\n      top: -y - height,\n      bottom: Constants.windowHeight - y,\n      left: -width - x,\n      right: Constants.screenWidth - x,\n      isDefault\n    };\n  };\n\n  const [hiddenLocation, setHiddenLocation] = useState(getHiddenLocation({}));\n  const onLayout = useCallback(event => {\n    const {\n      width,\n      height\n    } = event.nativeEvent.layout;\n\n    if (containerRef.current) {\n      containerRef.current.measureInWindow((x, y) => {\n        setHiddenLocation(getHiddenLocation({\n          x,\n          y,\n          width,\n          height,\n          isDefault: false\n        }));\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return {\n    onLayout,\n    hiddenLocation\n  };\n}"]},"metadata":{},"sourceType":"module"}