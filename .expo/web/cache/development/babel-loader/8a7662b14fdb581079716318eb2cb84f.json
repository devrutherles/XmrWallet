{"ast":null,"code":"import React, { useEffect, useCallback } from 'react';\nimport useAnimatedTranslator from \"./useAnimatedTranslator\";\nimport useAnimationEndNotifier from \"./useAnimationEndNotifier\";\nexport default function useAnimatedTransition(props) {\n  var hiddenLocation = props.hiddenLocation,\n      enterFrom = props.enterFrom,\n      exitTo = props.exitTo,\n      onAnimationEnd = props.onAnimationEnd;\n\n  var _useAnimatedTranslato = useAnimatedTranslator({\n    initialVisibility: !enterFrom\n  }),\n      init = _useAnimatedTranslato.init,\n      animate = _useAnimatedTranslato.animate,\n      animatedStyle = _useAnimatedTranslato.animatedStyle;\n\n  var _useAnimationEndNotif = useAnimationEndNotifier({\n    onAnimationEnd: onAnimationEnd\n  }),\n      onEnterAnimationEnd = _useAnimationEndNotif.onEnterAnimationEnd,\n      onExitAnimationEnd = _useAnimationEndNotif.onExitAnimationEnd;\n\n  var getLocation = function getLocation(direction) {\n    return {\n      x: direction && ['left', 'right'].includes(direction) ? hiddenLocation[direction] : 0,\n      y: direction && ['top', 'bottom'].includes(direction) ? hiddenLocation[direction] : 0\n    };\n  };\n\n  useEffect(function () {\n    if (!hiddenLocation.isDefault && enterFrom) {\n      var location = getLocation(enterFrom);\n      init(location, enterFrom, enter);\n    }\n  }, [hiddenLocation.isDefault]);\n  var enter = useCallback(function () {\n    var _f = function _f() {\n      if (enterFrom) {\n        animate({\n          x: 0,\n          y: 0\n        }, enterFrom, onEnterAnimationEnd);\n      }\n    };\n\n    _f._closure = {\n      enterFrom: enterFrom,\n      animate: animate,\n      onEnterAnimationEnd: onEnterAnimationEnd\n    };\n    _f.asString = \"function _f(){const{enterFrom,animate,onEnterAnimationEnd}=jsThis._closure;{if(enterFrom){animate({x:0,y:0},enterFrom,onEnterAnimationEnd);}}}\";\n    _f.__workletHash = 8984382269024;\n    _f.__location = \"C:\\\\Users\\\\ruthe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projetos\\\\xmrwallet\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\incubator\\\\TransitionView\\\\useAnimatedTransition.js (39:28)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [onEnterAnimationEnd]);\n  var exit = useCallback(function () {\n    var _f = function _f() {\n      if (exitTo) {\n        animate(getLocation(exitTo), exitTo, onExitAnimationEnd);\n      }\n    };\n\n    _f._closure = {\n      exitTo: exitTo,\n      animate: animate,\n      getLocation: getLocation,\n      onExitAnimationEnd: onExitAnimationEnd\n    };\n    _f.asString = \"function _f(){const{exitTo,animate,getLocation,onExitAnimationEnd}=jsThis._closure;{if(exitTo){animate(getLocation(exitTo),exitTo,onExitAnimationEnd);}}}\";\n    _f.__workletHash = 13438651652248;\n    _f.__location = \"C:\\\\Users\\\\ruthe\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projetos\\\\xmrwallet\\\\node_modules\\\\react-native-ui-lib\\\\src\\\\incubator\\\\TransitionView\\\\useAnimatedTransition.js (49:27)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [hiddenLocation, exitTo, onExitAnimationEnd]);\n  return {\n    exit: exit,\n    animatedStyle: animatedStyle\n  };\n}","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/incubator/TransitionView/useAnimatedTransition.js"],"names":["React","useEffect","useCallback","useAnimatedTranslator","useAnimationEndNotifier","useAnimatedTransition","props","hiddenLocation","enterFrom","exitTo","onAnimationEnd","initialVisibility","init","animate","animatedStyle","onEnterAnimationEnd","onExitAnimationEnd","getLocation","direction","x","includes","y","isDefault","location","enter","exit"],"mappings":"AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,qBAAP;AACA,OAAOC,uBAAP;AACA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AACnD,MACEC,cADF,GAKID,KALJ,CACEC,cADF;AAAA,MAEEC,SAFF,GAKIF,KALJ,CAEEE,SAFF;AAAA,MAGEC,MAHF,GAKIH,KALJ,CAGEG,MAHF;AAAA,MAIEC,cAJF,GAKIJ,KALJ,CAIEI,cAJF;;AAMA,8BAIIP,qBAAqB,CAAC;AACxBQ,IAAAA,iBAAiB,EAAE,CAACH;AADI,GAAD,CAJzB;AAAA,MACEI,IADF,yBACEA,IADF;AAAA,MAEEC,OAFF,yBAEEA,OAFF;AAAA,MAGEC,aAHF,yBAGEA,aAHF;;AAOA,8BAGIV,uBAAuB,CAAC;AAC1BM,IAAAA,cAAc,EAAdA;AAD0B,GAAD,CAH3B;AAAA,MACEK,mBADF,yBACEA,mBADF;AAAA,MAEEC,kBAFF,yBAEEA,kBAFF;;AAOA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,SAAS,EAAI;AAC/B,WAAO;AACLC,MAAAA,CAAC,EAAED,SAAS,IAAI,CAAC,MAAD,EAAS,OAAT,EAAkBE,QAAlB,CAA2BF,SAA3B,CAAb,GAAqDX,cAAc,CAACW,SAAD,CAAnE,GAAiF,CAD/E;AAELG,MAAAA,CAAC,EAAEH,SAAS,IAAI,CAAC,KAAD,EAAQ,QAAR,EAAkBE,QAAlB,CAA2BF,SAA3B,CAAb,GAAqDX,cAAc,CAACW,SAAD,CAAnE,GAAiF;AAF/E,KAAP;AAID,GALD;;AAOAjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACM,cAAc,CAACe,SAAhB,IAA6Bd,SAAjC,EAA4C;AAC1C,UAAMe,QAAQ,GAAGN,WAAW,CAACT,SAAD,CAA5B;AACAI,MAAAA,IAAI,CAACW,QAAD,EAAWf,SAAX,EAAsBgB,KAAtB,CAAJ;AACD;AACF,GALQ,EAKN,CAACjB,cAAc,CAACe,SAAhB,CALM,CAAT;AAMA,MAAME,KAAK,GAAGtB,WAAW;AAAA,2BAAO;AAG9B,UAAIM,SAAJ,EAAe;AACbK,QAAAA,OAAO,CAAC;AACNM,UAAAA,CAAC,EAAE,CADG;AAENE,UAAAA,CAAC,EAAE;AAFG,SAAD,EAGJb,SAHI,EAGOO,mBAHP,CAAP;AAID;AACF,KATwB;;AAAA;AAAA,iBA9BpBP,SA8BoB;AAAA,eAjCvBK,OAiCuB;AAAA,2BA9BTE;AA8BS;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,OAStB,CAACA,mBAAD,CATsB,CAAzB;AAUA,MAAMU,IAAI,GAAGvB,WAAW;AAAA,2BAAO;AAG7B,UAAIO,MAAJ,EAAY;AACVI,QAAAA,OAAO,CAACI,WAAW,CAACR,MAAD,CAAZ,EAAsBA,MAAtB,EAA8BO,kBAA9B,CAAP;AACD;AACF,KANuB;;AAAA;AAAA,cA3COP,MA2CP;AAAA,eA3CtBI,OA2CsB;AAAA,mBA3CdI,WA2Cc;AAAA,0BA3CeD;AA2Cf;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,OAMrB,CAACT,cAAD,EAAiBE,MAAjB,EAAyBO,kBAAzB,CANqB,CAAxB;AAOA,SAAO;AACLS,IAAAA,IAAI,EAAJA,IADK;AAELX,IAAAA,aAAa,EAAbA;AAFK,GAAP;AAID","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useCallback } from 'react';\nimport useAnimatedTranslator from \"./useAnimatedTranslator\";\nimport useAnimationEndNotifier from \"./useAnimationEndNotifier\";\nexport default function useAnimatedTransition(props) {\n  const {\n    hiddenLocation,\n    enterFrom,\n    exitTo,\n    onAnimationEnd\n  } = props;\n  const {\n    init,\n    animate,\n    animatedStyle\n  } = useAnimatedTranslator({\n    initialVisibility: !enterFrom\n  });\n  const {\n    onEnterAnimationEnd,\n    onExitAnimationEnd\n  } = useAnimationEndNotifier({\n    onAnimationEnd\n  });\n\n  const getLocation = direction => {\n    return {\n      x: direction && ['left', 'right'].includes(direction) ? hiddenLocation[direction] : 0,\n      y: direction && ['top', 'bottom'].includes(direction) ? hiddenLocation[direction] : 0\n    };\n  };\n\n  useEffect(() => {\n    if (!hiddenLocation.isDefault && enterFrom) {\n      const location = getLocation(enterFrom);\n      init(location, enterFrom, enter);\n    }\n  }, [hiddenLocation.isDefault]);\n  const enter = useCallback(() => {\n    'worklet';\n\n    if (enterFrom) {\n      animate({\n        x: 0,\n        y: 0\n      }, enterFrom, onEnterAnimationEnd);\n    }\n  }, [onEnterAnimationEnd]);\n  const exit = useCallback(() => {\n    'worklet';\n\n    if (exitTo) {\n      animate(getLocation(exitTo), exitTo, onExitAnimationEnd);\n    }\n  }, [hiddenLocation, exitTo, onExitAnimationEnd]);\n  return {\n    exit,\n    animatedStyle\n  };\n}"]},"metadata":{},"sourceType":"module"}