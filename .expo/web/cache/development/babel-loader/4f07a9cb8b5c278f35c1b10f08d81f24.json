{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { BaseComponent } from \"../../commons\";\nimport { extractComponentProps } from \"../../commons/modifiers\";\nimport Dialog from \"../dialog\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport { Colors } from \"../../style\";\n\nvar PickerDialog = function (_BaseComponent) {\n  _inherits(PickerDialog, _BaseComponent);\n\n  var _super = _createSuper(PickerDialog);\n\n  function PickerDialog() {\n    var _this;\n\n    _classCallCheck(this, PickerDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(PickerDialog, [{\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var _this$props = this.props,\n          onDone = _this$props.onDone,\n          onCancel = _this$props.onCancel,\n          topBarProps = _this$props.topBarProps;\n      return React.createElement(View, {\n        style: styles.header\n      }, React.createElement(Text, {\n        text70: true,\n        primary: true,\n        onPress: onCancel,\n        accessibilityRole: onCancel ? 'button' : undefined\n      }, _.get(topBarProps, 'cancelLabel', 'Cancel')), React.createElement(Text, {\n        text70: true,\n        primary: true,\n        onPress: onDone,\n        accessibilityRole: onDone ? 'button' : undefined\n      }, _.get(topBarProps, 'doneLabel', 'Done')));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dialogProps = extractComponentProps(Dialog, this.props);\n      var panDirection = this.props.panDirection;\n      return React.createElement(Dialog, _extends({}, dialogProps, {\n        width: \"100%\",\n        bottom: true,\n        animationConfig: {\n          duration: 300\n        },\n        panDirection: panDirection\n      }), React.createElement(View, {\n        flex: true,\n        \"bg-white\": true\n      }, this.renderHeader(), React.createElement(View, {\n        centerV: true,\n        flex: true\n      }, this.props.children), React.createElement(View, {\n        useSafeArea: true\n      })));\n    }\n  }]);\n\n  return PickerDialog;\n}(BaseComponent);\n\nPickerDialog.displayName = 'IGNORE';\nPickerDialog.propTypes = {\n  onDone: PropTypes.func,\n  onCancel: PropTypes.func,\n  topBarProps: PropTypes.object,\n  children: PropTypes.array\n};\nvar styles = StyleSheet.create({\n  header: {\n    height: 44,\n    backgroundColor: Colors.grey80,\n    paddingHorizontal: 17,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n});\nexport default PickerDialog;","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/picker/PickerDialog.js"],"names":["React","PropTypes","_","BaseComponent","extractComponentProps","Dialog","View","Text","Colors","PickerDialog","state","props","onDone","onCancel","topBarProps","styles","header","undefined","get","dialogProps","panDirection","duration","renderHeader","children","displayName","propTypes","func","object","array","StyleSheet","create","height","backgroundColor","grey80","paddingHorizontal","flexDirection","justifyContent","alignItems"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAAQC,aAAR;AACA,SAAQC,qBAAR;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,IAAP;AACA,SAAQC,MAAR;;IAEMC,Y;;;;;;;;;;;;;;;UASJC,K,GAAQ,E;;;;;;WAER,wBAAe;AACb,wBAAwC,KAAKC,KAA7C;AAAA,UAAOC,MAAP,eAAOA,MAAP;AAAA,UAAeC,QAAf,eAAeA,QAAf;AAAA,UAAyBC,WAAzB,eAAyBA,WAAzB;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,SACE,oBAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAa,QAAA,OAAO,MAApB;AAAqB,QAAA,OAAO,EAAEH,QAA9B;AAAwC,QAAA,iBAAiB,EAAEA,QAAQ,GAAG,QAAH,GAAcI;AAAjF,SACGf,CAAC,CAACgB,GAAF,CAAMJ,WAAN,EAAmB,aAAnB,EAAkC,QAAlC,CADH,CADF,EAIE,oBAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAa,QAAA,OAAO,MAApB;AAAqB,QAAA,OAAO,EAAEF,MAA9B;AAAsC,QAAA,iBAAiB,EAAEA,MAAM,GAAG,QAAH,GAAcK;AAA7E,SACGf,CAAC,CAACgB,GAAF,CAAMJ,WAAN,EAAmB,WAAnB,EAAgC,MAAhC,CADH,CAJF,CADF;AAUD;;;WAGD,kBAAS;AACP,UAAMK,WAAW,GAAGf,qBAAqB,CAACC,MAAD,EAAS,KAAKM,KAAd,CAAzC;AAEA,UAAOS,YAAP,GAAuB,KAAKT,KAA5B,CAAOS,YAAP;AACA,aACE,oBAAC,MAAD,eAAYD,WAAZ;AAAyB,QAAA,KAAK,EAAC,MAA/B;AAAsC,QAAA,MAAM,MAA5C;AAA6C,QAAA,eAAe,EAAE;AAACE,UAAAA,QAAQ,EAAE;AAAX,SAA9D;AAA+E,QAAA,YAAY,EAAED;AAA7F,UACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW;AAAX,SACG,KAAKE,YAAL,EADH,EAEE,oBAAC,IAAD;AAAM,QAAA,OAAO,MAAb;AAAc,QAAA,IAAI;AAAlB,SACG,KAAKX,KAAL,CAAWY,QADd,CAFF,EAKE,oBAAC,IAAD;AAAM,QAAA,WAAW;AAAjB,QALF,CADF,CADF;AAWD;;;;EA1CwBpB,a;;AAArBM,Y,CACGe,W,GAAc,Q;AADjBf,Y,CAEGgB,S,GAAY;AACjBb,EAAAA,MAAM,EAAEX,SAAS,CAACyB,IADD;AAEjBb,EAAAA,QAAQ,EAAEZ,SAAS,CAACyB,IAFH;AAGjBZ,EAAAA,WAAW,EAAEb,SAAS,CAAC0B,MAHN;AAIjBJ,EAAAA,QAAQ,EAAEtB,SAAS,CAAC2B;AAJH,C;AA2CrB,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,MAAM,EAAE;AACNe,IAAAA,MAAM,EAAE,EADF;AAENC,IAAAA,eAAe,EAAExB,MAAM,CAACyB,MAFlB;AAGNC,IAAAA,iBAAiB,EAAE,EAHb;AAINC,IAAAA,aAAa,EAAE,KAJT;AAKNC,IAAAA,cAAc,EAAE,eALV;AAMNC,IAAAA,UAAU,EAAE;AANN;AADuB,CAAlB,CAAf;AAWA,eAAe5B,YAAf","sourcesContent":["import React from 'react';\nimport {StyleSheet} from 'react-native';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport {BaseComponent} from '../../commons';\nimport {extractComponentProps} from '../../commons/modifiers';\nimport Dialog from '../dialog';\nimport View from '../view';\nimport Text from '../text';\nimport {Colors} from '../../style';\n\nclass PickerDialog extends BaseComponent {\n  static displayName = 'IGNORE';\n  static propTypes = {\n    onDone: PropTypes.func,\n    onCancel: PropTypes.func,\n    topBarProps: PropTypes.object,\n    children: PropTypes.array\n  };\n\n  state = {};\n\n  renderHeader() {\n    const {onDone, onCancel, topBarProps} = this.props;\n\n    return (\n      <View style={styles.header}>\n        <Text text70 primary onPress={onCancel} accessibilityRole={onCancel ? 'button' : undefined}>\n          {_.get(topBarProps, 'cancelLabel', 'Cancel')}\n        </Text>\n        <Text text70 primary onPress={onDone} accessibilityRole={onDone ? 'button' : undefined}>\n          {_.get(topBarProps, 'doneLabel', 'Done')}\n        </Text>\n      </View>\n    );\n  }\n\n\n  render() {\n    const dialogProps = extractComponentProps(Dialog, this.props);\n    // TODO: should be taken from dialogProps but there's an issue with \"babel-plugin-typescript-to-proptypes\" plugin\n    const {panDirection} = this.props;\n    return (\n      <Dialog {...dialogProps} width=\"100%\" bottom animationConfig={{duration: 300}} panDirection={panDirection}>\n        <View flex bg-white>\n          {this.renderHeader()}\n          <View centerV flex>\n            {this.props.children}\n          </View>\n          <View useSafeArea/>\n        </View>\n      </Dialog>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 44,\n    backgroundColor: Colors.grey80,\n    paddingHorizontal: 17,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n});\n\nexport default PickerDialog;\n"]},"metadata":{},"sourceType":"module"}