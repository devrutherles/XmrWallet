{"ast":null,"code":"import React, { useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\n\nvar nave = require(\"../../assets/icon/nave.png\");\n\nimport { useNavigation } from '@react-navigation/native';\nimport { View, Button, Colors, Avatar, Chip } from 'react-native-ui-lib';\nimport { Header } from 'react-native/Libraries/NewAppScreen';\n\nvar copy = require(\"../../assets/icon/copy.png\");\n\nvar send = require(\"../../assets/icon/send.png\");\n\nvar exchange = require(\"../../assets/icon/exchange.png\");\n\nvar card = require(\"../../assets/icon/card.png\");\n\nvar ButtonSpace = 20;\n\nfunction TopBar() {\n  var _this = this;\n\n  state = {};\n  toggle = false;\n  animatedValue = new Animated.Value(0);\n\n  animate = function animate() {\n    _this.toggle = !_this.toggle;\n    Animated.timing(_this.animatedValue, {\n      toValue: Number(_this.toggle),\n      duration: 300,\n      useNativeDriver: true\n    }).start();\n  };\n\n  var navigation = useNavigation();\n  return React.createElement(View, {\n    row: true,\n    style: {\n      marginTop: 10,\n      marginBottom: 20\n    }\n  }, React.createElement(Chip, {\n    labelStyle: {\n      borderColor: 'gray'\n    },\n    containerStyle: {\n      borderColor: '#f7f9fc',\n      borderBottomRightRadius: 3\n    },\n    height: 8,\n    width: 130,\n    badgeProps: {\n      label: 'A',\n      backgroundColor: 'gray',\n      color: '#1c94f4'\n    },\n    borderRadius: 4,\n    label: 'Star Atlas',\n    backgroundColor: '#f7f9fc'\n  }), React.createElement(Chip, {\n    onPress: function onPress() {\n      return navigation.navigate('Marketplace');\n    },\n    labelStyle: {\n      borderColor: 'gray'\n    },\n    containerStyle: {\n      borderColor: '#f7f9fc',\n      borderBottomRightRadius: 3\n    },\n    height: 6,\n    width: 130,\n    \"marginL-10\": true,\n    borderRadius: 4,\n    iconSource: nave,\n    iconStyle: {\n      width: 20,\n      height: 20\n    },\n    label: 'Marketplace',\n    backgroundColor: '#f7f9fc'\n  }), React.createElement(Avatar, {\n    label: 'SA',\n    badgeProps: {\n      backgroundColor: '#46d169'\n    },\n    animate: true,\n    size: 35,\n    ribbonStyle: {\n      backgroundColor: Colors.purple30\n    },\n    containerStyle: {\n      marginLeft: 80,\n      marginBottom: 2\n    },\n    backgroundColor: '#8dc9f9'\n  }));\n}\n\nexport default TopBar;\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 50\n  },\n  tinyLogo: {\n    width: 170,\n    height: 60\n  },\n  logo: {\n    width: 66,\n    height: 58\n  },\n  termos: {\n    padding: 10\n  },\n  rlogo: {\n    width: 50,\n    height: 50,\n    marginLeft: 40,\n    marginTop: 15\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#ECF0F1'\n  },\n  buttonsContainer: {\n    padding: 10\n  },\n  textStyle: {\n    textAlign: 'center',\n    marginBottom: 8\n  }\n});","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/screen/component/Header.js"],"names":["React","useState","nave","require","useNavigation","View","Button","Colors","Avatar","Chip","Header","copy","send","exchange","card","ButtonSpace","TopBar","state","toggle","animatedValue","Animated","Value","animate","timing","toValue","Number","duration","useNativeDriver","start","navigation","marginTop","marginBottom","borderColor","borderBottomRightRadius","label","backgroundColor","color","navigate","width","height","purple30","marginLeft","styles","StyleSheet","create","container","paddingTop","tinyLogo","logo","termos","padding","rlogo","flex","justifyContent","buttonsContainer","textStyle","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Animated,\n  ScrollView,\n  Image,\n  SafeAreaView,\n  StyleSheet,\n  TouchableOpacity,\n  StatusBar\n\n} from 'react-native';\nconst nave = require('../../assets/icon/nave.png')\nimport { useNavigation } from '@react-navigation/native';\n\nimport {\n  View,\n  Button,\n  Colors,\n  Avatar,\n  Chip,\n\n} from 'react-native-ui-lib';\nimport { Header } from 'react-native/Libraries/NewAppScreen';\nconst copy = require('../../assets/icon/copy.png');\nconst send = require('../../assets/icon/send.png')\nconst exchange = require('../../assets/icon/exchange.png')\nconst card = require('../../assets/icon/card.png')\nconst ButtonSpace = 20;\n\nfunction TopBar() {\n  state = {};\n  toggle = false;\n  animatedValue = new Animated.Value(0);\n\n  animate = () => {\n    this.toggle = !this.toggle;\n    Animated.timing(this.animatedValue, {\n      toValue: Number(this.toggle),\n      duration: 300,\n      useNativeDriver: true\n    }).start();\n  };\n\n  const navigation = useNavigation();\n\n  \n\n\n  return (\n\n\n    <View\n      row\n      style={{\n        marginTop: 10,\n        marginBottom: 20\n      }}>\n\n      <Chip\n        labelStyle={{\n          borderColor: 'gray'\n        }}\n        containerStyle={{\n          borderColor: '#f7f9fc',\n          borderBottomRightRadius: 3\n        }}\n        height={8}\n        width={130}\n        badgeProps={{\n          label: 'A',\n          backgroundColor: 'gray',\n          color: '#1c94f4'\n          \n        }}\n        borderRadius={4}\n        label={'Star Atlas'}\n        backgroundColor={'#f7f9fc'} />\n\n<Chip\nonPress={()=>navigation.navigate('Marketplace')}\n        labelStyle={{\n          borderColor: 'gray'\n        }}\n        containerStyle={{\n          borderColor: '#f7f9fc',\n          borderBottomRightRadius: 3\n        }}\n        height={6}\n        width={130}\n        marginL-10\n        \n        borderRadius={4}\n        iconSource={nave}\n        iconStyle={{width:20,height:20}}\n        label={'Marketplace'}\n        backgroundColor={'#f7f9fc'} />\n\n\n       \n\n\n\n      <Avatar\n        label={'SA'}\n        badgeProps={{ backgroundColor: '#46d169' }}\n        animate\n        size={35}\n        ribbonStyle={{ backgroundColor: Colors.purple30 }}\n\n        containerStyle={{\n          marginLeft: 80,\n          marginBottom: 2\n\n\n        }}\n        backgroundColor={'#8dc9f9'}\n\n\n      />\n\n\n\n    </View>\n\n\n\n\n\n\n  );\n}\n\n\nexport default TopBar;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 50\n  },\n  tinyLogo: {\n    width: 170,\n    height: 60\n  },\n  logo: {\n    width: 66,\n    height: 58\n  },\n  termos: {\n    padding: 10\n  },\n\n  rlogo: {\n    width: 50,\n    height: 50,\n    marginLeft: 40,\n    marginTop: 15\n\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#ECF0F1'\n  },\n  buttonsContainer: {\n    padding: 10\n  },\n  textStyle: {\n    textAlign: 'center',\n    marginBottom: 8\n  }\n});\n"]},"metadata":{},"sourceType":"module"}