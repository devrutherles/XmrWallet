{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onAnimationEnd\", \"enterFrom\", \"exitTo\", \"forwardedRef\", \"style\", \"onLayout\"];\nimport React, { useCallback, useImperativeHandle } from 'react';\nimport Animated from 'react-native-reanimated';\nimport View from \"../../components/view\";\nimport { forwardRef } from \"../../commons/new\";\nimport useHiddenLocation, { Direction } from \"../hooks/useHiddenLocation\";\nimport { TransitionViewAnimationType } from \"./useAnimationEndNotifier\";\nimport useAnimatedTransition from \"./useAnimatedTransition\";\nvar AnimatedView = Animated.createAnimatedComponent(View);\nexport { Direction, TransitionViewAnimationType };\n\nvar TransitionView = function TransitionView(props) {\n  var onAnimationEnd = props.onAnimationEnd,\n      enterFrom = props.enterFrom,\n      exitTo = props.exitTo,\n      forwardedRef = props.forwardedRef,\n      propsStyle = props.style,\n      propsOnLayout = props.onLayout,\n      others = _objectWithoutProperties(props, _excluded);\n\n  var containerRef = React.createRef();\n\n  var _useHiddenLocation = useHiddenLocation({\n    containerRef: containerRef\n  }),\n      hiddenLocationOnLayout = _useHiddenLocation.onLayout,\n      hiddenLocation = _useHiddenLocation.hiddenLocation;\n\n  var _useAnimatedTransitio = useAnimatedTransition({\n    hiddenLocation: hiddenLocation,\n    enterFrom: enterFrom,\n    exitTo: exitTo,\n    onAnimationEnd: onAnimationEnd\n  }),\n      exit = _useAnimatedTransitio.exit,\n      animatedStyle = _useAnimatedTransitio.animatedStyle;\n\n  useImperativeHandle(forwardedRef, function () {\n    return {\n      animateOut: exit\n    };\n  }, [exit]);\n  var onLayout = useCallback(function (event) {\n    hiddenLocationOnLayout(event);\n    propsOnLayout == null ? void 0 : propsOnLayout(event);\n  }, []);\n  return React.createElement(AnimatedView, _extends({}, others, {\n    onLayout: onLayout,\n    style: [propsStyle, animatedStyle],\n    ref: containerRef\n  }));\n};\n\nexport default forwardRef(TransitionView);","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/incubator/TransitionView/index.js"],"names":["React","useCallback","useImperativeHandle","Animated","View","forwardRef","useHiddenLocation","Direction","TransitionViewAnimationType","useAnimatedTransition","AnimatedView","createAnimatedComponent","TransitionView","props","onAnimationEnd","enterFrom","exitTo","forwardedRef","propsStyle","style","propsOnLayout","onLayout","others","containerRef","createRef","hiddenLocationOnLayout","hiddenLocation","exit","animatedStyle","animateOut","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,mBAA7B,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP;AACA,SAASC,UAAT;AACA,OAAOC,iBAAP,IAA4BC,SAA5B;AACA,SAASC,2BAAT;AACA,OAAOC,qBAAP;AACA,IAAMC,YAAY,GAAGP,QAAQ,CAACQ,uBAAT,CAAiCP,IAAjC,CAArB;AACA,SAASG,SAAT,EAAoBC,2BAApB;;AAEA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC9B,MACEC,cADF,GAQID,KARJ,CACEC,cADF;AAAA,MAEEC,SAFF,GAQIF,KARJ,CAEEE,SAFF;AAAA,MAGEC,MAHF,GAQIH,KARJ,CAGEG,MAHF;AAAA,MAIEC,YAJF,GAQIJ,KARJ,CAIEI,YAJF;AAAA,MAKSC,UALT,GAQIL,KARJ,CAKEM,KALF;AAAA,MAMYC,aANZ,GAQIP,KARJ,CAMEQ,QANF;AAAA,MAOKC,MAPL,4BAQIT,KARJ;;AASA,MAAMU,YAAY,GAAGvB,KAAK,CAACwB,SAAN,EAArB;;AACA,2BAGIlB,iBAAiB,CAAC;AACpBiB,IAAAA,YAAY,EAAZA;AADoB,GAAD,CAHrB;AAAA,MACYE,sBADZ,sBACEJ,QADF;AAAA,MAEEK,cAFF,sBAEEA,cAFF;;AAMA,8BAGIjB,qBAAqB,CAAC;AACxBiB,IAAAA,cAAc,EAAdA,cADwB;AAExBX,IAAAA,SAAS,EAATA,SAFwB;AAGxBC,IAAAA,MAAM,EAANA,MAHwB;AAIxBF,IAAAA,cAAc,EAAdA;AAJwB,GAAD,CAHzB;AAAA,MACEa,IADF,yBACEA,IADF;AAAA,MAEEC,aAFF,yBAEEA,aAFF;;AASA1B,EAAAA,mBAAmB,CAACe,YAAD,EAAe;AAAA,WAAO;AACvCY,MAAAA,UAAU,EAAEF;AAD2B,KAAP;AAAA,GAAf,EAGf,CAACA,IAAD,CAHe,CAAnB;AAIA,MAAMN,QAAQ,GAAGpB,WAAW,CAAC,UAAA6B,KAAK,EAAI;AACpCL,IAAAA,sBAAsB,CAACK,KAAD,CAAtB;AACAV,IAAAA,aAAa,QAAb,YAAAA,aAAa,CAAGU,KAAH,CAAb;AACD,GAH2B,EAGzB,EAHyB,CAA5B;AAIA,SAAO,oBAAC,YAAD,eAAkBR,MAAlB;AAA0B,IAAA,QAAQ,EAAED,QAApC;AAA8C,IAAA,KAAK,EAAE,CAACH,UAAD,EAAaU,aAAb,CAArD;AAAkF,IAAA,GAAG,EAAEL;AAAvF,KAAP;AACD,CAnCD;;AAqCA,eAAelB,UAAU,CAACO,cAAD,CAAzB","sourcesContent":["import React, { useCallback, useImperativeHandle } from 'react';\nimport Animated from 'react-native-reanimated';\nimport View from \"../../components/view\";\nimport { forwardRef } from \"../../commons/new\";\nimport useHiddenLocation, { Direction } from \"../hooks/useHiddenLocation\";\nimport { TransitionViewAnimationType } from \"./useAnimationEndNotifier\";\nimport useAnimatedTransition from \"./useAnimatedTransition\";\nconst AnimatedView = Animated.createAnimatedComponent(View);\nexport { Direction, TransitionViewAnimationType }; // TODO: might need to create a file for types and create a fake component for docs\n\nconst TransitionView = props => {\n  const {\n    onAnimationEnd,\n    enterFrom,\n    exitTo,\n    forwardedRef,\n    style: propsStyle,\n    onLayout: propsOnLayout,\n    ...others\n  } = props;\n  const containerRef = React.createRef();\n  const {\n    onLayout: hiddenLocationOnLayout,\n    hiddenLocation\n  } = useHiddenLocation({\n    containerRef\n  });\n  const {\n    exit,\n    animatedStyle\n  } = useAnimatedTransition({\n    hiddenLocation,\n    enterFrom,\n    exitTo,\n    onAnimationEnd\n  });\n  useImperativeHandle(forwardedRef, () => ({\n    animateOut: exit // TODO: should this be renamed as well?\n\n  }), [exit]);\n  const onLayout = useCallback(event => {\n    hiddenLocationOnLayout(event);\n    propsOnLayout?.(event); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return <AnimatedView {...others} onLayout={onLayout} style={[propsStyle, animatedStyle]} ref={containerRef} />;\n};\n\nexport default forwardRef(TransitionView);"]},"metadata":{},"sourceType":"module"}