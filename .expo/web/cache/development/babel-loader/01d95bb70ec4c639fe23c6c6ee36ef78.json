{"ast":null,"code":"import _pt from \"prop-types\";\nimport React, { useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport _ from 'lodash';\nimport Text from \"../../components/text\";\nimport FieldContext from \"./FieldContext\";\n\nvar CharCounter = function CharCounter(_ref) {\n  var maxLength = _ref.maxLength,\n      charCounterStyle = _ref.charCounterStyle;\n\n  var _useContext = useContext(FieldContext),\n      value = _useContext.value;\n\n  if (_.isUndefined(maxLength)) {\n    return null;\n  }\n\n  return React.createElement(Text, {\n    grey30: true,\n    style: [styles.container, charCounterStyle]\n  }, _.size(value) + \"/\" + maxLength);\n};\n\nCharCounter.propTypes = {\n  showCharCounter: _pt.bool,\n  maxLength: _pt.number\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    textAlign: 'right'\n  }\n});\nCharCounter.displayName = 'Incubator.TextField';\nexport default CharCounter;","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/incubator/TextField/CharCounter.js"],"names":["_pt","React","useContext","_","Text","FieldContext","CharCounter","maxLength","charCounterStyle","value","isUndefined","styles","container","size","propTypes","showCharCounter","bool","number","StyleSheet","create","flex","textAlign","displayName"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,IAAP;AACA,OAAOC,YAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAGd;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,gBACI,QADJA,gBACI;;AACJ,oBAEIN,UAAU,CAACG,YAAD,CAFd;AAAA,MACEI,KADF,eACEA,KADF;;AAIA,MAAIN,CAAC,CAACO,WAAF,CAAcH,SAAd,CAAJ,EAA8B;AAC5B,WAAO,IAAP;AACD;;AAED,SAAO,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,KAAK,EAAE,CAACI,MAAM,CAACC,SAAR,EAAmBJ,gBAAnB;AAApB,KACCL,CAAC,CAACU,IAAF,CAAOJ,KAAP,CADD,SACkBF,SADlB,CAAP;AAGD,CAfD;;AAiBAD,WAAW,CAACQ,SAAZ,GAAwB;AAItBC,EAAAA,eAAe,EAAEf,GAAG,CAACgB,IAJC;AAKtBT,EAAAA,SAAS,EAAEP,GAAG,CAACiB;AALO,CAAxB;AAOA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,SAAS,EAAE;AAFF;AADoB,CAAlB,CAAf;AAMAf,WAAW,CAACgB,WAAZ,GAA0B,qBAA1B;AACA,eAAehB,WAAf","sourcesContent":["import _pt from \"prop-types\";\nimport React, { useContext } from 'react';\nimport { StyleSheet } from 'react-native';\nimport _ from 'lodash';\nimport Text from \"../../components/text\";\nimport FieldContext from \"./FieldContext\";\n\nconst CharCounter = ({\n  maxLength,\n  charCounterStyle\n}) => {\n  const {\n    value\n  } = useContext(FieldContext);\n\n  if (_.isUndefined(maxLength)) {\n    return null;\n  }\n\n  return <Text grey30 style={[styles.container, charCounterStyle]}>\n      {`${_.size(value)}/${maxLength}`}\n    </Text>;\n};\n\nCharCounter.propTypes = {\n  /**\n     * Should show a character counter (works only with maxLength)\n     */\n  showCharCounter: _pt.bool,\n  maxLength: _pt.number\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    textAlign: 'right'\n  }\n});\nCharCounter.displayName = 'Incubator.TextField';\nexport default CharCounter;"]},"metadata":{},"sourceType":"module"}