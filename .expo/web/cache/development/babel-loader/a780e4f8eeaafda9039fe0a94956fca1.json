{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React from 'react';\nexport var PageControlPosition;\n\n(function (PageControlPosition) {\n  PageControlPosition[\"OVER\"] = \"over\";\n  PageControlPosition[\"UNDER\"] = \"under\";\n})(PageControlPosition || (PageControlPosition = {}));\n\nvar CarouselTypesForDocs = function (_React$Component) {\n  _inherits(CarouselTypesForDocs, _React$Component);\n\n  var _super = _createSuper(CarouselTypesForDocs);\n\n  function CarouselTypesForDocs() {\n    _classCallCheck(this, CarouselTypesForDocs);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CarouselTypesForDocs, [{\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return CarouselTypesForDocs;\n}(React.Component);\n\nCarouselTypesForDocs.propTypes = {\n  initialPage: _pt.number,\n  pageWidth: _pt.number,\n  pageHeight: _pt.number,\n  itemSpacings: _pt.number,\n  containerMarginHorizontal: _pt.number,\n  containerPaddingVertical: _pt.number,\n  loop: _pt.bool,\n  onChangePage: _pt.func,\n  onScroll: _pt.func,\n  animated: _pt.bool,\n  pageControlPosition: _pt.oneOf([\"over\", \"under\"]),\n  showCounter: _pt.bool,\n  pagingEnabled: _pt.bool,\n  allowAccessibleLayout: _pt.bool,\n  autoplay: _pt.bool,\n  autoplayInterval: _pt.number,\n  horizontal: _pt.oneOfType([_pt.bool, _pt.oneOf([null])])\n};\nCarouselTypesForDocs.displayName = 'Carousel';","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/√Årea de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/carousel/types.js"],"names":["_pt","React","PageControlPosition","CarouselTypesForDocs","Component","propTypes","initialPage","number","pageWidth","pageHeight","itemSpacings","containerMarginHorizontal","containerPaddingVertical","loop","bool","onChangePage","func","onScroll","animated","pageControlPosition","oneOf","showCounter","pagingEnabled","allowAccessibleLayout","autoplay","autoplayInterval","horizontal","oneOfType","displayName"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAIC,mBAAJ;;AAEP,CAAC,UAAUA,mBAAV,EAA+B;AAC9BA,EAAAA,mBAAmB,CAAC,MAAD,CAAnB,GAA8B,MAA9B;AACAA,EAAAA,mBAAmB,CAAC,OAAD,CAAnB,GAA+B,OAA/B;AACD,CAHD,EAGGA,mBAAmB,KAAKA,mBAAmB,GAAG,EAA3B,CAHtB;;IAMMC,oB;;;;;;;;;;;;;WA4FJ,kBAAS;AACP,aAAO,IAAP;AACD;;;;EA9FgCF,KAAK,CAACG,S;;AAAnCD,oB,CACGE,S,GAAY;AAIjBC,EAAAA,WAAW,EAAEN,GAAG,CAACO,MAJA;AASjBC,EAAAA,SAAS,EAAER,GAAG,CAACO,MATE;AAcjBE,EAAAA,UAAU,EAAET,GAAG,CAACO,MAdC;AAmBjBG,EAAAA,YAAY,EAAEV,GAAG,CAACO,MAnBD;AAwBjBI,EAAAA,yBAAyB,EAAEX,GAAG,CAACO,MAxBd;AA8BjBK,EAAAA,wBAAwB,EAAEZ,GAAG,CAACO,MA9Bb;AAmCjBM,EAAAA,IAAI,EAAEb,GAAG,CAACc,IAnCO;AAwCjBC,EAAAA,YAAY,EAAEf,GAAG,CAACgB,IAxCD;AA6CjBC,EAAAA,QAAQ,EAAEjB,GAAG,CAACgB,IA7CG;AAkDjBE,EAAAA,QAAQ,EAAElB,GAAG,CAACc,IAlDG;AAuDjBK,EAAAA,mBAAmB,EAAEnB,GAAG,CAACoB,KAAJ,CAAU,CAAC,MAAD,EAAS,OAAT,CAAV,CAvDJ;AA4DjBC,EAAAA,WAAW,EAAErB,GAAG,CAACc,IA5DA;AAiEjBQ,EAAAA,aAAa,EAAEtB,GAAG,CAACc,IAjEF;AAsEjBS,EAAAA,qBAAqB,EAAEvB,GAAG,CAACc,IAtEV;AA2EjBU,EAAAA,QAAQ,EAAExB,GAAG,CAACc,IA3EG;AAgFjBW,EAAAA,gBAAgB,EAAEzB,GAAG,CAACO,MAhFL;AAsFjBmB,EAAAA,UAAU,EAAE1B,GAAG,CAAC2B,SAAJ,CAAc,CAAC3B,GAAG,CAACc,IAAL,EAAWd,GAAG,CAACoB,KAAJ,CAAU,CAAC,IAAD,CAAV,CAAX,CAAd;AAtFK,C;AADfjB,oB,CA0FGyB,W,GAAc,U","sourcesContent":["import _pt from \"prop-types\";\nimport React from 'react';\nexport let PageControlPosition;\n\n(function (PageControlPosition) {\n  PageControlPosition[\"OVER\"] = \"over\";\n  PageControlPosition[\"UNDER\"] = \"under\";\n})(PageControlPosition || (PageControlPosition = {}));\n\n// @ts-ignore\nclass CarouselTypesForDocs extends React.Component {\n  static propTypes = {\n    /**\n       * the first page to start with\n       */\n    initialPage: _pt.number,\n\n    /**\n       * the page width (all pages should have the same width). Does not work if passing 'loop' prop\n       */\n    pageWidth: _pt.number,\n\n    /**\n       * the page height (all pages should have the same height).\n       */\n    pageHeight: _pt.number,\n\n    /**\n       * the spacing between the items\n       */\n    itemSpacings: _pt.number,\n\n    /**\n       * Horizontal margin for the container\n       */\n    containerMarginHorizontal: _pt.number,\n\n    /**\n       * Vertical padding for the container.\n       * Sometimes needed when there are overflows that are cut in Android.\n       */\n    containerPaddingVertical: _pt.number,\n\n    /**\n       * if true, will have infinite scroll (do not turn on for vertical scrolling)\n       */\n    loop: _pt.bool,\n\n    /**\n       * callback for when page has changed\n       */\n    onChangePage: _pt.func,\n\n    /**\n       * callback for onScroll event of the internal ScrollView\n       */\n    onScroll: _pt.func,\n\n    /**\n       * Should the container be animated (send the animation style via containerStyle)\n       */\n    animated: _pt.bool,\n\n    /**\n       * The position of the PageControl component ['over', 'under'], otherwise it won't display\n       */\n    pageControlPosition: _pt.oneOf([\"over\", \"under\"]),\n\n    /**\n       * whether to show a page counter (will not work with 'pageWidth' prop)\n       */\n    showCounter: _pt.bool,\n\n    /**\n       * will block multiple pages scroll (will not work with 'pageWidth' prop)\n       */\n    pagingEnabled: _pt.bool,\n\n    /**\n       * Whether to layout Carousel for accessibility\n       */\n    allowAccessibleLayout: _pt.bool,\n\n    /**\n       * Whether to switch automatically between the pages\n       */\n    autoplay: _pt.bool,\n\n    /**\n       * the amount of ms to wait before switching to the next page, in case autoplay is on\n       */\n    autoplayInterval: _pt.number,\n\n    /**\n       * When true the scroll view's children are arranged horizontally in a row\n       * instead of vertically in a column. The default value is true.\n       */\n    horizontal: _pt.oneOfType([_pt.bool, _pt.oneOf([null])])\n  };\n  // eslint-disable-line\n  static displayName = 'Carousel';\n\n  render() {\n    return null;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}