{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"onPress\", \"disabled\", \"link\", \"style\", \"testID\", \"animateLayout\", \"modifiers\", \"forwardedRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport React, { PureComponent } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport { Constants } from \"../../helpers\";\nimport { Colors, Typography, BorderRadiuses } from \"../../style\";\nimport { modifiers } from \"../../commons\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport { ButtonSize, ButtonAnimationDirection, ButtonProps, DEFAULT_PROPS } from \"./ButtonTypes\";\nexport { ButtonSize, ButtonAnimationDirection, ButtonProps };\nimport { PADDINGS, HORIZONTAL_PADDINGS, MIN_WIDTH, DEFAULT_SIZE, DISABLED_COLOR } from \"./ButtonConstants\";\nvar extractColorValue = modifiers.extractColorValue,\n    extractTypographyValue = modifiers.extractTypographyValue;\n\nvar Button = function (_PureComponent) {\n  _inherits(Button, _PureComponent);\n\n  var _super = _createSuper(Button);\n\n  function Button(props) {\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      size: undefined\n    };\n    _this.styles = createStyles();\n\n    _this.onLayout = function (event) {\n      var height = event.nativeEvent.layout.height;\n\n      if (_this.props.round) {\n        var width = event.nativeEvent.layout.width;\n        var size = height >= width ? height : width;\n\n        _this.setState({\n          size: size\n        });\n      }\n\n      if (Constants.isAndroid && Platform.Version <= 17) {\n        _this.setState({\n          borderRadius: height / 2\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.animateLayout && !_.isEqual(prevProps, this.props)) {\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n      }\n    }\n  }, {\n    key: \"isOutline\",\n    get: function get() {\n      var _this$props = this.props,\n          outline = _this$props.outline,\n          outlineColor = _this$props.outlineColor;\n      return Boolean(outline || outlineColor);\n    }\n  }, {\n    key: \"isFilled\",\n    get: function get() {\n      var link = this.props.link;\n      return !this.isOutline && !link;\n    }\n  }, {\n    key: \"isIconButton\",\n    get: function get() {\n      var _this$props2 = this.props,\n          iconSource = _this$props2.iconSource,\n          label = _this$props2.label;\n      return iconSource && !label;\n    }\n  }, {\n    key: \"getBackgroundColor\",\n    value: function getBackgroundColor() {\n      var _this$props3 = this.props,\n          themeBackgroundColor = _this$props3.backgroundColor,\n          modifiers = _this$props3.modifiers;\n      var _this$props4 = this.props,\n          disabled = _this$props4.disabled,\n          outline = _this$props4.outline,\n          link = _this$props4.link,\n          disabledBackgroundColor = _this$props4.disabledBackgroundColor,\n          propsBackgroundColor = _this$props4.backgroundColor;\n      var stateBackgroundColor = modifiers.backgroundColor;\n\n      if (!outline && !link) {\n        if (disabled) {\n          return disabledBackgroundColor || DISABLED_COLOR;\n        }\n\n        return propsBackgroundColor || stateBackgroundColor || themeBackgroundColor || Colors.primary;\n      }\n\n      return 'transparent';\n    }\n  }, {\n    key: \"getActiveBackgroundColor\",\n    value: function getActiveBackgroundColor() {\n      var getActiveBackgroundColor = this.props.getActiveBackgroundColor;\n\n      if (getActiveBackgroundColor) {\n        return getActiveBackgroundColor(this.getBackgroundColor(), this.props);\n      }\n    }\n  }, {\n    key: \"getLabelColor\",\n    value: function getLabelColor() {\n      var _this$props5 = this.props,\n          link = _this$props5.link,\n          linkColor = _this$props5.linkColor,\n          outline = _this$props5.outline,\n          outlineColor = _this$props5.outlineColor,\n          disabled = _this$props5.disabled,\n          propsColor = _this$props5.color;\n      var color = Colors.white;\n\n      if (link) {\n        color = linkColor || Colors.primary;\n      } else if (outline) {\n        color = outlineColor || Colors.primary;\n      } else if (this.isIconButton) {\n        color = undefined;\n      }\n\n      if (disabled && (link || outline)) {\n        return DISABLED_COLOR;\n      }\n\n      color = propsColor || extractColorValue(this.props) || color;\n      return color;\n    }\n  }, {\n    key: \"getLabelSizeStyle\",\n    value: function getLabelSizeStyle() {\n      var size = this.props.size || DEFAULT_SIZE;\n      var LABEL_STYLE_BY_SIZE = {};\n      LABEL_STYLE_BY_SIZE[Button.sizes.xSmall] = _objectSpread({}, Typography.text80);\n      LABEL_STYLE_BY_SIZE[Button.sizes.small] = _objectSpread({}, Typography.text80);\n      LABEL_STYLE_BY_SIZE[Button.sizes.medium] = _objectSpread({}, Typography.text80);\n      LABEL_STYLE_BY_SIZE[Button.sizes.large] = {};\n      var labelSizeStyle = LABEL_STYLE_BY_SIZE[size];\n      return labelSizeStyle;\n    }\n  }, {\n    key: \"getContainerSizeStyle\",\n    value: function getContainerSizeStyle() {\n      var _this$props6 = this.props,\n          outline = _this$props6.outline,\n          link = _this$props6.link,\n          avoidMinWidth = _this$props6.avoidMinWidth,\n          avoidInnerPadding = _this$props6.avoidInnerPadding,\n          round = _this$props6.round;\n      var size = this.props.size || DEFAULT_SIZE;\n      var outlineWidth = this.props.outlineWidth || 1;\n      var CONTAINER_STYLE_BY_SIZE = {};\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.xSmall] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.XSMALL\n      } : {\n        paddingVertical: PADDINGS.XSMALL,\n        paddingHorizontal: HORIZONTAL_PADDINGS.XSMALL,\n        minWidth: MIN_WIDTH.XSMALL\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.small] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.SMALL\n      } : {\n        paddingVertical: PADDINGS.SMALL,\n        paddingHorizontal: HORIZONTAL_PADDINGS.SMALL,\n        minWidth: MIN_WIDTH.SMALL\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.medium] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.MEDIUM\n      } : {\n        paddingVertical: PADDINGS.MEDIUM,\n        paddingHorizontal: HORIZONTAL_PADDINGS.MEDIUM,\n        minWidth: MIN_WIDTH.MEDIUM\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.large] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.LARGE\n      } : {\n        paddingVertical: PADDINGS.LARGE,\n        paddingHorizontal: HORIZONTAL_PADDINGS.LARGE,\n        minWidth: MIN_WIDTH.LARGE\n      };\n\n      if (outline) {\n        _.forEach(CONTAINER_STYLE_BY_SIZE, function (style) {\n          if (round) {\n            style.padding -= outlineWidth;\n          } else {\n            style.paddingVertical -= outlineWidth;\n            style.paddingHorizontal -= outlineWidth;\n          }\n        });\n      }\n\n      var containerSizeStyle = CONTAINER_STYLE_BY_SIZE[size];\n\n      if (link || this.isIconButton && !round) {\n        containerSizeStyle.paddingVertical = undefined;\n        containerSizeStyle.paddingHorizontal = undefined;\n        containerSizeStyle.minWidth = undefined;\n      }\n\n      if (avoidMinWidth) {\n        containerSizeStyle.minWidth = undefined;\n      }\n\n      if (avoidInnerPadding) {\n        containerSizeStyle.paddingVertical = undefined;\n        containerSizeStyle.paddingHorizontal = undefined;\n      }\n\n      return containerSizeStyle;\n    }\n  }, {\n    key: \"getOutlineStyle\",\n    value: function getOutlineStyle() {\n      var _this$props7 = this.props,\n          outline = _this$props7.outline,\n          outlineColor = _this$props7.outlineColor,\n          outlineWidth = _this$props7.outlineWidth,\n          link = _this$props7.link,\n          disabled = _this$props7.disabled;\n      var outlineStyle;\n\n      if ((outline || outlineColor) && !link) {\n        outlineStyle = {\n          borderWidth: outlineWidth || 1,\n          borderColor: outlineColor || Colors.primary\n        };\n\n        if (disabled) {\n          outlineStyle.borderColor = Colors.grey70;\n        }\n      }\n\n      return outlineStyle;\n    }\n  }, {\n    key: \"getBorderRadiusStyle\",\n    value: function getBorderRadiusStyle() {\n      var _this$props8 = this.props,\n          link = _this$props8.link,\n          fullWidth = _this$props8.fullWidth,\n          borderRadiusFromProps = _this$props8.borderRadius,\n          modifiers = _this$props8.modifiers;\n\n      if (link || fullWidth || borderRadiusFromProps === 0) {\n        return {\n          borderRadius: 0\n        };\n      }\n\n      var borderRadiusFromState = modifiers.borderRadius;\n      var borderRadius = borderRadiusFromProps || borderRadiusFromState || BorderRadiuses.br100;\n      return {\n        borderRadius: borderRadius\n      };\n    }\n  }, {\n    key: \"getShadowStyle\",\n    value: function getShadowStyle() {\n      var backgroundColor = this.getBackgroundColor();\n      var enableShadow = this.props.enableShadow;\n\n      if (enableShadow) {\n        return [this.styles.shadowStyle, backgroundColor && {\n          shadowColor: backgroundColor\n        }];\n      }\n    }\n  }, {\n    key: \"getIconStyle\",\n    value: function getIconStyle() {\n      var _this$props9 = this.props,\n          disabled = _this$props9.disabled,\n          propsIconStyle = _this$props9.iconStyle,\n          iconOnRight = _this$props9.iconOnRight;\n      var size = this.props.size || DEFAULT_SIZE;\n      var iconStyle = {\n        tintColor: this.getLabelColor()\n      };\n      var marginSide = [Button.sizes.large, Button.sizes.medium].includes(size) ? 8 : 4;\n\n      if (!this.isIconButton) {\n        if (iconOnRight) {\n          iconStyle.marginLeft = marginSide;\n        } else {\n          iconStyle.marginRight = marginSide;\n        }\n      }\n\n      if (disabled && !this.isFilled) {\n        iconStyle.tintColor = Colors.grey60;\n      }\n\n      return [iconStyle, propsIconStyle];\n    }\n  }, {\n    key: \"getAnimationDirectionStyle\",\n    value: function getAnimationDirectionStyle() {\n      var animateTo = this.props.animateTo;\n      var style;\n\n      switch (animateTo) {\n        case 'left':\n          style = {\n            alignSelf: 'flex-start'\n          };\n          break;\n\n        case 'right':\n          style = {\n            alignSelf: 'flex-end'\n          };\n          break;\n\n        default:\n          break;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      var _this$props10 = this.props,\n          iconSource = _this$props10.iconSource,\n          supportRTL = _this$props10.supportRTL;\n\n      if (iconSource) {\n        var iconStyle = this.getIconStyle();\n\n        if (typeof iconSource === 'function') {\n          return iconSource(iconStyle);\n        } else {\n          return React.createElement(Image, {\n            source: iconSource,\n            supportRTL: supportRTL,\n            style: iconStyle\n          });\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel() {\n      var _this$props11 = this.props,\n          label = _this$props11.label,\n          labelStyle = _this$props11.labelStyle,\n          labelProps = _this$props11.labelProps;\n      var typography = extractTypographyValue(this.props);\n      var color = this.getLabelColor();\n      var labelSizeStyle = this.getLabelSizeStyle();\n\n      if (label) {\n        return React.createElement(Text, _extends({\n          style: [this.styles.text, !!color && {\n            color: color\n          }, labelSizeStyle, _objectSpread({}, typography), labelStyle],\n          numberOfLines: 1\n        }, labelProps), label);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props12 = this.props,\n          onPress = _this$props12.onPress,\n          disabled = _this$props12.disabled,\n          link = _this$props12.link,\n          style = _this$props12.style,\n          testID = _this$props12.testID,\n          animateLayout = _this$props12.animateLayout,\n          modifiers = _this$props12.modifiers,\n          forwardedRef = _this$props12.forwardedRef,\n          others = _objectWithoutProperties(_this$props12, _excluded);\n\n      var shadowStyle = this.getShadowStyle();\n      var margins = modifiers.margins;\n      var backgroundColor = this.getBackgroundColor();\n      var outlineStyle = this.getOutlineStyle();\n      var containerSizeStyle = this.getContainerSizeStyle();\n      var borderRadiusStyle = this.getBorderRadiusStyle();\n      return React.createElement(TouchableOpacity, _extends({\n        row: true,\n        centerV: true,\n        style: [this.styles.container, animateLayout && this.getAnimationDirectionStyle(), containerSizeStyle, link && this.styles.innerContainerLink, shadowStyle, margins, backgroundColor && {\n          backgroundColor: backgroundColor\n        }, borderRadiusStyle, outlineStyle, style],\n        activeOpacity: 0.6,\n        activeBackgroundColor: this.getActiveBackgroundColor(),\n        onLayout: this.onLayout,\n        onPress: onPress,\n        disabled: disabled,\n        testID: testID\n      }, others, {\n        ref: forwardedRef\n      }), this.props.children, this.props.iconOnRight ? this.renderLabel() : this.renderIcon(), this.props.iconOnRight ? this.renderIcon() : this.renderLabel());\n    }\n  }]);\n\n  return Button;\n}(PureComponent);\n\nButton.displayName = 'Button';\nButton.defaultProps = DEFAULT_PROPS;\nButton.sizes = ButtonSize;\nButton.animationDirection = ButtonAnimationDirection;\n\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    containerDisabled: {\n      backgroundColor: Colors.grey60\n    },\n    innerContainerLink: {\n      minWidth: undefined,\n      paddingHorizontal: undefined,\n      paddingVertical: undefined,\n      borderRadius: BorderRadiuses.br0,\n      backgroundColor: undefined\n    },\n    shadowStyle: {\n      shadowColor: Colors.blue10,\n      shadowOffset: {\n        height: 5,\n        width: 0\n      },\n      shadowOpacity: 0.35,\n      shadowRadius: 9.5,\n      elevation: 2\n    },\n    text: _objectSpread({\n      backgroundColor: 'transparent',\n      flex: 0,\n      flexDirection: 'row'\n    }, Typography.text70)\n  });\n}\n\nexport { Button };\nexport default asBaseComponent(forwardRef(Button));","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/button/index.js"],"names":["_","React","PureComponent","asBaseComponent","forwardRef","Constants","Colors","Typography","BorderRadiuses","modifiers","TouchableOpacity","Text","Image","ButtonSize","ButtonAnimationDirection","ButtonProps","DEFAULT_PROPS","PADDINGS","HORIZONTAL_PADDINGS","MIN_WIDTH","DEFAULT_SIZE","DISABLED_COLOR","extractColorValue","extractTypographyValue","Button","props","state","size","undefined","styles","createStyles","onLayout","event","height","nativeEvent","layout","round","width","setState","isAndroid","Platform","Version","borderRadius","prevProps","animateLayout","isEqual","LayoutAnimation","configureNext","Presets","easeInEaseOut","outline","outlineColor","Boolean","link","isOutline","iconSource","label","themeBackgroundColor","backgroundColor","disabled","disabledBackgroundColor","propsBackgroundColor","stateBackgroundColor","primary","getActiveBackgroundColor","getBackgroundColor","linkColor","propsColor","color","white","isIconButton","LABEL_STYLE_BY_SIZE","sizes","xSmall","text80","small","medium","large","labelSizeStyle","avoidMinWidth","avoidInnerPadding","outlineWidth","CONTAINER_STYLE_BY_SIZE","padding","XSMALL","paddingVertical","paddingHorizontal","minWidth","SMALL","MEDIUM","LARGE","forEach","style","containerSizeStyle","outlineStyle","borderWidth","borderColor","grey70","fullWidth","borderRadiusFromProps","borderRadiusFromState","br100","enableShadow","shadowStyle","shadowColor","propsIconStyle","iconStyle","iconOnRight","tintColor","getLabelColor","marginSide","includes","marginLeft","marginRight","isFilled","grey60","animateTo","alignSelf","supportRTL","getIconStyle","labelStyle","labelProps","typography","getLabelSizeStyle","text","onPress","testID","forwardedRef","others","getShadowStyle","margins","getOutlineStyle","getContainerSizeStyle","borderRadiusStyle","getBorderRadiusStyle","container","getAnimationDirectionStyle","innerContainerLink","children","renderLabel","renderIcon","displayName","defaultProps","animationDirection","StyleSheet","create","justifyContent","alignItems","containerDisabled","br0","blue10","shadowOffset","shadowOpacity","shadowRadius","elevation","flex","flexDirection","text70"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React, { PureComponent } from 'react';\nimport { Platform, StyleSheet, LayoutAnimation } from 'react-native';\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport { Constants } from \"../../helpers\";\nimport { Colors, Typography, BorderRadiuses } from \"../../style\"; // @ts-ignore need to migrate to commonsNew\n\nimport { modifiers } from \"../../commons\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport { ButtonSize, ButtonAnimationDirection, ButtonProps, DEFAULT_PROPS } from \"./ButtonTypes\";\nexport { ButtonSize, ButtonAnimationDirection, ButtonProps };\nimport { PADDINGS, HORIZONTAL_PADDINGS, MIN_WIDTH, DEFAULT_SIZE, DISABLED_COLOR } from \"./ButtonConstants\";\nconst {\n  extractColorValue,\n  extractTypographyValue\n} = modifiers;\n\nclass Button extends PureComponent {\n  static displayName = 'Button';\n  static defaultProps = DEFAULT_PROPS;\n  static sizes = ButtonSize;\n  static animationDirection = ButtonAnimationDirection; // This redundant constructor for some reason fix tests :/\n  // eslint-disable-next-line\n\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    size: undefined\n  };\n  styles = createStyles();\n\n  componentDidUpdate(prevProps) {\n    if (this.props.animateLayout && !_.isEqual(prevProps, this.props)) {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    }\n  } // This method will be called more than once in case of layout change!\n\n\n  onLayout = event => {\n    const height = event.nativeEvent.layout.height;\n\n    if (this.props.round) {\n      const width = event.nativeEvent.layout.width;\n      const size = height >= width ? height : width;\n      this.setState({\n        size\n      });\n    }\n\n    if (Constants.isAndroid && Platform.Version <= 17) {\n      this.setState({\n        borderRadius: height / 2\n      });\n    }\n  };\n\n  get isOutline() {\n    const {\n      outline,\n      outlineColor\n    } = this.props;\n    return Boolean(outline || outlineColor);\n  }\n\n  get isFilled() {\n    const {\n      link\n    } = this.props;\n    return !this.isOutline && !link;\n  }\n\n  get isIconButton() {\n    const {\n      iconSource,\n      label\n    } = this.props;\n    return iconSource && !label;\n  }\n\n  getBackgroundColor() {\n    const {\n      backgroundColor: themeBackgroundColor,\n      modifiers\n    } = this.props;\n    const {\n      disabled,\n      outline,\n      link,\n      disabledBackgroundColor,\n      backgroundColor: propsBackgroundColor\n    } = this.props;\n    const {\n      backgroundColor: stateBackgroundColor\n    } = modifiers;\n\n    if (!outline && !link) {\n      if (disabled) {\n        return disabledBackgroundColor || DISABLED_COLOR;\n      }\n\n      return propsBackgroundColor || stateBackgroundColor || themeBackgroundColor || Colors.primary;\n    }\n\n    return 'transparent';\n  }\n\n  getActiveBackgroundColor() {\n    const {\n      getActiveBackgroundColor\n    } = this.props;\n\n    if (getActiveBackgroundColor) {\n      return getActiveBackgroundColor(this.getBackgroundColor(), this.props);\n    }\n  }\n\n  getLabelColor() {\n    const {\n      link,\n      linkColor,\n      outline,\n      outlineColor,\n      disabled,\n      color: propsColor\n    } = this.props;\n    let color = Colors.white;\n\n    if (link) {\n      color = linkColor || Colors.primary;\n    } else if (outline) {\n      color = outlineColor || Colors.primary;\n    } else if (this.isIconButton) {\n      color = undefined; // Colors.grey10;\n    }\n\n    if (disabled && (link || outline)) {\n      return DISABLED_COLOR;\n    }\n\n    color = propsColor || extractColorValue(this.props) || color;\n    return color;\n  }\n\n  getLabelSizeStyle() {\n    const size = this.props.size || DEFAULT_SIZE;\n    const LABEL_STYLE_BY_SIZE = {};\n    LABEL_STYLE_BY_SIZE[Button.sizes.xSmall] = { ...Typography.text80\n    };\n    LABEL_STYLE_BY_SIZE[Button.sizes.small] = { ...Typography.text80\n    };\n    LABEL_STYLE_BY_SIZE[Button.sizes.medium] = { ...Typography.text80\n    };\n    LABEL_STYLE_BY_SIZE[Button.sizes.large] = {};\n    const labelSizeStyle = LABEL_STYLE_BY_SIZE[size];\n    return labelSizeStyle;\n  }\n\n  getContainerSizeStyle() {\n    const {\n      outline,\n      link,\n      avoidMinWidth,\n      avoidInnerPadding,\n      round\n    } = this.props;\n    const size = this.props.size || DEFAULT_SIZE;\n    const outlineWidth = this.props.outlineWidth || 1;\n    const CONTAINER_STYLE_BY_SIZE = {};\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.xSmall] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.XSMALL\n    } : {\n      paddingVertical: PADDINGS.XSMALL,\n      paddingHorizontal: HORIZONTAL_PADDINGS.XSMALL,\n      minWidth: MIN_WIDTH.XSMALL\n    };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.small] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.SMALL\n    } : {\n      paddingVertical: PADDINGS.SMALL,\n      paddingHorizontal: HORIZONTAL_PADDINGS.SMALL,\n      minWidth: MIN_WIDTH.SMALL\n    };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.medium] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.MEDIUM\n    } : {\n      paddingVertical: PADDINGS.MEDIUM,\n      paddingHorizontal: HORIZONTAL_PADDINGS.MEDIUM,\n      minWidth: MIN_WIDTH.MEDIUM\n    };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.large] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.LARGE\n    } : {\n      paddingVertical: PADDINGS.LARGE,\n      paddingHorizontal: HORIZONTAL_PADDINGS.LARGE,\n      minWidth: MIN_WIDTH.LARGE\n    };\n\n    if (outline) {\n      _.forEach(CONTAINER_STYLE_BY_SIZE, style => {\n        if (round) {\n          style.padding -= outlineWidth; // eslint-disable-line\n        } else {\n          style.paddingVertical -= outlineWidth; // eslint-disable-line\n\n          style.paddingHorizontal -= outlineWidth; // eslint-disable-line\n        }\n      });\n    }\n\n    const containerSizeStyle = CONTAINER_STYLE_BY_SIZE[size];\n\n    if (link || this.isIconButton && !round) {\n      containerSizeStyle.paddingVertical = undefined;\n      containerSizeStyle.paddingHorizontal = undefined;\n      containerSizeStyle.minWidth = undefined;\n    }\n\n    if (avoidMinWidth) {\n      containerSizeStyle.minWidth = undefined;\n    }\n\n    if (avoidInnerPadding) {\n      containerSizeStyle.paddingVertical = undefined;\n      containerSizeStyle.paddingHorizontal = undefined;\n    }\n\n    return containerSizeStyle;\n  }\n\n  getOutlineStyle() {\n    const {\n      outline,\n      outlineColor,\n      outlineWidth,\n      link,\n      disabled\n    } = this.props;\n    let outlineStyle;\n\n    if ((outline || outlineColor) && !link) {\n      outlineStyle = {\n        borderWidth: outlineWidth || 1,\n        borderColor: outlineColor || Colors.primary\n      };\n\n      if (disabled) {\n        outlineStyle.borderColor = Colors.grey70;\n      }\n    }\n\n    return outlineStyle;\n  }\n\n  getBorderRadiusStyle() {\n    const {\n      link,\n      fullWidth,\n      borderRadius: borderRadiusFromProps,\n      modifiers\n    } = this.props;\n\n    if (link || fullWidth || borderRadiusFromProps === 0) {\n      return {\n        borderRadius: 0\n      };\n    }\n\n    const {\n      borderRadius: borderRadiusFromState\n    } = modifiers;\n    const borderRadius = borderRadiusFromProps || borderRadiusFromState || BorderRadiuses.br100;\n    return {\n      borderRadius\n    };\n  }\n\n  getShadowStyle() {\n    const backgroundColor = this.getBackgroundColor();\n    const {\n      enableShadow\n    } = this.props;\n\n    if (enableShadow) {\n      return [this.styles.shadowStyle, backgroundColor && {\n        shadowColor: backgroundColor\n      }];\n    }\n  }\n\n  getIconStyle() {\n    const {\n      disabled,\n      iconStyle: propsIconStyle,\n      iconOnRight\n    } = this.props;\n    const size = this.props.size || DEFAULT_SIZE;\n    const iconStyle = {\n      tintColor: this.getLabelColor()\n    };\n    const marginSide = [Button.sizes.large, Button.sizes.medium].includes(size) ? 8 : 4;\n\n    if (!this.isIconButton) {\n      if (iconOnRight) {\n        iconStyle.marginLeft = marginSide;\n      } else {\n        iconStyle.marginRight = marginSide;\n      }\n    }\n\n    if (disabled && !this.isFilled) {\n      iconStyle.tintColor = Colors.grey60;\n    }\n\n    return [iconStyle, propsIconStyle];\n  }\n\n  getAnimationDirectionStyle() {\n    const {\n      animateTo\n    } = this.props;\n    let style;\n\n    switch (animateTo) {\n      case 'left':\n        style = {\n          alignSelf: 'flex-start'\n        };\n        break;\n\n      case 'right':\n        style = {\n          alignSelf: 'flex-end'\n        };\n        break;\n\n      default:\n        // 'center' is the default\n        break;\n    }\n\n    return style;\n  }\n\n  renderIcon() {\n    const {\n      iconSource,\n      supportRTL\n    } = this.props;\n\n    if (iconSource) {\n      const iconStyle = this.getIconStyle();\n\n      if (typeof iconSource === 'function') {\n        return iconSource(iconStyle);\n      } else {\n        return <Image source={iconSource} supportRTL={supportRTL} style={iconStyle} />;\n      }\n    }\n\n    return null;\n  }\n\n  renderLabel() {\n    const {\n      label,\n      labelStyle,\n      labelProps\n    } = this.props;\n    const typography = extractTypographyValue(this.props);\n    const color = this.getLabelColor();\n    const labelSizeStyle = this.getLabelSizeStyle();\n\n    if (label) {\n      return <Text style={[this.styles.text, !!color && {\n        color\n      }, labelSizeStyle, { ...typography\n      }, labelStyle]} numberOfLines={1} {...labelProps}>\n          {label}\n        </Text>;\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      onPress,\n      disabled,\n      link,\n      style,\n      testID,\n      animateLayout,\n      modifiers,\n      forwardedRef,\n      ...others\n    } = this.props;\n    const shadowStyle = this.getShadowStyle();\n    const {\n      margins\n    } = modifiers;\n    const backgroundColor = this.getBackgroundColor();\n    const outlineStyle = this.getOutlineStyle();\n    const containerSizeStyle = this.getContainerSizeStyle();\n    const borderRadiusStyle = this.getBorderRadiusStyle();\n    return <TouchableOpacity row centerV style={[this.styles.container, animateLayout && this.getAnimationDirectionStyle(), containerSizeStyle, link && this.styles.innerContainerLink, shadowStyle, margins, backgroundColor && {\n      backgroundColor\n    }, borderRadiusStyle, outlineStyle, style]} activeOpacity={0.6} activeBackgroundColor={this.getActiveBackgroundColor()} onLayout={this.onLayout} onPress={onPress} disabled={disabled} testID={testID} {...others} ref={forwardedRef}>\n        {this.props.children}\n        {this.props.iconOnRight ? this.renderLabel() : this.renderIcon()}\n        {this.props.iconOnRight ? this.renderIcon() : this.renderLabel()}\n      </TouchableOpacity>;\n  }\n\n}\n\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    containerDisabled: {\n      backgroundColor: Colors.grey60\n    },\n    innerContainerLink: {\n      minWidth: undefined,\n      paddingHorizontal: undefined,\n      paddingVertical: undefined,\n      borderRadius: BorderRadiuses.br0,\n      backgroundColor: undefined\n    },\n    shadowStyle: {\n      shadowColor: Colors.blue10,\n      shadowOffset: {\n        height: 5,\n        width: 0\n      },\n      shadowOpacity: 0.35,\n      shadowRadius: 9.5,\n      elevation: 2\n    },\n    text: {\n      backgroundColor: 'transparent',\n      flex: 0,\n      flexDirection: 'row',\n      ...Typography.text70\n    }\n  });\n}\n\nexport { Button }; // For tests\n\nexport default asBaseComponent(forwardRef(Button));"]},"metadata":{},"sourceType":"module"}