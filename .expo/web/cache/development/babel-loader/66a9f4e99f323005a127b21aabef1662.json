{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport _ from 'lodash';\nimport { asBaseComponent } from \"../../commons/new\";\nimport GradientSlider from \"./GradientSlider\";\nimport SliderGroup from \"./context/SliderGroup\";\nimport Text from \"../text\";\n\nvar ColorSliderGroup = function (_PureComponent) {\n  _inherits(ColorSliderGroup, _PureComponent);\n\n  var _super = _createSuper(ColorSliderGroup);\n\n  function ColorSliderGroup() {\n    var _this;\n\n    _classCallCheck(this, ColorSliderGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      initialColor: _this.props.initialColor\n    };\n\n    _this.onValueChange = function (value) {\n      _.invoke(_this.props, 'onValueChange', value);\n    };\n\n    _this.renderSlider = function (type) {\n      var _this$props = _this.props,\n          sliderContainerStyle = _this$props.sliderContainerStyle,\n          showLabels = _this$props.showLabels,\n          labelsStyle = _this$props.labelsStyle,\n          accessible = _this$props.accessible,\n          labels = _this$props.labels;\n      return React.createElement(React.Fragment, null, showLabels && labels && React.createElement(Text, {\n        grey30: true,\n        text80: true,\n        style: labelsStyle,\n        accessible: accessible\n      }, labels[type]), React.createElement(GradientSlider, {\n        color: _this.props.initialColor,\n        type: type,\n        containerStyle: sliderContainerStyle,\n        accessible: accessible\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(ColorSliderGroup, [{\n    key: \"render\",\n    value: function render() {\n      var containerStyle = this.props.containerStyle;\n      var initialColor = this.state.initialColor;\n      return React.createElement(SliderGroup, {\n        style: containerStyle,\n        color: initialColor,\n        onValueChange: this.onValueChange\n      }, this.renderSlider(GradientSlider.types.HUE), this.renderSlider(GradientSlider.types.LIGHTNESS), this.renderSlider(GradientSlider.types.SATURATION));\n    }\n  }]);\n\n  return ColorSliderGroup;\n}(PureComponent);\n\nColorSliderGroup.propTypes = {\n  initialColor: _pt.string.isRequired,\n  onValueChange: _pt.func,\n  showLabels: _pt.bool,\n  labels: _pt.objectOf(_pt.string),\n  accessible: _pt.bool\n};\nColorSliderGroup.displayName = 'ColorSliderGroup';\nColorSliderGroup.defaultProps = {\n  labels: {\n    hue: 'Hue',\n    lightness: 'Lightness',\n    saturation: 'Saturation'\n  }\n};\n\nColorSliderGroup.getDerivedStateFromProps = function (nextProps, prevState) {\n  if (prevState.initialColor !== nextProps.initialColor) {\n    return {\n      initialColor: nextProps.initialColor\n    };\n  }\n\n  return null;\n};\n\nexport default asBaseComponent(ColorSliderGroup);","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/slider/ColorSliderGroup.js"],"names":["_pt","React","PureComponent","_","asBaseComponent","GradientSlider","SliderGroup","Text","ColorSliderGroup","state","initialColor","props","onValueChange","value","invoke","renderSlider","type","sliderContainerStyle","showLabels","labelsStyle","accessible","labels","containerStyle","types","HUE","LIGHTNESS","SATURATION","propTypes","string","isRequired","func","bool","objectOf","displayName","defaultProps","hue","lightness","saturation","getDerivedStateFromProps","nextProps","prevState"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,eAAT;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,IAAP;;IAOMC,gB;;;;;;;;;;;;;;;UAoCJC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE,MAAKC,KAAL,CAAWD;AADnB,K;;UAYRE,a,GAAgB,UAAAC,KAAK,EAAI;AACvBV,MAAAA,CAAC,CAACW,MAAF,CAAS,MAAKH,KAAd,EAAqB,eAArB,EAAsCE,KAAtC;AACD,K;;UACDE,Y,GAAe,UAAAC,IAAI,EAAI;AACrB,wBAMI,MAAKL,KANT;AAAA,UACEM,oBADF,eACEA,oBADF;AAAA,UAEEC,UAFF,eAEEA,UAFF;AAAA,UAGEC,WAHF,eAGEA,WAHF;AAAA,UAIEC,UAJF,eAIEA,UAJF;AAAA,UAKEC,MALF,eAKEA,MALF;AAOA,aAAO,0CACFH,UAAU,IAAIG,MAAd,IAAwB,oBAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAa,QAAA,MAAM,MAAnB;AAAoB,QAAA,KAAK,EAAEF,WAA3B;AAAwC,QAAA,UAAU,EAAEC;AAApD,SACpBC,MAAM,CAACL,IAAD,CADc,CADtB,EAIH,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAE,MAAKL,KAAL,CAAWD,YAAlC;AAAgD,QAAA,IAAI,EAAEM,IAAtD;AAA4D,QAAA,cAAc,EAAEC,oBAA5E;AAAkG,QAAA,UAAU,EAAEG;AAA9G,QAJG,CAAP;AAMD,K;;;;;;;WAED,kBAAS;AACP,UACEE,cADF,GAEI,KAAKX,KAFT,CACEW,cADF;AAGA,UACEZ,YADF,GAEI,KAAKD,KAFT,CACEC,YADF;AAGA,aAAO,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAEY,cAApB;AAAoC,QAAA,KAAK,EAAEZ,YAA3C;AAAyD,QAAA,aAAa,EAAE,KAAKE;AAA7E,SACF,KAAKG,YAAL,CAAkBV,cAAc,CAACkB,KAAf,CAAqBC,GAAvC,CADE,EAEF,KAAKT,YAAL,CAAkBV,cAAc,CAACkB,KAAf,CAAqBE,SAAvC,CAFE,EAGF,KAAKV,YAAL,CAAkBV,cAAc,CAACkB,KAAf,CAAqBG,UAAvC,CAHE,CAAP;AAKD;;;;EA/E4BxB,a;;AAAzBM,gB,CACGmB,S,GAAY;AAIjBjB,EAAAA,YAAY,EAAEV,GAAG,CAAC4B,MAAJ,CAAWC,UAJR;AASjBjB,EAAAA,aAAa,EAAEZ,GAAG,CAAC8B,IATF;AAcjBZ,EAAAA,UAAU,EAAElB,GAAG,CAAC+B,IAdC;AAoBjBV,EAAAA,MAAM,EAAErB,GAAG,CAACgC,QAAJ,CAAahC,GAAG,CAAC4B,MAAjB,CApBS;AAyBjBR,EAAAA,UAAU,EAAEpB,GAAG,CAAC+B;AAzBC,C;AADfvB,gB,CA4BGyB,W,GAAc,kB;AA5BjBzB,gB,CA6BG0B,Y,GAAe;AACpBb,EAAAA,MAAM,EAAE;AACNc,IAAAA,GAAG,EAAE,KADC;AAENC,IAAAA,SAAS,EAAE,WAFL;AAGNC,IAAAA,UAAU,EAAE;AAHN;AADY,C;;AA7BlB7B,gB,CAuCG8B,wB,GAA2B,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1D,MAAIA,SAAS,CAAC9B,YAAV,KAA2B6B,SAAS,CAAC7B,YAAzC,EAAuD;AACrD,WAAO;AACLA,MAAAA,YAAY,EAAE6B,SAAS,CAAC7B;AADnB,KAAP;AAGD;;AAED,SAAO,IAAP;AACD,C;;AAoCH,eAAeN,eAAe,CAACI,gBAAD,CAA9B","sourcesContent":["import _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport _ from 'lodash';\nimport { asBaseComponent } from \"../../commons/new\";\nimport GradientSlider from \"./GradientSlider\";\nimport SliderGroup from \"./context/SliderGroup\";\nimport Text from \"../text\";\n\n/**\n * @description: A Gradient Slider component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SliderScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/ColorSliderGroup/ColorSliderGroup.gif?raw=true\n */\nclass ColorSliderGroup extends PureComponent {\n  static propTypes = {\n    /**\n         * The gradient color\n         */\n    initialColor: _pt.string.isRequired,\n\n    /**\n         * Callback for onValueChange returns the new hex color\n         */\n    onValueChange: _pt.func,\n\n    /**\n         * Show the sliders labels (defaults are: Hue, Lightness, Saturation)\n         */\n    showLabels: _pt.bool,\n\n    /**\n         * In case you would like to change the default labels (translations etc.), you can provide\n         * this prop with a map to the relevant labels ({hue: ..., lightness: ..., saturation: ...}).\n         */\n    labels: _pt.objectOf(_pt.string),\n\n    /**\n         * If true the component will have accessibility features enabled\n         */\n    accessible: _pt.bool\n  };\n  static displayName = 'ColorSliderGroup';\n  static defaultProps = {\n    labels: {\n      hue: 'Hue',\n      lightness: 'Lightness',\n      saturation: 'Saturation'\n    }\n  };\n  state = {\n    initialColor: this.props.initialColor\n  };\n  static getDerivedStateFromProps = (nextProps, prevState) => {\n    if (prevState.initialColor !== nextProps.initialColor) {\n      return {\n        initialColor: nextProps.initialColor\n      };\n    }\n\n    return null;\n  };\n  onValueChange = value => {\n    _.invoke(this.props, 'onValueChange', value);\n  };\n  renderSlider = type => {\n    const {\n      sliderContainerStyle,\n      showLabels,\n      labelsStyle,\n      accessible,\n      labels\n    } = this.props;\n    return <>\n        {showLabels && labels && <Text grey30 text80 style={labelsStyle} accessible={accessible}>\n            {labels[type]}\n          </Text>}\n        <GradientSlider color={this.props.initialColor} type={type} containerStyle={sliderContainerStyle} accessible={accessible} />\n      </>;\n  };\n\n  render() {\n    const {\n      containerStyle\n    } = this.props;\n    const {\n      initialColor\n    } = this.state;\n    return <SliderGroup style={containerStyle} color={initialColor} onValueChange={this.onValueChange}>\n        {this.renderSlider(GradientSlider.types.HUE)}\n        {this.renderSlider(GradientSlider.types.LIGHTNESS)}\n        {this.renderSlider(GradientSlider.types.SATURATION)}\n      </SliderGroup>;\n  }\n\n}\n\nexport default asBaseComponent(ColorSliderGroup);"]},"metadata":{},"sourceType":"module"}