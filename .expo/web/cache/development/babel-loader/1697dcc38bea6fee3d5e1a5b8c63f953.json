{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport _ from 'lodash';\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport { Colors } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport View from \"../view\";\nvar MAX_SHOWN_PAGES = 7;\nvar NUM_LARGE_INDICATORS = 3;\nvar DEFAULT_INDICATOR_COLOR = Colors.primary;\n\nfunction getColorStyle(isCurrentPage, color, inactiveColor) {\n  var activeColor = color || DEFAULT_INDICATOR_COLOR;\n  return {\n    borderColor: isCurrentPage ? activeColor : inactiveColor || activeColor,\n    backgroundColor: isCurrentPage ? activeColor : inactiveColor || 'transparent'\n  };\n}\n\nfunction getSizeStyle(size, index, currentPage, enlargeActive) {\n  var temp = enlargeActive ? index === currentPage ? size + 2 : size : size;\n  return {\n    width: temp,\n    height: temp,\n    borderRadius: temp / 2\n  };\n}\n\nfunction getNumberOfPagesShown(props) {\n  return Math.min(MAX_SHOWN_PAGES, props.numOfPages);\n}\n\nvar PageControl = function (_PureComponent) {\n  _inherits(PageControl, _PureComponent);\n\n  var _super = _createSuper(PageControl);\n\n  function PageControl(props) {\n    var _this;\n\n    _classCallCheck(this, PageControl);\n\n    _this = _super.call(this, props);\n\n    _this.onPagePress = function (_ref) {\n      var index = _ref.customValue;\n      PageControl.animate(_this.props);\n      _this.props.onPagePress == null ? void 0 : _this.props.onPagePress(index);\n    };\n\n    _this.state = {\n      numOfPagesShown: getNumberOfPagesShown(props),\n      largeIndicatorsOffset: 0,\n      pagesOffset: 0,\n      prevPage: undefined\n    };\n\n    if (Array.isArray(props.size)) {\n      if (props.size[0] >= props.size[1] || props.size[1] >= props.size[2]) {\n        console.warn('It is recommended that largeSize > mediumSize > smallSize, currently: smallSize=', props.size[0], 'mediumSize=', props.size[1], 'largeSize=', props.size[2]);\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(PageControl, [{\n    key: \"getSize\",\n    value: function getSize(index) {\n      var largeIndicatorsOffset = this.state.largeIndicatorsOffset;\n      var numOfPages = this.props.numOfPages;\n      var mediumSize,\n          smallSize,\n          _this$props$size = this.props.size,\n          size = _this$props$size === void 0 ? PageControl.DEFAULT_SIZE : _this$props$size;\n\n      if (Array.isArray(size)) {\n        smallSize = size[0];\n        mediumSize = size[1];\n        size = size[2];\n      } else {\n        mediumSize = size * 2 / 3;\n        smallSize = size / 3;\n      }\n\n      if (index < 0 || index > numOfPages - 1) {\n        return undefined;\n      } else if (index >= largeIndicatorsOffset && index < largeIndicatorsOffset + NUM_LARGE_INDICATORS) {\n        return size;\n      } else if (index === largeIndicatorsOffset - 1 || index === largeIndicatorsOffset + NUM_LARGE_INDICATORS) {\n        return mediumSize;\n      } else if (index === largeIndicatorsOffset - 2 || index === largeIndicatorsOffset + NUM_LARGE_INDICATORS + 1) {\n        return smallSize;\n      }\n    }\n  }, {\n    key: \"renderIndicator\",\n    value: function renderIndicator(index, size, enlargeActive) {\n      var _this$props = this.props,\n          currentPage = _this$props.currentPage,\n          color = _this$props.color,\n          inactiveColor = _this$props.inactiveColor,\n          onPagePress = _this$props.onPagePress,\n          _this$props$spacing = _this$props.spacing,\n          spacing = _this$props$spacing === void 0 ? PageControl.DEFAULT_SPACING : _this$props$spacing;\n      return React.createElement(TouchableOpacity, {\n        customValue: index,\n        onPress: onPagePress && this.onPagePress,\n        key: index,\n        style: [styles.pageIndicator, {\n          marginHorizontal: spacing / 2\n        }, getColorStyle(index === currentPage, color, inactiveColor), getSizeStyle(size, index, currentPage, enlargeActive)]\n      });\n    }\n  }, {\n    key: \"renderDifferentSizeIndicators\",\n    value: function renderDifferentSizeIndicators() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          numOfPagesShown = _this$state.numOfPagesShown,\n          pagesOffset = _this$state.pagesOffset;\n      return _.map(_.times(numOfPagesShown), function (index) {\n        var adjustedIndex = index + pagesOffset;\n\n        var adjustedSize = _this2.getSize(adjustedIndex);\n\n        if (adjustedSize) {\n          return _this2.renderIndicator(adjustedIndex, adjustedSize, false);\n        } else {\n          return null;\n        }\n      });\n    }\n  }, {\n    key: \"renderSameSizeIndicators\",\n    value: function renderSameSizeIndicators() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          numOfPages = _this$props2.numOfPages,\n          _this$props2$size = _this$props2.size,\n          sizeFromProps = _this$props2$size === void 0 ? PageControl.DEFAULT_SIZE : _this$props2$size,\n          enlargeActive = _this$props2.enlargeActive;\n      var size = Array.isArray(sizeFromProps) ? sizeFromProps[2] : sizeFromProps;\n      return _.map(_.times(numOfPages), function (index) {\n        return _this3.renderIndicator(index, size, enlargeActive);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          containerStyle = _this$props3.containerStyle,\n          testID = _this$props3.testID;\n      return React.createElement(View, {\n        style: [styles.container, containerStyle],\n        inaccessible: true,\n        testID: testID\n      }, PageControl.showLimitedVersion(this.props) ? this.renderDifferentSizeIndicators() : this.renderSameSizeIndicators());\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var currentPage = nextProps.currentPage;\n      var prevLargeIndicatorsOffset = prevState.largeIndicatorsOffset,\n          prevPage = prevState.prevPage;\n      var newState = {};\n\n      if (currentPage !== prevPage) {\n        newState.prevPage = currentPage;\n\n        if (currentPage >= prevLargeIndicatorsOffset + NUM_LARGE_INDICATORS) {\n          PageControl.animate(nextProps);\n          newState.pagesOffset = Math.max(0, currentPage - NUM_LARGE_INDICATORS - 1);\n          newState.largeIndicatorsOffset = currentPage - NUM_LARGE_INDICATORS + 1;\n        } else if (currentPage < prevLargeIndicatorsOffset) {\n          PageControl.animate(nextProps);\n          newState.pagesOffset = Math.max(0, currentPage - 2);\n          newState.largeIndicatorsOffset = currentPage;\n        }\n      }\n\n      return _.isEmpty(newState) ? null : newState;\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(props) {\n      if (PageControl.showLimitedVersion(props)) {\n        LayoutAnimation.configureNext(_objectSpread(_objectSpread({}, LayoutAnimation.Presets.linear), {}, {\n          duration: 100\n        }));\n      }\n    }\n  }, {\n    key: \"showLimitedVersion\",\n    value: function showLimitedVersion(_ref2) {\n      var limitShownPages = _ref2.limitShownPages,\n          numOfPages = _ref2.numOfPages;\n      return limitShownPages && numOfPages > 5;\n    }\n  }]);\n\n  return PageControl;\n}(PureComponent);\n\nPageControl.propTypes = {\n  limitShownPages: _pt.bool,\n  numOfPages: _pt.number.isRequired,\n  currentPage: _pt.number.isRequired,\n  onPagePress: _pt.func,\n  color: _pt.string,\n  inactiveColor: _pt.string,\n  enlargeActive: _pt.bool,\n  spacing: _pt.number,\n  testID: _pt.string\n};\nPageControl.displayName = 'PageControl';\nPageControl.DEFAULT_SIZE = 10;\nPageControl.DEFAULT_SPACING = 4;\nPageControl.defaultProps = {\n  enlargeActive: false\n};\nexport default asBaseComponent(forwardRef(PageControl));\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  pageIndicator: {\n    backgroundColor: 'transparent',\n    borderWidth: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/pageControl/index.js"],"names":["_pt","_","React","PureComponent","asBaseComponent","forwardRef","Colors","TouchableOpacity","View","MAX_SHOWN_PAGES","NUM_LARGE_INDICATORS","DEFAULT_INDICATOR_COLOR","primary","getColorStyle","isCurrentPage","color","inactiveColor","activeColor","borderColor","backgroundColor","getSizeStyle","size","index","currentPage","enlargeActive","temp","width","height","borderRadius","getNumberOfPagesShown","props","Math","min","numOfPages","PageControl","onPagePress","customValue","animate","state","numOfPagesShown","largeIndicatorsOffset","pagesOffset","prevPage","undefined","Array","isArray","console","warn","mediumSize","smallSize","DEFAULT_SIZE","spacing","DEFAULT_SPACING","styles","pageIndicator","marginHorizontal","map","times","adjustedIndex","adjustedSize","getSize","renderIndicator","sizeFromProps","containerStyle","testID","container","showLimitedVersion","renderDifferentSizeIndicators","renderSameSizeIndicators","nextProps","prevState","prevLargeIndicatorsOffset","newState","max","isEmpty","LayoutAnimation","configureNext","Presets","linear","duration","limitShownPages","propTypes","bool","number","isRequired","func","string","displayName","defaultProps","StyleSheet","create","flexDirection","alignItems","justifyContent","borderWidth"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport _ from 'lodash';\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, LayoutAnimation } from 'react-native';\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport { Colors } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport View from \"../view\";\nconst MAX_SHOWN_PAGES = 7;\nconst NUM_LARGE_INDICATORS = 3;\nconst DEFAULT_INDICATOR_COLOR = Colors.primary;\n\nfunction getColorStyle(isCurrentPage, color, inactiveColor) {\n  const activeColor = color || DEFAULT_INDICATOR_COLOR;\n  return {\n    borderColor: isCurrentPage ? activeColor : inactiveColor || activeColor,\n    backgroundColor: isCurrentPage ? activeColor : inactiveColor || 'transparent'\n  };\n}\n\nfunction getSizeStyle(size, index, currentPage, enlargeActive) {\n  const temp = enlargeActive ? index === currentPage ? size + 2 : size : size;\n  return {\n    width: temp,\n    height: temp,\n    borderRadius: temp / 2\n  };\n}\n\nfunction getNumberOfPagesShown(props) {\n  return Math.min(MAX_SHOWN_PAGES, props.numOfPages);\n}\n\n/**\n * @description: Page indicator, typically used in paged scroll-views\n * @gif: https://user-images.githubusercontent.com/1780255/107114259-2e278d00-686d-11eb-866c-59f3d410d6c3.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PageControlScreen.tsx\n */\nclass PageControl extends PureComponent {\n  static propTypes = {\n    /**\n       * Limit the number of page indicators shown.\n       * enlargeActive prop is disabled in this state,\n       * When set to true there will be maximum of 7 shown.\n       * Only relevant when numOfPages > 5.\n       */\n    limitShownPages: _pt.bool,\n\n    /**\n       * Total number of pages\n       */\n    numOfPages: _pt.number.isRequired,\n\n    /**\n       * Zero-based index of the current page\n       */\n    currentPage: _pt.number.isRequired,\n\n    /**\n       * Action handler for clicking on a page indicator\n       */\n    onPagePress: _pt.func,\n\n    /**\n       * Color of the selected page dot and, if inactiveColor not passed, the border of the not selected pages\n       */\n    color: _pt.string,\n\n    /**\n       * Color of the unselected page dots and the border of the not selected pages\n       */\n    inactiveColor: _pt.string,\n\n    /**\n       * Whether to enlarge the active page indicator\n       * Irrelevant when limitShownPages is in effect.\n       */\n    enlargeActive: _pt.bool,\n\n    /**\n       * The space between the siblings page indicators\n       */\n    spacing: _pt.number,\n\n    /**\n       * Used to identify the pageControl in tests\n       */\n    testID: _pt.string\n  };\n  static displayName = 'PageControl';\n  static DEFAULT_SIZE = 10;\n  static DEFAULT_SPACING = 4;\n  static defaultProps = {\n    enlargeActive: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      numOfPagesShown: getNumberOfPagesShown(props),\n      largeIndicatorsOffset: 0,\n      pagesOffset: 0,\n      prevPage: undefined\n    };\n\n    if (Array.isArray(props.size)) {\n      if (props.size[0] >= props.size[1] || props.size[1] >= props.size[2]) {\n        console.warn('It is recommended that largeSize > mediumSize > smallSize, currently: smallSize=', props.size[0], 'mediumSize=', props.size[1], 'largeSize=', props.size[2]);\n      }\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentPage\n    } = nextProps;\n    const {\n      largeIndicatorsOffset: prevLargeIndicatorsOffset,\n      prevPage\n    } = prevState;\n    const newState = {};\n\n    if (currentPage !== prevPage) {\n      newState.prevPage = currentPage;\n\n      if (currentPage >= prevLargeIndicatorsOffset + NUM_LARGE_INDICATORS) {\n        PageControl.animate(nextProps);\n        newState.pagesOffset = Math.max(0, currentPage - NUM_LARGE_INDICATORS - 1);\n        newState.largeIndicatorsOffset = currentPage - NUM_LARGE_INDICATORS + 1;\n      } else if (currentPage < prevLargeIndicatorsOffset) {\n        PageControl.animate(nextProps);\n        newState.pagesOffset = Math.max(0, currentPage - 2);\n        newState.largeIndicatorsOffset = currentPage;\n      }\n    }\n\n    return _.isEmpty(newState) ? null : newState;\n  }\n\n  static animate(props) {\n    if (PageControl.showLimitedVersion(props)) {\n      LayoutAnimation.configureNext({ ...LayoutAnimation.Presets.linear,\n        duration: 100\n      });\n    }\n  }\n\n  static showLimitedVersion({\n    limitShownPages,\n    numOfPages\n  }) {\n    return limitShownPages && numOfPages > 5;\n  }\n\n  getSize(index) {\n    const {\n      largeIndicatorsOffset\n    } = this.state;\n    const {\n      numOfPages\n    } = this.props;\n    let mediumSize,\n        smallSize,\n        {\n      size = PageControl.DEFAULT_SIZE\n    } = this.props;\n\n    if (Array.isArray(size)) {\n      smallSize = size[0];\n      mediumSize = size[1];\n      size = size[2];\n    } else {\n      mediumSize = size * 2 / 3;\n      smallSize = size / 3;\n    }\n\n    if (index < 0 || index > numOfPages - 1) {\n      return undefined;\n    } else if (index >= largeIndicatorsOffset && index < largeIndicatorsOffset + NUM_LARGE_INDICATORS) {\n      return size;\n    } else if (index === largeIndicatorsOffset - 1 || index === largeIndicatorsOffset + NUM_LARGE_INDICATORS) {\n      return mediumSize;\n    } else if (index === largeIndicatorsOffset - 2 || index === largeIndicatorsOffset + NUM_LARGE_INDICATORS + 1) {\n      return smallSize;\n    }\n  }\n\n  onPagePress = ({\n    customValue: index\n  }) => {\n    PageControl.animate(this.props);\n    this.props.onPagePress?.(index);\n  };\n\n  renderIndicator(index, size, enlargeActive) {\n    const {\n      currentPage,\n      color,\n      inactiveColor,\n      onPagePress,\n      spacing = PageControl.DEFAULT_SPACING\n    } = this.props;\n    return <TouchableOpacity customValue={index} onPress={onPagePress && this.onPagePress} key={index} style={[styles.pageIndicator, {\n      marginHorizontal: spacing / 2\n    }, getColorStyle(index === currentPage, color, inactiveColor), getSizeStyle(size, index, currentPage, enlargeActive)]} />;\n  }\n\n  renderDifferentSizeIndicators() {\n    const {\n      numOfPagesShown,\n      pagesOffset\n    } = this.state;\n    return _.map(_.times(numOfPagesShown), index => {\n      const adjustedIndex = index + pagesOffset;\n      const adjustedSize = this.getSize(adjustedIndex);\n\n      if (adjustedSize) {\n        return this.renderIndicator(adjustedIndex, adjustedSize, false);\n      } else {\n        return null;\n      }\n    });\n  }\n\n  renderSameSizeIndicators() {\n    const {\n      numOfPages,\n      size: sizeFromProps = PageControl.DEFAULT_SIZE,\n      enlargeActive\n    } = this.props;\n    const size = Array.isArray(sizeFromProps) ? sizeFromProps[2] : sizeFromProps;\n    return _.map(_.times(numOfPages), index => this.renderIndicator(index, size, enlargeActive));\n  }\n\n  render() {\n    const {\n      containerStyle,\n      testID\n    } = this.props;\n    return <View style={[styles.container, containerStyle]} inaccessible testID={testID}>\n        {PageControl.showLimitedVersion(this.props) ? this.renderDifferentSizeIndicators() : this.renderSameSizeIndicators()}\n      </View>;\n  }\n\n}\n\nexport default asBaseComponent(forwardRef(PageControl));\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  pageIndicator: {\n    backgroundColor: 'transparent',\n    borderWidth: 1\n  }\n});"]},"metadata":{},"sourceType":"module"}