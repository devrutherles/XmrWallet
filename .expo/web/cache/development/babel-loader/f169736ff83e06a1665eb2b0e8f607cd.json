{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"../view\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport Constants from \"../../helpers/Constants\";\nimport Colors from \"../../style/colors\";\nimport Shadows from \"../../style/shadows\";\nimport WizardStep from \"./WizardStep\";\nimport { StatesConfig } from \"./WizardStates\";\nimport { WizardProps, WizardStepProps, WizardStepStates, WizardStepConfig, WizardStepsConfig } from \"./types\";\nexport { WizardProps, WizardStepProps, WizardStepStates, WizardStepConfig, WizardStepsConfig };\n\nvar Wizard = function (_Component) {\n  _inherits(Wizard, _Component);\n\n  var _super = _createSuper(Wizard);\n\n  function Wizard(props) {\n    var _this;\n\n    _classCallCheck(this, Wizard);\n\n    _this = _super.call(this, props);\n\n    _this.onOrientationChange = function () {\n      var maxWidth = _this.getMaxWidth();\n\n      if (_this.state.maxWidth !== maxWidth) {\n        _this.setState({\n          maxWidth: maxWidth\n        });\n      }\n    };\n\n    _this.state = {\n      maxWidth: _this.getMaxWidth()\n    };\n    return _this;\n  }\n\n  _createClass(Wizard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChange);\n    }\n  }, {\n    key: \"getMaxWidth\",\n    value: function getMaxWidth() {\n      if (Constants.isTablet) {\n        if (Constants.isLandscape) {\n          return Constants.screenWidth * 0.2;\n        } else {\n          return Constants.screenWidth * 0.26;\n        }\n      } else {\n        return Constants.screenWidth * 0.4;\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this2 = this;\n\n      var maxWidth = this.state.maxWidth;\n      var _this$props = this.props,\n          activeIndex = _this$props.activeIndex,\n          _this$props$activeCon = _this$props.activeConfig,\n          activeConfig = _this$props$activeCon === void 0 ? StatesConfig.active : _this$props$activeCon,\n          testID = _this$props.testID;\n      var children = React.Children.map(this.props.children, function (child, index) {\n        return React.cloneElement(child, {\n          testID: testID + \".step\" + index,\n          maxWidth: maxWidth,\n          index: index,\n          activeIndex: activeIndex,\n          activeConfig: activeConfig,\n          onPress: function onPress() {\n            _this2.props.onActiveIndexChanged == null ? void 0 : _this2.props.onActiveIndexChanged(index);\n          }\n        });\n      });\n      return children;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          testID = _this$props2.testID,\n          containerStyle = _this$props2.containerStyle;\n      return React.createElement(View, {\n        testID: testID,\n        style: [styles.container, containerStyle]\n      }, this.renderChildren());\n    }\n  }]);\n\n  return Wizard;\n}(Component);\n\nWizard.displayName = 'Wizard';\nWizard.Step = WizardStep;\nWizard.States = WizardStepStates;\nexport default asBaseComponent(Wizard);\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    backgroundColor: Colors.white,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%'\n  }, Platform.select({\n    ios: _objectSpread({}, Shadows.white30.bottom),\n    android: {\n      elevation: 2\n    }\n  }))\n});","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/wizard/index.js"],"names":["React","Component","View","asBaseComponent","Constants","Colors","Shadows","WizardStep","StatesConfig","WizardProps","WizardStepProps","WizardStepStates","WizardStepConfig","WizardStepsConfig","Wizard","props","onOrientationChange","maxWidth","getMaxWidth","state","setState","dimensionsChangeListener","addDimensionsEventListener","removeDimensionsEventListener","isTablet","isLandscape","screenWidth","activeIndex","activeConfig","active","testID","children","Children","map","child","index","cloneElement","onPress","onActiveIndexChanged","containerStyle","styles","container","renderChildren","displayName","Step","States","StyleSheet","create","backgroundColor","white","paddingVertical","paddingHorizontal","flexDirection","justifyContent","width","Platform","select","ios","white30","bottom","android","elevation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Platform } from 'react-native';\nimport View from \"../view\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport Constants from \"../../helpers/Constants\";\nimport Colors from \"../../style/colors\";\nimport Shadows from \"../../style/shadows\";\nimport WizardStep from \"./WizardStep\";\nimport { StatesConfig } from \"./WizardStates\";\nimport { WizardProps, WizardStepProps, WizardStepStates, WizardStepConfig, WizardStepsConfig } from \"./types\";\nexport { WizardProps, WizardStepProps, WizardStepStates, WizardStepConfig, WizardStepsConfig };\n\n/**\n * @description: Wizard Component: a wizard presents a series of steps in  prescribed order\n * that the user needs to complete in order to accomplish a goal (e.g. purchase a product).\n *\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/WizardScreen.tsx\n * @notes: Use Wizard with nested Wizard.Step(s) to achieve the desired result.\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Wizard/Wizard.gif?raw=true\n * @image: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Wizard/WizardPresets.png?raw=true\n */\nclass Wizard extends Component {\n  static displayName = 'Wizard';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      maxWidth: this.getMaxWidth()\n    };\n  }\n\n  componentDidMount() {\n    this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChange);\n  }\n\n  componentWillUnmount() {\n    Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChange);\n  }\n\n  onOrientationChange = () => {\n    const maxWidth = this.getMaxWidth();\n\n    if (this.state.maxWidth !== maxWidth) {\n      this.setState({\n        maxWidth\n      });\n    }\n  };\n\n  getMaxWidth() {\n    if (Constants.isTablet) {\n      if (Constants.isLandscape) {\n        return Constants.screenWidth * 0.2;\n      } else {\n        return Constants.screenWidth * 0.26;\n      }\n    } else {\n      return Constants.screenWidth * 0.4;\n    }\n  }\n\n  renderChildren() {\n    const {\n      maxWidth\n    } = this.state;\n    const {\n      activeIndex,\n      activeConfig = StatesConfig.active,\n      testID\n    } = this.props;\n    const children = React.Children.map(this.props.children, (child, index) => {\n      // @ts-expect-error\n      return React.cloneElement(child, {\n        testID: `${testID}.step${index}`,\n        maxWidth,\n        index,\n        activeIndex,\n        activeConfig,\n        onPress: () => {\n          this.props.onActiveIndexChanged?.(index);\n        }\n      });\n    });\n    return children;\n  }\n\n  render() {\n    const {\n      testID,\n      containerStyle\n    } = this.props;\n    return <View testID={testID} style={[styles.container, containerStyle]}>\n        {this.renderChildren()}\n      </View>;\n  }\n\n}\n\nWizard.Step = WizardStep;\nWizard.States = WizardStepStates;\nexport default asBaseComponent(Wizard);\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.white,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    ...Platform.select({\n      ios: { ...Shadows.white30.bottom\n      },\n      android: {\n        elevation: 2\n      }\n    })\n  }\n});"]},"metadata":{},"sourceType":"module"}