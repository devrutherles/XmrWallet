{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport { Constants } from \"../../helpers\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Button, { ButtonSize } from \"../button\";\nimport Card from \"../card\";\nimport { asBaseComponent } from \"../../commons/new\";\nvar PEEP = 8;\nvar DURATION = 300;\nvar MARGIN_BOTTOM = 24;\nvar buttonStartValue = 0.8;\n\nvar icon = require(\"./assets/arrow-down.png\");\n\nvar StackAggregator = function (_PureComponent) {\n  _inherits(StackAggregator, _PureComponent);\n\n  var _super = _createSuper(StackAggregator);\n\n  function StackAggregator(props) {\n    var _this;\n\n    _classCallCheck(this, StackAggregator);\n\n    _this = _super.call(this, props);\n    _this.itemsCount = React.Children.count(_this.props.children);\n    _this.easeOut = Easing.bezier(0, 0, 0.58, 1);\n\n    _this.getAnimatedScales = function () {\n      return React.Children.map(_this.props.children, function (_item, index) {\n        return new Animated.Value(_this.getItemScale(index));\n      });\n    };\n\n    _this.getItemScale = function (index) {\n      if (_this.state.collapsed) {\n        if (index === _this.itemsCount - 2) {\n          return 0.95;\n        }\n\n        if (index === _this.itemsCount - 1) {\n          return 0.9;\n        }\n      }\n\n      return 1;\n    };\n\n    _this.animate = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Promise.all([_this.animateValues(), _this.animateCards()]));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.close = function () {\n      _this.setState({\n        collapsed: true\n      }, function _callee2() {\n        return _regeneratorRuntime.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.props.onCollapseWillChange == null ? void 0 : _this.props.onCollapseWillChange(true);\n\n                if (!_this.props.onCollapseChanged) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 4;\n                return _regeneratorRuntime.awrap(_this.animate());\n\n              case 4:\n                _this.props.onCollapseChanged(true);\n\n                _context2.next = 8;\n                break;\n\n              case 7:\n                _this.animate();\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    };\n\n    _this.open = function () {\n      _this.setState({\n        collapsed: false\n      }, function _callee3() {\n        return _regeneratorRuntime.async(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this.props.onCollapseWillChange == null ? void 0 : _this.props.onCollapseWillChange(false);\n\n                if (!_this.props.onCollapseChanged) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                _context3.next = 4;\n                return _regeneratorRuntime.awrap(_this.animate());\n\n              case 4:\n                _this.props.onCollapseChanged(false);\n\n                _context3.next = 8;\n                break;\n\n              case 7:\n                _this.animate();\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    };\n\n    _this.onLayout = function (event) {\n      var height = event.nativeEvent.layout.height;\n\n      if (height) {\n        _this.setState({\n          firstItemHeight: height\n        });\n      }\n    };\n\n    _this.onItemPress = function (index) {\n      _this.props.onItemPress == null ? void 0 : _this.props.onItemPress(index);\n    };\n\n    _this.renderItem = function (item, index) {\n      var _this$props = _this.props,\n          contentContainerStyle = _this$props.contentContainerStyle,\n          itemBorderRadius = _this$props.itemBorderRadius;\n      var _this$state = _this.state,\n          firstItemHeight = _this$state.firstItemHeight,\n          collapsed = _this$state.collapsed;\n      return React.createElement(Animated.View, {\n        key: index,\n        onLayout: index === 0 ? _this.onLayout : undefined,\n        style: [Constants.isIOS && styles.containerShadow, _this.getStyle(index), {\n          borderRadius: Constants.isIOS ? itemBorderRadius : undefined,\n          alignSelf: 'center',\n          zIndex: _this.itemsCount - index,\n          transform: [{\n            scaleX: _this.animatedScaleArray[index]\n          }],\n          width: Constants.screenWidth - 40,\n          height: collapsed ? firstItemHeight : undefined\n        }],\n        collapsable: false\n      }, React.createElement(Card, {\n        style: [contentContainerStyle, styles.card],\n        onPress: function onPress() {\n          return _this.props.disablePresses && _this.onItemPress(index);\n        },\n        borderRadius: itemBorderRadius,\n        elevation: 5\n      }, React.createElement(Animated.View, {\n        style: index !== 0 ? {\n          opacity: _this.animatedContentOpacity\n        } : undefined,\n        collapsable: false\n      }, item)));\n    };\n\n    _this.state = {\n      collapsed: props.collapsed,\n      firstItemHeight: undefined\n    };\n    _this.animatedScale = new Animated.Value(_this.state.collapsed ? buttonStartValue : 1);\n    _this.animatedOpacity = new Animated.Value(_this.state.collapsed ? buttonStartValue : 1);\n    _this.animatedContentOpacity = new Animated.Value(_this.state.collapsed ? 0 : 1);\n    _this.animatedScaleArray = _this.getAnimatedScales();\n    return _this;\n  }\n\n  _createClass(StackAggregator, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_prevProps, prevState) {\n      var _this$state2;\n\n      if (prevState.collapsed !== ((_this$state2 = this.state) == null ? void 0 : _this$state2.collapsed)) {\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n      }\n    }\n  }, {\n    key: \"animateValues\",\n    value: function animateValues() {\n      var _this2 = this;\n\n      var collapsed = this.state.collapsed;\n      var newValue = collapsed ? buttonStartValue : 1;\n      return new Promise(function (resolve) {\n        Animated.parallel([Animated.timing(_this2.animatedOpacity, {\n          duration: DURATION,\n          toValue: Number(newValue),\n          useNativeDriver: true\n        }), Animated.timing(_this2.animatedScale, {\n          toValue: Number(newValue),\n          easing: _this2.easeOut,\n          duration: DURATION,\n          useNativeDriver: true\n        }), Animated.timing(_this2.animatedContentOpacity, {\n          toValue: Number(collapsed ? 0 : 1),\n          easing: _this2.easeOut,\n          duration: DURATION,\n          useNativeDriver: true\n        })]).start(resolve);\n      });\n    }\n  }, {\n    key: \"animateCards\",\n    value: function animateCards() {\n      var _this3 = this;\n\n      var promises = [];\n\n      var _loop = function _loop(index) {\n        var newScale = _this3.getItemScale(index);\n\n        promises.push(new Promise(function (resolve) {\n          Animated.timing(_this3.animatedScaleArray[index], {\n            toValue: Number(newScale),\n            easing: _this3.easeOut,\n            duration: DURATION,\n            useNativeDriver: true\n          }).start(resolve);\n        }));\n      };\n\n      for (var index = 0; index < this.itemsCount; index++) {\n        _loop(index);\n      }\n\n      return Promise.all(promises);\n    }\n  }, {\n    key: \"getTop\",\n    value: function getTop(index) {\n      var start = 0;\n\n      if (index === this.itemsCount - 2) {\n        start += PEEP;\n      }\n\n      if (index === this.itemsCount - 1) {\n        start += PEEP * 2;\n      }\n\n      return start;\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index) {\n      var collapsed = this.state.collapsed;\n      var top = this.getTop(index);\n\n      if (collapsed) {\n        return {\n          position: index !== 0 ? 'absolute' : undefined,\n          top: top\n        };\n      }\n\n      return {\n        marginBottom: MARGIN_BOTTOM,\n        marginTop: index === 0 ? 40 : undefined\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          containerStyle = _this$props2.containerStyle,\n          buttonProps = _this$props2.buttonProps;\n      var _this$state3 = this.state,\n          collapsed = _this$state3.collapsed,\n          firstItemHeight = _this$state3.firstItemHeight;\n      return React.createElement(View, {\n        style: containerStyle\n      }, React.createElement(View, {\n        style: {\n          marginBottom: PEEP * 3\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          opacity: this.animatedOpacity,\n          transform: [{\n            scale: this.animatedScale\n          }]\n        }\n      }, React.createElement(Button, _extends({\n        label: 'Show less',\n        iconSource: icon,\n        link: true,\n        size: ButtonSize.small\n      }, buttonProps, {\n        \"marginH-24\": true,\n        \"marginB-20\": true,\n        onPress: this.close\n      }))), React.Children.map(children, function (item, index) {\n        return _this4.renderItem(item, index);\n      }), collapsed && React.createElement(TouchableOpacity, {\n        onPress: this.open,\n        activeOpacity: 1,\n        style: [styles.touchable, {\n          height: firstItemHeight ? firstItemHeight + PEEP * 2 : undefined,\n          zIndex: this.itemsCount\n        }]\n      })));\n    }\n  }]);\n\n  return StackAggregator;\n}(PureComponent);\n\nStackAggregator.propTypes = {\n  collapsed: _pt.bool,\n  children: _pt.oneOfType([_pt.element, _pt.arrayOf(_pt.element)]).isRequired,\n  itemBorderRadius: _pt.number,\n  onItemPress: _pt.func,\n  onCollapseWillChange: _pt.func,\n  onCollapseChanged: _pt.func,\n  disablePresses: _pt.bool\n};\nStackAggregator.displayName = 'StackAggregator';\nStackAggregator.defaultProps = {\n  disablePresses: false,\n  collapsed: true,\n  itemBorderRadius: 0\n};\nvar styles = StyleSheet.create({\n  touchable: {\n    position: 'absolute',\n    width: '100%'\n  },\n  containerShadow: {\n    backgroundColor: Colors.white,\n    shadowColor: Colors.grey40,\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n    shadowOffset: {\n      height: 5,\n      width: 0\n    }\n  },\n  card: {\n    overflow: 'hidden',\n    flexShrink: 1\n  }\n});\nexport default asBaseComponent(StackAggregator);","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/stackAggregator/index.js"],"names":["_pt","React","PureComponent","Constants","Colors","View","TouchableOpacity","Button","ButtonSize","Card","asBaseComponent","PEEP","DURATION","MARGIN_BOTTOM","buttonStartValue","icon","require","StackAggregator","props","itemsCount","Children","count","children","easeOut","Easing","bezier","getAnimatedScales","map","_item","index","Animated","Value","getItemScale","state","collapsed","animate","Promise","all","animateValues","animateCards","close","setState","onCollapseWillChange","onCollapseChanged","open","onLayout","event","height","nativeEvent","layout","firstItemHeight","onItemPress","renderItem","item","contentContainerStyle","itemBorderRadius","undefined","isIOS","styles","containerShadow","getStyle","borderRadius","alignSelf","zIndex","transform","scaleX","animatedScaleArray","width","screenWidth","card","disablePresses","opacity","animatedContentOpacity","animatedScale","animatedOpacity","_prevProps","prevState","LayoutAnimation","configureNext","Presets","easeInEaseOut","newValue","resolve","parallel","timing","duration","toValue","Number","useNativeDriver","easing","start","promises","newScale","push","top","getTop","position","marginBottom","marginTop","containerStyle","buttonProps","right","scale","small","touchable","propTypes","bool","oneOfType","element","arrayOf","isRequired","number","func","displayName","defaultProps","StyleSheet","create","backgroundColor","white","shadowColor","grey40","shadowOpacity","shadowRadius","shadowOffset","overflow","flexShrink"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, Animated, Easing, LayoutAnimation } from 'react-native';\nimport { Constants } from \"../../helpers\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Button, { ButtonSize } from \"../button\";\nimport Card from \"../card\";\nimport { asBaseComponent } from \"../../commons/new\";\nconst PEEP = 8;\nconst DURATION = 300;\nconst MARGIN_BOTTOM = 24;\nconst buttonStartValue = 0.8;\n\nconst icon = require(\"./assets/arrow-down.png\");\n\n/**\n * @description: Stack aggregator component\n * @modifiers: margin, padding\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/StackAggregatorScreen.tsx\n */\nclass StackAggregator extends PureComponent {\n  static propTypes = {\n    /**\n         * The initial state of the stack\n         */\n    collapsed: _pt.bool,\n\n    /**\n         * Component Children\n         */\n    children: _pt.oneOfType([_pt.element, _pt.arrayOf(_pt.element)]).isRequired,\n\n    /**\n         * The items border radius\n         */\n    itemBorderRadius: _pt.number,\n\n    /**\n         * A callback for item press\n         */\n    onItemPress: _pt.func,\n\n    /**\n         * A callback for collapse state will change (value is future collapsed state)\n         */\n    onCollapseWillChange: _pt.func,\n\n    /**\n         * A callback for collapse state change (value is collapsed state)\n         */\n    onCollapseChanged: _pt.func,\n\n    /**\n         * A setting that disables pressability on cards\n         */\n    disablePresses: _pt.bool\n  };\n  static displayName = 'StackAggregator';\n  itemsCount = React.Children.count(this.props.children);\n  easeOut = Easing.bezier(0, 0, 0.58, 1);\n  static defaultProps = {\n    disablePresses: false,\n    collapsed: true,\n    itemBorderRadius: 0\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: props.collapsed,\n      firstItemHeight: undefined\n    };\n    this.animatedScale = new Animated.Value(this.state.collapsed ? buttonStartValue : 1);\n    this.animatedOpacity = new Animated.Value(this.state.collapsed ? buttonStartValue : 1);\n    this.animatedContentOpacity = new Animated.Value(this.state.collapsed ? 0 : 1);\n    this.animatedScaleArray = this.getAnimatedScales();\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.collapsed !== this.state?.collapsed) {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    }\n  }\n\n  getAnimatedScales = () => {\n    return React.Children.map(this.props.children, (_item, index) => {\n      return new Animated.Value(this.getItemScale(index));\n    });\n  };\n  getItemScale = index => {\n    if (this.state.collapsed) {\n      if (index === this.itemsCount - 2) {\n        return 0.95;\n      }\n\n      if (index === this.itemsCount - 1) {\n        return 0.9;\n      }\n    }\n\n    return 1;\n  };\n  animate = async () => {\n    return Promise.all([this.animateValues(), this.animateCards()]);\n  };\n\n  animateValues() {\n    const {\n      collapsed\n    } = this.state;\n    const newValue = collapsed ? buttonStartValue : 1;\n    return new Promise(resolve => {\n      Animated.parallel([Animated.timing(this.animatedOpacity, {\n        duration: DURATION,\n        toValue: Number(newValue),\n        useNativeDriver: true\n      }), Animated.timing(this.animatedScale, {\n        toValue: Number(newValue),\n        easing: this.easeOut,\n        duration: DURATION,\n        useNativeDriver: true\n      }), Animated.timing(this.animatedContentOpacity, {\n        toValue: Number(collapsed ? 0 : 1),\n        easing: this.easeOut,\n        duration: DURATION,\n        useNativeDriver: true\n      })]).start(resolve);\n    });\n  }\n\n  animateCards() {\n    const promises = [];\n\n    for (let index = 0; index < this.itemsCount; index++) {\n      const newScale = this.getItemScale(index);\n      promises.push(new Promise(resolve => {\n        Animated.timing(this.animatedScaleArray[index], {\n          toValue: Number(newScale),\n          easing: this.easeOut,\n          duration: DURATION,\n          useNativeDriver: true\n        }).start(resolve);\n      }));\n    }\n\n    return Promise.all(promises);\n  }\n\n  close = () => {\n    this.setState({\n      collapsed: true\n    }, async () => {\n      this.props.onCollapseWillChange?.(true);\n\n      if (this.props.onCollapseChanged) {\n        await this.animate();\n        this.props.onCollapseChanged(true);\n      } else {\n        this.animate();\n      }\n    });\n  };\n  open = () => {\n    this.setState({\n      collapsed: false\n    }, async () => {\n      this.props.onCollapseWillChange?.(false);\n\n      if (this.props.onCollapseChanged) {\n        await this.animate();\n        this.props.onCollapseChanged(false);\n      } else {\n        this.animate();\n      }\n    });\n  };\n\n  getTop(index) {\n    let start = 0;\n\n    if (index === this.itemsCount - 2) {\n      start += PEEP;\n    }\n\n    if (index === this.itemsCount - 1) {\n      start += PEEP * 2;\n    }\n\n    return start;\n  }\n\n  getStyle(index) {\n    const {\n      collapsed\n    } = this.state;\n    const top = this.getTop(index);\n\n    if (collapsed) {\n      return {\n        position: index !== 0 ? 'absolute' : undefined,\n        top\n      };\n    }\n\n    return {\n      marginBottom: MARGIN_BOTTOM,\n      marginTop: index === 0 ? 40 : undefined\n    };\n  }\n\n  onLayout = event => {\n    const height = event.nativeEvent.layout.height;\n\n    if (height) {\n      this.setState({\n        firstItemHeight: height\n      });\n    }\n  };\n  onItemPress = index => {\n    this.props.onItemPress?.(index);\n  };\n  renderItem = (item, index) => {\n    const {\n      contentContainerStyle,\n      itemBorderRadius\n    } = this.props;\n    const {\n      firstItemHeight,\n      collapsed\n    } = this.state;\n    return <Animated.View key={index} onLayout={index === 0 ? this.onLayout : undefined} style={[Constants.isIOS && styles.containerShadow, this.getStyle(index), {\n      borderRadius: Constants.isIOS ? itemBorderRadius : undefined,\n      alignSelf: 'center',\n      zIndex: this.itemsCount - index,\n      transform: [{\n        scaleX: this.animatedScaleArray[index]\n      }],\n      width: Constants.screenWidth - 40,\n      height: collapsed ? firstItemHeight : undefined\n    }]} collapsable={false}>\n        <Card style={[contentContainerStyle, styles.card]} onPress={() => this.props.disablePresses && this.onItemPress(index)} borderRadius={itemBorderRadius} elevation={5}>\n          <Animated.View style={index !== 0 ? {\n          opacity: this.animatedContentOpacity\n        } : undefined} collapsable={false}>\n            {item}\n          </Animated.View>\n        </Card>\n      </Animated.View>;\n  };\n\n  render() {\n    const {\n      children,\n      containerStyle,\n      buttonProps\n    } = this.props;\n    const {\n      collapsed,\n      firstItemHeight\n    } = this.state;\n    return <View style={containerStyle}>\n        <View style={{\n        marginBottom: PEEP * 3\n      }}>\n          <Animated.View style={{\n          position: 'absolute',\n          right: 0,\n          opacity: this.animatedOpacity,\n          transform: [{\n            scale: this.animatedScale\n          }]\n        }}>\n            <Button label={'Show less'} iconSource={icon} link size={ButtonSize.small} {...buttonProps} marginH-24 marginB-20 onPress={this.close} />\n          </Animated.View>\n\n          {React.Children.map(children, (item, index) => {\n          return this.renderItem(item, index);\n        })}\n\n          {collapsed && <TouchableOpacity onPress={this.open} activeOpacity={1} style={[styles.touchable, {\n          height: firstItemHeight ? firstItemHeight + PEEP * 2 : undefined,\n          zIndex: this.itemsCount\n        }]} />}\n        </View>\n      </View>;\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  touchable: {\n    position: 'absolute',\n    width: '100%'\n  },\n  containerShadow: {\n    backgroundColor: Colors.white,\n    shadowColor: Colors.grey40,\n    shadowOpacity: 0.25,\n    shadowRadius: 12,\n    shadowOffset: {\n      height: 5,\n      width: 0\n    }\n  },\n  card: {\n    overflow: 'hidden',\n    flexShrink: 1\n  }\n});\nexport default asBaseComponent(StackAggregator);"]},"metadata":{},"sourceType":"module"}