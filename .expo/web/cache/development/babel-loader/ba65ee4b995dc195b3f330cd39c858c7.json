{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport isUndefined from 'lodash/isUndefined';\nimport React, { PureComponent } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport { Constants } from \"../../helpers\";\nimport View from \"../view\";\nimport { Colors, BorderRadiuses, Spacings } from \"../../style\";\nvar CONTAINER_HEIGHT = Spacings.s2;\nvar FULL_WIDTH_CONTAINER_HEIGHT = Spacings.s1;\nvar TABLET_CONTAINER_HEIGHT = 6;\nvar TABLET_FULL_WIDTH_CONTAINER_HEIGHT = 10;\nvar DEFAULT_COLOR = Colors.primary;\n\nvar ProgressBar = function (_PureComponent) {\n  _inherits(ProgressBar, _PureComponent);\n\n  var _super = _createSuper(ProgressBar);\n\n  function ProgressBar(props) {\n    var _this;\n\n    _classCallCheck(this, ProgressBar);\n\n    _this = _super.call(this, props);\n\n    _this.getContainerWidth = function (event) {\n      if (!_this.state.containerWidth) {\n        _this.setState({\n          containerWidth: event.nativeEvent.layout.width\n        });\n      }\n    };\n\n    _this.progressAnimation = new Animated.Value(props.progress || 0);\n    _this.state = {\n      containerWidth: undefined\n    };\n    return _this;\n  }\n\n  _createClass(ProgressBar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var progress = this.props.progress;\n\n      if (prevProps.progress !== progress) {\n        this.animateProgress(progress);\n      }\n    }\n  }, {\n    key: \"animateProgress\",\n    value: function animateProgress(toValue) {\n      if (!isUndefined(toValue)) {\n        Animated.timing(this.progressAnimation, {\n          duration: 220,\n          easing: Easing.ease,\n          toValue: toValue,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: \"getAccessibilityProps\",\n    value: function getAccessibilityProps() {\n      var progress = this.props.progress;\n\n      if (progress) {\n        return _objectSpread({\n          accessible: true,\n          accessibilityLabel: \"progress bar. \" + Math.round(progress) + \"%\"\n        }, extractAccessibilityProps());\n      }\n    }\n  }, {\n    key: \"getContainerStyle\",\n    value: function getContainerStyle() {\n      var fullWidth = this.props.fullWidth;\n      var containerHeight = fullWidth ? FULL_WIDTH_CONTAINER_HEIGHT : CONTAINER_HEIGHT;\n      var tabletContainerHeight = fullWidth ? TABLET_FULL_WIDTH_CONTAINER_HEIGHT : TABLET_CONTAINER_HEIGHT;\n      var inlineStyle = fullWidth ? null : styles.inlineContainer;\n      return _objectSpread(_objectSpread({}, inlineStyle), {}, {\n        height: Constants.isTablet ? tabletContainerHeight : containerHeight\n      });\n    }\n  }, {\n    key: \"getProgressStyle\",\n    value: function getProgressStyle() {\n      var _this$props = this.props,\n          fullWidth = _this$props.fullWidth,\n          progressColor = _this$props.progressColor;\n      var borderRadius = fullWidth ? styles.fullWidthProgressBorderRadius : styles.inlineBorderRadius;\n      var progressStyle = {\n        right: this.state.containerWidth,\n        backgroundColor: progressColor || DEFAULT_COLOR\n      };\n      return _objectSpread(_objectSpread({}, borderRadius), progressStyle);\n    }\n  }, {\n    key: \"renderCustomElement\",\n    value: function renderCustomElement() {\n      var customElement = this.props.customElement;\n\n      if (customElement) {\n        return React.cloneElement(customElement, {\n          style: [customElement.props.style, styles.customElement]\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = this.props.style;\n      var containerWidth = this.state.containerWidth;\n      var newProgress = this.progressAnimation.interpolate({\n        inputRange: [0, 100],\n        outputRange: [0, containerWidth || 0]\n      });\n      return React.createElement(View, _extends({\n        onLayout: this.getContainerWidth,\n        style: [styles.container, this.getContainerStyle(), style]\n      }, this.getAccessibilityProps()), !!containerWidth && React.createElement(Animated.View, {\n        style: [styles.progress, this.getProgressStyle(), {\n          transform: [{\n            translateX: newProgress\n          }]\n        }]\n      }, this.renderCustomElement()));\n    }\n  }]);\n\n  return ProgressBar;\n}(PureComponent);\n\nProgressBar.propTypes = {\n  progress: _pt.number,\n  fullWidth: _pt.bool,\n  progressColor: _pt.string,\n  customElement: _pt.element\n};\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = {\n  progress: 0\n};\nexport { ProgressBar };\nexport default asBaseComponent(ProgressBar);\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.grey60,\n    overflow: 'hidden',\n    borderRadius: BorderRadiuses.br100\n  },\n  inlineContainer: {\n    borderRadius: BorderRadiuses.br100\n  },\n  progress: {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden'\n  },\n  customElement: {\n    height: '100%',\n    width: '100%'\n  },\n  inlineBorderRadius: {\n    borderRadius: BorderRadiuses.br100\n  },\n  fullWidthProgressBorderRadius: {\n    borderBottomRightRadius: BorderRadiuses.br100,\n    borderTopRightRadius: BorderRadiuses.br100\n  }\n});","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/progressBar/index.js"],"names":["_pt","isUndefined","React","PureComponent","asBaseComponent","extractAccessibilityProps","Constants","View","Colors","BorderRadiuses","Spacings","CONTAINER_HEIGHT","s2","FULL_WIDTH_CONTAINER_HEIGHT","s1","TABLET_CONTAINER_HEIGHT","TABLET_FULL_WIDTH_CONTAINER_HEIGHT","DEFAULT_COLOR","primary","ProgressBar","props","getContainerWidth","event","state","containerWidth","setState","nativeEvent","layout","width","progressAnimation","Animated","Value","progress","undefined","prevProps","animateProgress","toValue","timing","duration","easing","Easing","ease","useNativeDriver","start","accessible","accessibilityLabel","Math","round","fullWidth","containerHeight","tabletContainerHeight","inlineStyle","styles","inlineContainer","height","isTablet","progressColor","borderRadius","fullWidthProgressBorderRadius","inlineBorderRadius","progressStyle","right","backgroundColor","customElement","cloneElement","style","newProgress","interpolate","inputRange","outputRange","container","getContainerStyle","getAccessibilityProps","getProgressStyle","transform","translateX","renderCustomElement","propTypes","number","bool","string","element","displayName","defaultProps","StyleSheet","create","grey60","overflow","br100","position","alignItems","justifyContent","borderBottomRightRadius","borderTopRightRadius"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport isUndefined from 'lodash/isUndefined';\nimport React, { PureComponent } from 'react';\nimport { Animated, Easing, StyleSheet } from 'react-native';\nimport { asBaseComponent } from \"../../commons/new\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport { Constants } from \"../../helpers\";\nimport View from \"../view\";\nimport { Colors, BorderRadiuses, Spacings } from \"../../style\";\nconst CONTAINER_HEIGHT = Spacings.s2;\nconst FULL_WIDTH_CONTAINER_HEIGHT = Spacings.s1;\nconst TABLET_CONTAINER_HEIGHT = 6;\nconst TABLET_FULL_WIDTH_CONTAINER_HEIGHT = 10;\nconst DEFAULT_COLOR = Colors.primary;\n/**\n * @description: Progress bar\n * @example:https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ProgressBarScreen.js\n */\n\nclass ProgressBar extends PureComponent {\n  static propTypes = {\n    /**\n       * The progress of the bar from 0 to 100\n       */\n    progress: _pt.number,\n\n    /**\n       *  FullWidth Ui preset\n       */\n    fullWidth: _pt.bool,\n\n    /**\n       * Progress color\n       */\n    progressColor: _pt.string,\n\n    /**\n       * Custom element to render on top of the animated progress\n       */\n    customElement: _pt.element\n  };\n  static displayName = 'ProgressBar';\n  static defaultProps = {\n    progress: 0\n  };\n\n  constructor(props) {\n    super(props);\n    this.progressAnimation = new Animated.Value(props.progress || 0);\n    this.state = {\n      containerWidth: undefined\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      progress\n    } = this.props;\n\n    if (prevProps.progress !== progress) {\n      this.animateProgress(progress);\n    }\n  }\n\n  getContainerWidth = event => {\n    if (!this.state.containerWidth) {\n      this.setState({\n        containerWidth: event.nativeEvent.layout.width\n      });\n    }\n  };\n\n  animateProgress(toValue) {\n    if (!isUndefined(toValue)) {\n      Animated.timing(this.progressAnimation, {\n        duration: 220,\n        easing: Easing.ease,\n        toValue,\n        useNativeDriver: true\n      }).start();\n    }\n  }\n\n  getAccessibilityProps() {\n    const {\n      progress\n    } = this.props;\n\n    if (progress) {\n      return {\n        accessible: true,\n        accessibilityLabel: `progress bar. ${Math.round(progress)}%`,\n        ...extractAccessibilityProps()\n      };\n    }\n  }\n\n  getContainerStyle() {\n    const {\n      fullWidth\n    } = this.props;\n    const containerHeight = fullWidth ? FULL_WIDTH_CONTAINER_HEIGHT : CONTAINER_HEIGHT;\n    const tabletContainerHeight = fullWidth ? TABLET_FULL_WIDTH_CONTAINER_HEIGHT : TABLET_CONTAINER_HEIGHT;\n    const inlineStyle = fullWidth ? null : styles.inlineContainer;\n    return { ...inlineStyle,\n      height: Constants.isTablet ? tabletContainerHeight : containerHeight\n    };\n  }\n\n  getProgressStyle() {\n    const {\n      fullWidth,\n      progressColor\n    } = this.props;\n    const borderRadius = fullWidth ? styles.fullWidthProgressBorderRadius : styles.inlineBorderRadius;\n    const progressStyle = {\n      right: this.state.containerWidth,\n      backgroundColor: progressColor || DEFAULT_COLOR\n    };\n    return { ...borderRadius,\n      ...progressStyle\n    };\n  }\n\n  renderCustomElement() {\n    const {\n      customElement\n    } = this.props;\n\n    if (customElement) {\n      return React.cloneElement(customElement, {\n        style: [customElement.props.style, styles.customElement]\n      });\n    }\n  }\n\n  render() {\n    const {\n      style\n    } = this.props;\n    const {\n      containerWidth\n    } = this.state;\n    const newProgress = this.progressAnimation.interpolate({\n      inputRange: [0, 100],\n      outputRange: [0, containerWidth || 0]\n    });\n    return <View onLayout={this.getContainerWidth} style={[styles.container, this.getContainerStyle(), style]} {...this.getAccessibilityProps()}>\n        {!!containerWidth && <Animated.View style={[styles.progress, this.getProgressStyle(), {\n        transform: [{\n          translateX: newProgress\n        }]\n      }]}>\n            {this.renderCustomElement()}\n          </Animated.View>}\n      </View>;\n  }\n\n}\n\nexport { ProgressBar }; // For tests\n\nexport default asBaseComponent(ProgressBar);\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.grey60,\n    overflow: 'hidden',\n    borderRadius: BorderRadiuses.br100\n  },\n  inlineContainer: {\n    borderRadius: BorderRadiuses.br100\n  },\n  progress: {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden'\n  },\n  customElement: {\n    height: '100%',\n    width: '100%'\n  },\n  inlineBorderRadius: {\n    borderRadius: BorderRadiuses.br100\n  },\n  fullWidthProgressBorderRadius: {\n    borderBottomRightRadius: BorderRadiuses.br100,\n    borderTopRightRadius: BorderRadiuses.br100\n  }\n});"]},"metadata":{},"sourceType":"module"}