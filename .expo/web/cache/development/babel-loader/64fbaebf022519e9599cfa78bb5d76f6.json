{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\n\nvar FakeListItemForDocs = function (_PureComponent) {\n  _inherits(FakeListItemForDocs, _PureComponent);\n\n  var _super = _createSuper(FakeListItemForDocs);\n\n  function FakeListItemForDocs() {\n    _classCallCheck(this, FakeListItemForDocs);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FakeListItemForDocs, [{\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return FakeListItemForDocs;\n}(PureComponent);\n\nFakeListItemForDocs.propTypes = {\n  onPress: _pt.func,\n  onLongPress: _pt.func,\n  containerElement: _pt.elementType,\n  underlayColor: _pt.string,\n  testID: _pt.string\n};\nFakeListItemForDocs.displayName = 'ListItem';\n\nvar FakeListItemPartForDocs = function (_PureComponent2) {\n  _inherits(FakeListItemPartForDocs, _PureComponent2);\n\n  var _super2 = _createSuper(FakeListItemPartForDocs);\n\n  function FakeListItemPartForDocs() {\n    _classCallCheck(this, FakeListItemPartForDocs);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(FakeListItemPartForDocs, [{\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return FakeListItemPartForDocs;\n}(PureComponent);\n\nFakeListItemPartForDocs.propTypes = {\n  left: _pt.bool,\n  middle: _pt.bool,\n  right: _pt.bool,\n  row: _pt.bool,\n  column: _pt.bool\n};\nFakeListItemPartForDocs.displayName = 'ListItemPart';","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/√Årea de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/listItem/types.js"],"names":["_pt","React","PureComponent","FakeListItemForDocs","propTypes","onPress","func","onLongPress","containerElement","elementType","underlayColor","string","testID","displayName","FakeListItemPartForDocs","left","bool","middle","right","row","column"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;IASMC,mB;;;;;;;;;;;;;WA0BJ,kBAAS;AACP,aAAO,IAAP;AACD;;;;EA5B+BD,a;;AAA5BC,mB,CACGC,S,GAAY;AAIjBC,EAAAA,OAAO,EAAEL,GAAG,CAACM,IAJI;AASjBC,EAAAA,WAAW,EAAEP,GAAG,CAACM,IATA;AAcjBE,EAAAA,gBAAgB,EAAER,GAAG,CAACS,WAdL;AAmBjBC,EAAAA,aAAa,EAAEV,GAAG,CAACW,MAnBF;AAoBjBC,EAAAA,MAAM,EAAEZ,GAAG,CAACW;AApBK,C;AADfR,mB,CAwBGU,W,GAAc,U;;IAcjBC,uB;;;;;;;;;;;;;WA8BJ,kBAAS;AACP,aAAO,IAAP;AACD;;;;EAhCmCZ,a;;AAAhCY,uB,CACGV,S,GAAY;AAIjBW,EAAAA,IAAI,EAAEf,GAAG,CAACgB,IAJO;AASjBC,EAAAA,MAAM,EAAEjB,GAAG,CAACgB,IATK;AAcjBE,EAAAA,KAAK,EAAElB,GAAG,CAACgB,IAdM;AAmBjBG,EAAAA,GAAG,EAAEnB,GAAG,CAACgB,IAnBQ;AAwBjBI,EAAAA,MAAM,EAAEpB,GAAG,CAACgB;AAxBK,C;AADfF,uB,CA4BGD,W,GAAc,c","sourcesContent":["import _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\n\n/**\n * @description: List item component to render inside a List component\n * @extends: TouchableOpacity\n * @gif: https://media.giphy.com/media/l1IBjHowyPcOTWAY8/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/BasicListScreen.tsx\n */\n// @ts-ignore\nclass FakeListItemForDocs extends PureComponent {\n  static propTypes = {\n    /**\n       * action for when pressing the item\n       */\n    onPress: _pt.func,\n\n    /**\n       * action for when long pressing the item\n       */\n    onLongPress: _pt.func,\n\n    /**\n       * The container element to wrap the ListItem\n       */\n    containerElement: _pt.elementType,\n\n    /**\n       * The inner element pressed backgroundColor\n       */\n    underlayColor: _pt.string,\n    testID: _pt.string\n  };\n  // eslint-disable-line\n  static displayName = 'ListItem';\n\n  render() {\n    return null;\n  }\n\n}\n/**\n * @description: ListItem.Part, a sub ListItem component for layout-ing inside a ListItem\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/BasicListScreen.tsx\n */\n// @ts-ignore\n\n\nclass FakeListItemPartForDocs extends PureComponent {\n  static propTypes = {\n    /**\n       * this part content will be aligned to left\n       */\n    left: _pt.bool,\n\n    /**\n       * this part content will be aligned to spreaded\n       */\n    middle: _pt.bool,\n\n    /**\n       * this part content will be aligned to right\n       */\n    right: _pt.bool,\n\n    /**\n       * this part content direction will be row (default)\n       */\n    row: _pt.bool,\n\n    /**\n       * this part content direction will be column\n       */\n    column: _pt.bool\n  };\n  // eslint-disable-line\n  static displayName = 'ListItemPart';\n\n  render() {\n    return null;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}