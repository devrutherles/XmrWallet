{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PropTypes from 'prop-types';\nimport Slider from 'react-native-slider';\nimport Gradient from \"../gradients/Gradient\";\n\nvar GradientSlider = function GradientSlider(_ref) {\n  var style = _ref.style,\n      value = _ref.value,\n      step = _ref.step,\n      maximumValue = _ref.maximumValue,\n      gradient = _ref.gradient,\n      onValueChange = _ref.onValueChange,\n      thumbTintColor = _ref.thumbTintColor;\n  return React.createElement(View, {\n    style: [styles.container, style]\n  }, React.createElement(View, {\n    style: styles.gradient\n  }, gradient), React.createElement(Slider, {\n    value: value,\n    step: step,\n    animateTransitions: true,\n    animationType: \"spring\",\n    thumbTouchSize: {\n      width: 48,\n      height: 48\n    },\n    maximumValue: maximumValue,\n    onValueChange: onValueChange,\n    minimumTrackTintColor: \"transparent\",\n    maximumTrackTintColor: \"transparent\",\n    thumbStyle: [styles.thumb, {\n      backgroundColor: thumbTintColor\n    }]\n  }));\n};\n\nexport default GradientSlider;\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    height: 32\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n    borderRadius: 24 / 2,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    shadowOpacity: 0.1\n  },\n  gradient: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    height: 6\n  }\n});\nGradientSlider.propTypes = {\n  value: PropTypes.number.isRequired,\n  step: PropTypes.number.isRequired,\n  maximumValue: PropTypes.number.isRequired,\n  onValueChange: PropTypes.func.isRequired,\n  thumbTintColor: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-color/src/sliders/GradientSlider.js"],"names":["React","PropTypes","Slider","Gradient","GradientSlider","style","value","step","maximumValue","gradient","onValueChange","thumbTintColor","styles","container","width","height","thumb","backgroundColor","StyleSheet","create","flexDirection","justifyContent","alignItems","borderRadius","shadowColor","shadowOffset","shadowRadius","shadowOpacity","position","left","right","propTypes","number","isRequired","func","string"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAQjB;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADJC,cACI,QADJA,cACI;AACJ,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBR,KAAnB;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACH;AAApB,KAA+BA,QAA/B,CADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEH,KADT;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,kBAAkB,MAHpB;AAIE,IAAA,aAAa,EAAC,QAJhB;AAKE,IAAA,cAAc,EAAE;AAAEO,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,MAAM,EAAE;AAArB,KALlB;AAME,IAAA,YAAY,EAAEP,YANhB;AAOE,IAAA,aAAa,EAAEE,aAPjB;AAQE,IAAA,qBAAqB,EAAC,aARxB;AASE,IAAA,qBAAqB,EAAC,aATxB;AAUE,IAAA,UAAU,EAAE,CAACE,MAAM,CAACI,KAAR,EAAe;AAAEC,MAAAA,eAAe,EAAEN;AAAnB,KAAf;AAVd,IAFF,CADF;AAiBD,CA1BD;;AA4BA,eAAeP,cAAf;AAEA,IAAMQ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,aAAa,EAAE,QADN;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,SAHH;AAITP,IAAAA,MAAM,EAAE;AAJC,GADoB;AAO/BC,EAAAA,KAAK,EAAE;AACLF,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLQ,IAAAA,YAAY,EAAE,KAAK,CAHd;AAILC,IAAAA,WAAW,EAAE,OAJR;AAKLC,IAAAA,YAAY,EAAE;AAAEX,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KALT;AAMLW,IAAAA,YAAY,EAAE,CANT;AAOLC,IAAAA,aAAa,EAAE;AAPV,GAPwB;AAgB/BlB,EAAAA,QAAQ,EAAE;AACRmB,IAAAA,QAAQ,EAAE,UADF;AAERC,IAAAA,IAAI,EAAE,CAFE;AAGRC,IAAAA,KAAK,EAAE,CAHC;AAIRf,IAAAA,MAAM,EAAE;AAJA;AAhBqB,CAAlB,CAAf;AAwBAX,cAAc,CAAC2B,SAAf,GAA2B;AACzBzB,EAAAA,KAAK,EAAEL,SAAS,CAAC+B,MAAV,CAAiBC,UADC;AAEzB1B,EAAAA,IAAI,EAAEN,SAAS,CAAC+B,MAAV,CAAiBC,UAFE;AAGzBzB,EAAAA,YAAY,EAAEP,SAAS,CAAC+B,MAAV,CAAiBC,UAHN;AAIzBvB,EAAAA,aAAa,EAAET,SAAS,CAACiC,IAAV,CAAeD,UAJL;AAKzBtB,EAAAA,cAAc,EAAEV,SAAS,CAACkC,MAAV,CAAiBF;AALR,CAA3B","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Platform } from 'react-native';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-native-slider';\nimport Gradient from '../gradients/Gradient';\n\nconst GradientSlider = ({\n  style,\n  value,\n  step,\n  maximumValue,\n  gradient,\n  onValueChange,\n  thumbTintColor\n}) => {\n  return (\n    <View style={[styles.container, style]}>\n      <View style={styles.gradient}>{gradient}</View>\n      <Slider\n        value={value}\n        step={step}\n        animateTransitions\n        animationType=\"spring\"\n        thumbTouchSize={{ width: 48, height: 48 }}\n        maximumValue={maximumValue}\n        onValueChange={onValueChange}\n        minimumTrackTintColor=\"transparent\"\n        maximumTrackTintColor=\"transparent\"\n        thumbStyle={[styles.thumb, { backgroundColor: thumbTintColor }]}\n      />\n    </View>\n  );\n};\n\nexport default GradientSlider;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    height: 32\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n    borderRadius: 24 / 2,\n    shadowColor: 'black',\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 4,\n    shadowOpacity: 0.1\n  },\n  gradient: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    height: 6,\n  },\n});\n\nGradientSlider.propTypes = {\n  value: PropTypes.number.isRequired,\n  step: PropTypes.number.isRequired,\n  maximumValue: PropTypes.number.isRequired,\n  onValueChange: PropTypes.func.isRequired,\n  thumbTintColor: PropTypes.string.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}