{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport Colors from \"../../style/colors\";\nimport BorderRadiuses from \"../../style/borderRadiuses\";\nimport Spacings from \"../../style/spacings\";\nimport { StatesConfig } from \"./WizardStates\";\n\nvar WizardStep = function (_Component) {\n  _inherits(WizardStep, _Component);\n\n  var _super = _createSuper(WizardStep);\n\n  function WizardStep() {\n    _classCallCheck(this, WizardStep);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(WizardStep, [{\n    key: \"getProps\",\n    value: function getProps() {\n      var props = this.props;\n      var state = props.state,\n          propsActiveConfig = props.activeConfig,\n          index = props.index,\n          activeIndex = props.activeIndex;\n      var config = StatesConfig[state];\n      var activeConfig = index === activeIndex ? propsActiveConfig : {};\n      return _objectSpread(_objectSpread(_objectSpread({}, config), props), activeConfig);\n    }\n  }, {\n    key: \"getAccessibilityLabel\",\n    value: function getAccessibilityLabel() {\n      var _this$props = this.props,\n          index = _this$props.index,\n          label = _this$props.label,\n          state = _this$props.state;\n      var config = StatesConfig[state];\n      var extraInfo = (config == null ? void 0 : config.accessibilityInfo) || '';\n      return \"Step \" + (index + 1) + \", \" + label + \", \" + extraInfo;\n    }\n  }, {\n    key: \"renderCircle\",\n    value: function renderCircle(props) {\n      var testID = props.testID,\n          index = props.index,\n          activeIndex = props.activeIndex,\n          onPress = props.onPress,\n          indexLabelStyle = props.indexLabelStyle,\n          circleSize = props.circleSize,\n          color = props.color,\n          _props$circleColor = props.circleColor,\n          circleColor = _props$circleColor === void 0 ? color : _props$circleColor,\n          circleBackgroundColor = props.circleBackgroundColor,\n          icon = props.icon,\n          enabled = props.enabled;\n      var hitSlopSize = Spacings.s2;\n      return React.createElement(TouchableOpacity, {\n        testID: testID + \".circle\",\n        style: [styles.circle, !!circleSize && {\n          width: circleSize,\n          height: circleSize\n        }, {\n          borderColor: circleColor,\n          backgroundColor: circleBackgroundColor\n        }],\n        onPress: enabled ? onPress : undefined,\n        hitSlop: {\n          top: hitSlopSize,\n          bottom: hitSlopSize,\n          left: hitSlopSize,\n          right: hitSlopSize\n        },\n        disabled: !enabled,\n        accessibilityLabel: this.getAccessibilityLabel()\n      }, index === activeIndex || _.isUndefined(icon) ? React.createElement(Text, {\n        text80: true,\n        testID: testID + \".index\",\n        style: [{\n          color: color\n        }, indexLabelStyle]\n      }, index + 1) : React.createElement(Image, {\n        testID: testID + \".image\",\n        source: icon,\n        tintColor: color\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.getProps();\n      var testID = props.testID,\n          label = props.label,\n          labelStyle = props.labelStyle,\n          index = props.index,\n          activeIndex = props.activeIndex,\n          maxWidth = props.maxWidth,\n          connectorStyle = props.connectorStyle;\n      return React.createElement(View, {\n        testID: testID,\n        row: true,\n        center: true,\n        flex: index !== activeIndex\n      }, index > activeIndex && React.createElement(View, {\n        flex: true,\n        style: [styles.connector, connectorStyle]\n      }), this.renderCircle(props), index === activeIndex && React.createElement(Text, {\n        text80: true,\n        testID: testID + \".label\",\n        numberOfLines: 1,\n        style: [styles.label, {\n          maxWidth: maxWidth\n        }, labelStyle],\n        accessible: false\n      }, label), index < activeIndex && React.createElement(View, {\n        flex: true,\n        style: [styles.connector, connectorStyle]\n      }));\n    }\n  }]);\n\n  return WizardStep;\n}(Component);\n\nWizardStep.propTypes = {\n  index: _pt.number,\n  maxWidth: _pt.number\n};\nWizardStep.displayName = 'Wizard.Step';\nWizardStep.defaultProps = {\n  index: 0,\n  maxWidth: 0\n};\nexport default asBaseComponent(WizardStep);\nvar styles = StyleSheet.create({\n  connector: {\n    borderWidth: 0.5,\n    borderColor: Colors.grey60\n  },\n  circle: {\n    width: 24,\n    height: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: BorderRadiuses.br100,\n    borderWidth: 1\n  },\n  label: {\n    marginHorizontal: 8,\n    color: Colors.grey20\n  }\n});","map":{"version":3,"sources":["C:/Users/ruthe/OneDrive/Área de Trabalho/projetos/xmrwallet/node_modules/react-native-ui-lib/src/components/wizard/WizardStep.js"],"names":["_pt","_","React","Component","View","Text","Image","TouchableOpacity","asBaseComponent","Colors","BorderRadiuses","Spacings","StatesConfig","WizardStep","props","state","propsActiveConfig","activeConfig","index","activeIndex","config","label","extraInfo","accessibilityInfo","testID","onPress","indexLabelStyle","circleSize","color","circleColor","circleBackgroundColor","icon","enabled","hitSlopSize","s2","styles","circle","width","height","borderColor","backgroundColor","undefined","top","bottom","left","right","getAccessibilityLabel","isUndefined","getProps","labelStyle","maxWidth","connectorStyle","connector","renderCircle","propTypes","number","displayName","defaultProps","StyleSheet","create","borderWidth","grey60","alignItems","justifyContent","borderRadius","br100","marginHorizontal","grey20"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { StyleSheet } from 'react-native';\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport Colors from \"../../style/colors\";\nimport BorderRadiuses from \"../../style/borderRadiuses\";\nimport Spacings from \"../../style/spacings\";\nimport { StatesConfig } from \"./WizardStates\"; // Includes private props from the Wizard\n\n/**\n * @description: WizardStep Component: a wizard presents a series of steps in  prescribed order\n * that the user needs to complete in order to accomplish a goal (e.g. purchase a product).\n *\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/WizardScreen.tsx\n * @notes: Use Wizard with nested Wizard.Step(s) to achieve the desired result.\n */\nclass WizardStep extends Component {\n  static propTypes = {\n    index: _pt.number,\n    maxWidth: _pt.number\n  };\n  static displayName = 'Wizard.Step';\n  static defaultProps = {\n    index: 0,\n    maxWidth: 0\n  };\n\n  getProps() {\n    const props = this.props;\n    const {\n      state,\n      activeConfig: propsActiveConfig,\n      index,\n      activeIndex\n    } = props;\n    const config = StatesConfig[state];\n    const activeConfig = index === activeIndex ? propsActiveConfig : {};\n    return { ...config,\n      ...props,\n      ...activeConfig\n    };\n  }\n\n  getAccessibilityLabel() {\n    const {\n      index,\n      label,\n      state\n    } = this.props;\n    const config = StatesConfig[state];\n    const extraInfo = config?.accessibilityInfo || '';\n    return `Step ${index + 1}, ${label}, ${extraInfo}`;\n  }\n\n  renderCircle(props) {\n    const {\n      testID,\n      index,\n      activeIndex,\n      onPress,\n      indexLabelStyle,\n      circleSize,\n      color,\n      circleColor = color,\n      circleBackgroundColor,\n      icon,\n      enabled\n    } = props;\n    const hitSlopSize = Spacings.s2;\n    return <TouchableOpacity testID={`${testID}.circle`} style={[styles.circle, !!circleSize && {\n      width: circleSize,\n      height: circleSize\n    }, {\n      borderColor: circleColor,\n      backgroundColor: circleBackgroundColor\n    }]} onPress={enabled ? onPress : undefined} hitSlop={{\n      top: hitSlopSize,\n      bottom: hitSlopSize,\n      left: hitSlopSize,\n      right: hitSlopSize\n    }} disabled={!enabled} accessibilityLabel={this.getAccessibilityLabel()}>\n        {index === activeIndex || _.isUndefined(icon) ? <Text text80 testID={`${testID}.index`} style={[{\n        color\n      }, indexLabelStyle]}>\n            {index + 1}\n          </Text> : <Image testID={`${testID}.image`} source={icon} tintColor={color} />}\n      </TouchableOpacity>;\n  }\n\n  render() {\n    const props = this.getProps();\n    const {\n      testID,\n      label,\n      labelStyle,\n      index,\n      activeIndex,\n      maxWidth,\n      connectorStyle\n    } = props;\n    return <View testID={testID} row center flex={index !== activeIndex}>\n        {index > activeIndex && <View flex style={[styles.connector, connectorStyle]} />}\n        {this.renderCircle(props)}\n        {index === activeIndex && <Text text80 testID={`${testID}.label`} numberOfLines={1} style={[styles.label, {\n        maxWidth\n      }, labelStyle]} accessible={false}>\n            {label}\n          </Text>}\n        {index < activeIndex && <View flex style={[styles.connector, connectorStyle]} />}\n      </View>;\n  }\n\n}\n\nexport default asBaseComponent(WizardStep);\nconst styles = StyleSheet.create({\n  connector: {\n    borderWidth: 0.5,\n    borderColor: Colors.grey60\n  },\n  circle: {\n    width: 24,\n    height: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: BorderRadiuses.br100,\n    borderWidth: 1\n  },\n  label: {\n    marginHorizontal: 8,\n    color: Colors.grey20\n  }\n});"]},"metadata":{},"sourceType":"module"}